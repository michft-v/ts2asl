export const libraryDefinitionAsString = `declare module '@ts2asl/asl-lib/asl' {

export type While = {
  condition: () => boolean;
  block: Function;
  name?: string;
};
export interface Foreach<T> {
  items: T[] | undefined | (() => T[]);
  iterator: <U>(item: T, objectContext: StateMachineContext<U>) => void;
  comment?: string;
  name?: string;
}
export type DoWhile = {
  condition: () => boolean;
  block: Function;
  name?: string;
};
export type If = {
  condition: boolean | (() => boolean);
  then: Function;
  else?: Function;
  comment?: string;
  name?: string;
};

export interface Succeed {
  comment?: string;
  name?: string;
}
export interface Try {
  try: Function;
  catch?: CatchConfiguration;
  finally?: Function;
  comment?: string;
  name?: string;
}
export interface Switch<T> {
  expression: () => T;
  cases: ({} | {
      label: T;
      block: Function
  })[]        
  comment?: string;
  name?: string;
}

export  const typescriptSwitch: <T>(args: Switch<T>) => Promise<void>;
export  const typescriptTry: (args: Try) => Promise<void>;
export  const typescriptDoWhile: (args: DoWhile) => Promise<void>;
export  const typescriptWhile: (args: While) => Promise<void>;
export  const typescriptForeach: <T>(args: Foreach<T>) => Promise<void>;
export  const typescriptIf: (args: If) => Promise<void>;

}// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   ../@aws-sdk/client-s3
//   ../@aws-sdk/client-athena
//   ../@aws-sdk/client-ecs
//   ../@aws-sdk/client-dynamodb
//   ../@aws-sdk/client-eventbridge
//   sdk-integrations-lambda.d.ts
//   ../@aws-sdk/client-ses
//   ../@aws-sdk/client-sns
//   ../@aws-sdk/client-sqs
//   ../@aws-sdk/client-ssm
//   ../@aws-sdk/client-sfn
//   ../@aws-sdk/client-textract
//   ../@aws-sdk/client-organizations
//   ../@aws-sdk/client-codebuild
//   ../@aws-sdk/client-cloudwatch
//   ../@aws-sdk/client-iam
//   ../@aws-sdk/client-sts

declare module '@ts2asl/asl-lib' {
    import { S3ClientConfig } from "@aws-sdk/client-s3";
    export type ClientConfig = S3ClientConfig;
    export * from "@ts2asl/asl-lib/asl";
    export * from "@ts2asl/asl-lib/sdk-integrations-athena";
    export * from "@ts2asl/asl-lib/sdk-integrations-ecs";
    export * from "@ts2asl/asl-lib/sdk-integrations-dynamodb";
    export * from "@ts2asl/asl-lib/sdk-integrations-eventbridge";
    export * from "@ts2asl/asl-lib/sdk-integrations-lambda";
    export * from "@ts2asl/asl-lib/sdk-integrations-s3";
    export * from "@ts2asl/asl-lib/sdk-integrations-ses";
    export * from "@ts2asl/asl-lib/sdk-integrations-sns";
    export * from "@ts2asl/asl-lib/sdk-integrations-sqs";
    export * from "@ts2asl/asl-lib/sdk-integrations-ssm";
    export * from "@ts2asl/asl-lib/sdk-integrations-sfn";
    export * from "@ts2asl/asl-lib/sdk-integrations-textract";
    export * from "@ts2asl/asl-lib/sdk-integrations-organizations";
    export * from "@ts2asl/asl-lib/sdk-integrations-codebuild";
    export * from "@ts2asl/asl-lib/sdk-integrations-cloudwatch";
    export * from "@ts2asl/asl-lib/sdk-integrations-iam";
    export * from "@ts2asl/asl-lib/sdk-integrations-sts";
    export * from "@ts2asl/asl-lib/deploy";
    export * from "@ts2asl/asl-lib/runtime";
    export * from "@ts2asl/asl-lib/testing";
    export const clientConfig: S3ClientConfig;
}

declare module '@ts2asl/asl-lib/asl' {
    export type AslError = {
        Cause: string;
        Error: string;
    };
    export type CatchConfiguration = Array<{
        errorEquals: string[];
        block: (error?: AslError) => unknown;
    }>;
    export type RetryConfiguration = Array<{
        errorEquals: string[];
        intervalSeconds?: number;
        maxAttempts?: number;
        backoffRate?: number;
    }>;
    export interface Wait {
        seconds?: number | (() => number);
        timestamp?: string | (() => string);
        comment?: string;
        name?: string;
    }
    export interface Try {
        try: Function;
        catch?: CatchConfiguration;
        finally?: Function;
        comment?: string;
        name?: string;
    }
    export interface Task {
        name?: string;
        resource: string;
        parameters?: unknown | (() => unknown) | (<U>(objectContext: StateMachineContext<U>) => unknown);
        catch?: CatchConfiguration;
        retry?: RetryConfiguration;
        timeoutSeconds?: number;
        heartbeatSeconds?: number;
    }
    export interface SdkIntegrationTask<TInput> {
        name?: string;
        parameters: TInput;
        catch?: CatchConfiguration;
        retry?: RetryConfiguration;
        timeoutSeconds?: number;
        heartbeatSeconds?: number;
    }
    export interface Pass<T> {
        parameters: T | (() => T) | (<U>(objectContext: StateMachineContext<U>) => T);
        comment?: string;
        name?: string;
    }
    export interface Fail {
        error?: string;
        cause?: string;
        comment?: string;
        name?: string;
    }
    export interface Map<T, O> {
        parameters?: unknown | (() => unknown) | (<U>(objectContext: StateMachineContext<U>) => unknown);
        items: T[] | undefined | (() => T[]);
        iterator: <U>(item: T, objectContext: StateMachineContext<U>) => O;
        maxConcurrency?: number;
        comment?: string;
        name?: string;
    }
    export interface Succeed {
        comment?: string;
        name?: string;
    }
    export interface Parallel<T> {
        branches: (() => void | {})[];
        catch?: CatchConfiguration;
        retry?: RetryConfiguration;
        comment?: string;
        name?: string;
    }
    export type TypescriptInvoke<P, R> = {
        catch?: CatchConfiguration;
        retry?: RetryConfiguration;
        timeoutSeconds?: number;
        heartbeatSeconds?: number;
        comment?: string;
        name?: string;
    } & ({
        resource: ((parameters: P) => Promise<R>) | ((parameters: P) => R);
        parameters: P | (() => P);
    } | {
        resource: () => (R | Promise<R>);
    });
    export interface Choice {
        choices: Array<{
            condition: () => boolean;
            block: Function;
        }>;
        default?: Function;
        comment?: string;
        name?: string;
    }
    export interface StateMachineContext<TInput> {
        readonly execution: {
            readonly id: string;
            readonly input: TInput;
            readonly name: string;
            readonly roleArn: string;
            readonly startTime: string;
        };
        readonly stateMachine: {
            readonly id: string;
            readonly name: string;
        };
        readonly state: {
            readonly name: string;
            readonly enteredTime: string;
        };
        readonly task: {
            readonly name: string;
            readonly token?: string;
        };
    }
    export const typescriptInvoke: <P, R>(args: TypescriptInvoke<P, R>) => Promise<R>;
    export const task: <TResult>(args: Task) => Promise<TResult>;
    export const wait: (args: Wait) => Promise<void>;
    export const parallel: <Item>(args: Parallel<Item>) => Promise<unknown[]>;
    export const choice: (args: Choice) => Promise<void>;
    export const map: <Input, Output>(args: Map<Input, Output>) => Promise<Output[]>;
    export const pass: <T>(args: Pass<T>) => T;
    export const succeed: (x: Succeed) => {};
    export const fail: (x: Fail) => never;
    export const jsonPathLength: <T>(items: T[]) => number;
    export const jsonPathFilter: <T>(items: T[], predicate: (x: T) => boolean) => T[];
    export const jsonPathSlice: <T>(items: T[], start: number, end?: number | undefined, step?: number | undefined) => T[];
    export const jsonPathExpression: (items: unknown, expression: string) => unknown;
    export const jsonPathMap: (items: unknown[], expression: string) => unknown[];
    export namespace convert {
        function booleanToString(arg: boolean | undefined): string;
        function numberToString(arg: number | undefined): string;
        function stringToBoolean(arg: string | undefined): boolean;
        function stringToNumber(arg: string | undefined): number;
    }
    export namespace states {
        function format(format: string, ...args: unknown[]): string;
        function stringToJson(arg: string | undefined): unknown;
        function jsonToString(arg: unknown): string;
        function array(...args: unknown[]): unknown[];
    }
}

declare module '@ts2asl/asl-lib/sdk-integrations-athena' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { BatchGetNamedQueryCommandInput, BatchGetNamedQueryCommandOutput } from "@aws-sdk/client-athena";
    import { BatchGetQueryExecutionCommandInput, BatchGetQueryExecutionCommandOutput } from "@aws-sdk/client-athena";
    import { CreateDataCatalogCommandInput, CreateDataCatalogCommandOutput } from "@aws-sdk/client-athena";
    import { CreateNamedQueryCommandInput, CreateNamedQueryCommandOutput } from "@aws-sdk/client-athena";
    import { CreatePreparedStatementCommandInput, CreatePreparedStatementCommandOutput } from "@aws-sdk/client-athena";
    import { CreateWorkGroupCommandInput, CreateWorkGroupCommandOutput } from "@aws-sdk/client-athena";
    import { DeleteDataCatalogCommandInput, DeleteDataCatalogCommandOutput } from "@aws-sdk/client-athena";
    import { DeleteNamedQueryCommandInput, DeleteNamedQueryCommandOutput } from "@aws-sdk/client-athena";
    import { DeletePreparedStatementCommandInput, DeletePreparedStatementCommandOutput } from "@aws-sdk/client-athena";
    import { DeleteWorkGroupCommandInput, DeleteWorkGroupCommandOutput } from "@aws-sdk/client-athena";
    import { GetDataCatalogCommandInput, GetDataCatalogCommandOutput } from "@aws-sdk/client-athena";
    import { GetDatabaseCommandInput, GetDatabaseCommandOutput } from "@aws-sdk/client-athena";
    import { GetNamedQueryCommandInput, GetNamedQueryCommandOutput } from "@aws-sdk/client-athena";
    import { GetPreparedStatementCommandInput, GetPreparedStatementCommandOutput } from "@aws-sdk/client-athena";
    import { GetQueryExecutionCommandInput, GetQueryExecutionCommandOutput } from "@aws-sdk/client-athena";
    import { GetQueryResultsCommandInput, GetQueryResultsCommandOutput } from "@aws-sdk/client-athena";
    import { GetTableMetadataCommandInput, GetTableMetadataCommandOutput } from "@aws-sdk/client-athena";
    import { GetWorkGroupCommandInput, GetWorkGroupCommandOutput } from "@aws-sdk/client-athena";
    import { ListDataCatalogsCommandInput, ListDataCatalogsCommandOutput } from "@aws-sdk/client-athena";
    import { ListDatabasesCommandInput, ListDatabasesCommandOutput } from "@aws-sdk/client-athena";
    import { ListEngineVersionsCommandInput, ListEngineVersionsCommandOutput } from "@aws-sdk/client-athena";
    import { ListNamedQueriesCommandInput, ListNamedQueriesCommandOutput } from "@aws-sdk/client-athena";
    import { ListPreparedStatementsCommandInput, ListPreparedStatementsCommandOutput } from "@aws-sdk/client-athena";
    import { ListQueryExecutionsCommandInput, ListQueryExecutionsCommandOutput } from "@aws-sdk/client-athena";
    import { ListTableMetadataCommandInput, ListTableMetadataCommandOutput } from "@aws-sdk/client-athena";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-athena";
    import { ListWorkGroupsCommandInput, ListWorkGroupsCommandOutput } from "@aws-sdk/client-athena";
    import { StartQueryExecutionCommandInput, StartQueryExecutionCommandOutput } from "@aws-sdk/client-athena";
    import { StopQueryExecutionCommandInput, StopQueryExecutionCommandOutput } from "@aws-sdk/client-athena";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-athena";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-athena";
    import { UpdateDataCatalogCommandInput, UpdateDataCatalogCommandOutput } from "@aws-sdk/client-athena";
    import { UpdatePreparedStatementCommandInput, UpdatePreparedStatementCommandOutput } from "@aws-sdk/client-athena";
    import { UpdateWorkGroupCommandInput, UpdateWorkGroupCommandOutput } from "@aws-sdk/client-athena";
    export const sdkAthenaBatchGetNamedQuery: (input: SdkIntegrationTask<BatchGetNamedQueryCommandInput>) => Promise<BatchGetNamedQueryCommandOutput>;
    export const sdkAthenaBatchGetQueryExecution: (input: SdkIntegrationTask<BatchGetQueryExecutionCommandInput>) => Promise<BatchGetQueryExecutionCommandOutput>;
    export const sdkAthenaCreateDataCatalog: (input: SdkIntegrationTask<CreateDataCatalogCommandInput>) => Promise<CreateDataCatalogCommandOutput>;
    export const sdkAthenaCreateNamedQuery: (input: SdkIntegrationTask<CreateNamedQueryCommandInput>) => Promise<CreateNamedQueryCommandOutput>;
    export const sdkAthenaCreatePreparedStatement: (input: SdkIntegrationTask<CreatePreparedStatementCommandInput>) => Promise<CreatePreparedStatementCommandOutput>;
    export const sdkAthenaCreateWorkGroup: (input: SdkIntegrationTask<CreateWorkGroupCommandInput>) => Promise<CreateWorkGroupCommandOutput>;
    export const sdkAthenaDeleteDataCatalog: (input: SdkIntegrationTask<DeleteDataCatalogCommandInput>) => Promise<DeleteDataCatalogCommandOutput>;
    export const sdkAthenaDeleteNamedQuery: (input: SdkIntegrationTask<DeleteNamedQueryCommandInput>) => Promise<DeleteNamedQueryCommandOutput>;
    export const sdkAthenaDeletePreparedStatement: (input: SdkIntegrationTask<DeletePreparedStatementCommandInput>) => Promise<DeletePreparedStatementCommandOutput>;
    export const sdkAthenaDeleteWorkGroup: (input: SdkIntegrationTask<DeleteWorkGroupCommandInput>) => Promise<DeleteWorkGroupCommandOutput>;
    export const sdkAthenaGetDataCatalog: (input: SdkIntegrationTask<GetDataCatalogCommandInput>) => Promise<GetDataCatalogCommandOutput>;
    export const sdkAthenaGetDatabase: (input: SdkIntegrationTask<GetDatabaseCommandInput>) => Promise<GetDatabaseCommandOutput>;
    export const sdkAthenaGetNamedQuery: (input: SdkIntegrationTask<GetNamedQueryCommandInput>) => Promise<GetNamedQueryCommandOutput>;
    export const sdkAthenaGetPreparedStatement: (input: SdkIntegrationTask<GetPreparedStatementCommandInput>) => Promise<GetPreparedStatementCommandOutput>;
    export const sdkAthenaGetQueryExecution: (input: SdkIntegrationTask<GetQueryExecutionCommandInput>) => Promise<GetQueryExecutionCommandOutput>;
    export const sdkAthenaGetQueryResults: (input: SdkIntegrationTask<GetQueryResultsCommandInput>) => Promise<GetQueryResultsCommandOutput>;
    export const sdkAthenaGetTableMetadata: (input: SdkIntegrationTask<GetTableMetadataCommandInput>) => Promise<GetTableMetadataCommandOutput>;
    export const sdkAthenaGetWorkGroup: (input: SdkIntegrationTask<GetWorkGroupCommandInput>) => Promise<GetWorkGroupCommandOutput>;
    export const sdkAthenaListDataCatalogs: (input: SdkIntegrationTask<ListDataCatalogsCommandInput>) => Promise<ListDataCatalogsCommandOutput>;
    export const sdkAthenaListDatabases: (input: SdkIntegrationTask<ListDatabasesCommandInput>) => Promise<ListDatabasesCommandOutput>;
    export const sdkAthenaListEngineVersions: (input: SdkIntegrationTask<ListEngineVersionsCommandInput>) => Promise<ListEngineVersionsCommandOutput>;
    export const sdkAthenaListNamedQueries: (input: SdkIntegrationTask<ListNamedQueriesCommandInput>) => Promise<ListNamedQueriesCommandOutput>;
    export const sdkAthenaListPreparedStatements: (input: SdkIntegrationTask<ListPreparedStatementsCommandInput>) => Promise<ListPreparedStatementsCommandOutput>;
    export const sdkAthenaListQueryExecutions: (input: SdkIntegrationTask<ListQueryExecutionsCommandInput>) => Promise<ListQueryExecutionsCommandOutput>;
    export const sdkAthenaListTableMetadata: (input: SdkIntegrationTask<ListTableMetadataCommandInput>) => Promise<ListTableMetadataCommandOutput>;
    export const sdkAthenaListTagsForResource: (input: SdkIntegrationTask<ListTagsForResourceCommandInput>) => Promise<ListTagsForResourceCommandOutput>;
    export const sdkAthenaListWorkGroups: (input: SdkIntegrationTask<ListWorkGroupsCommandInput>) => Promise<ListWorkGroupsCommandOutput>;
    export const sdkAthenaStartQueryExecution: (input: SdkIntegrationTask<StartQueryExecutionCommandInput>) => Promise<StartQueryExecutionCommandOutput>;
    export const sdkAthenaStopQueryExecution: (input: SdkIntegrationTask<StopQueryExecutionCommandInput>) => Promise<StopQueryExecutionCommandOutput>;
    export const sdkAthenaTagResource: (input: SdkIntegrationTask<TagResourceCommandInput>) => Promise<TagResourceCommandOutput>;
    export const sdkAthenaUntagResource: (input: SdkIntegrationTask<UntagResourceCommandInput>) => Promise<UntagResourceCommandOutput>;
    export const sdkAthenaUpdateDataCatalog: (input: SdkIntegrationTask<UpdateDataCatalogCommandInput>) => Promise<UpdateDataCatalogCommandOutput>;
    export const sdkAthenaUpdatePreparedStatement: (input: SdkIntegrationTask<UpdatePreparedStatementCommandInput>) => Promise<UpdatePreparedStatementCommandOutput>;
    export const sdkAthenaUpdateWorkGroup: (input: SdkIntegrationTask<UpdateWorkGroupCommandInput>) => Promise<UpdateWorkGroupCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-ecs' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { CreateCapacityProviderCommandInput, CreateCapacityProviderCommandOutput } from "@aws-sdk/client-ecs";
    import { CreateServiceCommandInput, CreateServiceCommandOutput } from "@aws-sdk/client-ecs";
    import { CreateTaskSetCommandInput, CreateTaskSetCommandOutput } from "@aws-sdk/client-ecs";
    import { DeleteAccountSettingCommandInput, DeleteAccountSettingCommandOutput } from "@aws-sdk/client-ecs";
    import { DeleteAttributesCommandInput, DeleteAttributesCommandOutput } from "@aws-sdk/client-ecs";
    import { DeleteCapacityProviderCommandInput, DeleteCapacityProviderCommandOutput } from "@aws-sdk/client-ecs";
    import { DeleteClusterCommandInput, DeleteClusterCommandOutput } from "@aws-sdk/client-ecs";
    import { DeleteServiceCommandInput, DeleteServiceCommandOutput } from "@aws-sdk/client-ecs";
    import { DeleteTaskSetCommandInput, DeleteTaskSetCommandOutput } from "@aws-sdk/client-ecs";
    import { DeregisterContainerInstanceCommandInput, DeregisterContainerInstanceCommandOutput } from "@aws-sdk/client-ecs";
    import { DeregisterTaskDefinitionCommandInput, DeregisterTaskDefinitionCommandOutput } from "@aws-sdk/client-ecs";
    import { DescribeCapacityProvidersCommandInput, DescribeCapacityProvidersCommandOutput } from "@aws-sdk/client-ecs";
    import { DescribeClustersCommandInput, DescribeClustersCommandOutput } from "@aws-sdk/client-ecs";
    import { DescribeContainerInstancesCommandInput, DescribeContainerInstancesCommandOutput } from "@aws-sdk/client-ecs";
    import { DescribeServicesCommandInput, DescribeServicesCommandOutput } from "@aws-sdk/client-ecs";
    import { DescribeTaskDefinitionCommandInput, DescribeTaskDefinitionCommandOutput } from "@aws-sdk/client-ecs";
    import { DescribeTaskSetsCommandInput, DescribeTaskSetsCommandOutput } from "@aws-sdk/client-ecs";
    import { DescribeTasksCommandInput, DescribeTasksCommandOutput } from "@aws-sdk/client-ecs";
    import { DiscoverPollEndpointCommandInput, DiscoverPollEndpointCommandOutput } from "@aws-sdk/client-ecs";
    import { ExecuteCommandCommandInput, ExecuteCommandCommandOutput } from "@aws-sdk/client-ecs";
    import { ListAccountSettingsCommandInput, ListAccountSettingsCommandOutput } from "@aws-sdk/client-ecs";
    import { ListAttributesCommandInput, ListAttributesCommandOutput } from "@aws-sdk/client-ecs";
    import { ListClustersCommandInput, ListClustersCommandOutput } from "@aws-sdk/client-ecs";
    import { ListContainerInstancesCommandInput, ListContainerInstancesCommandOutput } from "@aws-sdk/client-ecs";
    import { ListServicesCommandInput, ListServicesCommandOutput } from "@aws-sdk/client-ecs";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-ecs";
    import { ListTaskDefinitionFamiliesCommandInput, ListTaskDefinitionFamiliesCommandOutput } from "@aws-sdk/client-ecs";
    import { ListTaskDefinitionsCommandInput, ListTaskDefinitionsCommandOutput } from "@aws-sdk/client-ecs";
    import { ListTasksCommandInput, ListTasksCommandOutput } from "@aws-sdk/client-ecs";
    import { PutAccountSettingCommandInput, PutAccountSettingCommandOutput } from "@aws-sdk/client-ecs";
    import { PutAccountSettingDefaultCommandInput, PutAccountSettingDefaultCommandOutput } from "@aws-sdk/client-ecs";
    import { PutAttributesCommandInput, PutAttributesCommandOutput } from "@aws-sdk/client-ecs";
    import { PutClusterCapacityProvidersCommandInput, PutClusterCapacityProvidersCommandOutput } from "@aws-sdk/client-ecs";
    import { RegisterContainerInstanceCommandInput, RegisterContainerInstanceCommandOutput } from "@aws-sdk/client-ecs";
    import { RegisterTaskDefinitionCommandInput, RegisterTaskDefinitionCommandOutput } from "@aws-sdk/client-ecs";
    import { RunTaskCommandInput, RunTaskCommandOutput } from "@aws-sdk/client-ecs";
    import { StartTaskCommandInput, StartTaskCommandOutput } from "@aws-sdk/client-ecs";
    import { StopTaskCommandInput, StopTaskCommandOutput } from "@aws-sdk/client-ecs";
    import { SubmitAttachmentStateChangesCommandInput, SubmitAttachmentStateChangesCommandOutput } from "@aws-sdk/client-ecs";
    import { SubmitContainerStateChangeCommandInput, SubmitContainerStateChangeCommandOutput } from "@aws-sdk/client-ecs";
    import { SubmitTaskStateChangeCommandInput, SubmitTaskStateChangeCommandOutput } from "@aws-sdk/client-ecs";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-ecs";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-ecs";
    import { UpdateCapacityProviderCommandInput, UpdateCapacityProviderCommandOutput } from "@aws-sdk/client-ecs";
    import { UpdateContainerAgentCommandInput, UpdateContainerAgentCommandOutput } from "@aws-sdk/client-ecs";
    import { UpdateContainerInstancesStateCommandInput, UpdateContainerInstancesStateCommandOutput } from "@aws-sdk/client-ecs";
    import { UpdateServiceCommandInput, UpdateServiceCommandOutput } from "@aws-sdk/client-ecs";
    import { UpdateServicePrimaryTaskSetCommandInput, UpdateServicePrimaryTaskSetCommandOutput } from "@aws-sdk/client-ecs";
    import { UpdateTaskSetCommandInput, UpdateTaskSetCommandOutput } from "@aws-sdk/client-ecs";
    export const sdkECSCreateCapacityProvider: (input: SdkIntegrationTask<CreateCapacityProviderCommandInput>) => Promise<CreateCapacityProviderCommandOutput>;
    export const sdkECSCreateService: (input: SdkIntegrationTask<CreateServiceCommandInput>) => Promise<CreateServiceCommandOutput>;
    export const sdkECSCreateTaskSet: (input: SdkIntegrationTask<CreateTaskSetCommandInput>) => Promise<CreateTaskSetCommandOutput>;
    export const sdkECSDeleteAccountSetting: (input: SdkIntegrationTask<DeleteAccountSettingCommandInput>) => Promise<DeleteAccountSettingCommandOutput>;
    export const sdkECSDeleteAttributes: (input: SdkIntegrationTask<DeleteAttributesCommandInput>) => Promise<DeleteAttributesCommandOutput>;
    export const sdkECSDeleteCapacityProvider: (input: SdkIntegrationTask<DeleteCapacityProviderCommandInput>) => Promise<DeleteCapacityProviderCommandOutput>;
    export const sdkECSDeleteCluster: (input: SdkIntegrationTask<DeleteClusterCommandInput>) => Promise<DeleteClusterCommandOutput>;
    export const sdkECSDeleteService: (input: SdkIntegrationTask<DeleteServiceCommandInput>) => Promise<DeleteServiceCommandOutput>;
    export const sdkECSDeleteTaskSet: (input: SdkIntegrationTask<DeleteTaskSetCommandInput>) => Promise<DeleteTaskSetCommandOutput>;
    export const sdkECSDeregisterContainerInstance: (input: SdkIntegrationTask<DeregisterContainerInstanceCommandInput>) => Promise<DeregisterContainerInstanceCommandOutput>;
    export const sdkECSDeregisterTaskDefinition: (input: SdkIntegrationTask<DeregisterTaskDefinitionCommandInput>) => Promise<DeregisterTaskDefinitionCommandOutput>;
    export const sdkECSDescribeCapacityProviders: (input: SdkIntegrationTask<DescribeCapacityProvidersCommandInput>) => Promise<DescribeCapacityProvidersCommandOutput>;
    export const sdkECSDescribeClusters: (input: SdkIntegrationTask<DescribeClustersCommandInput>) => Promise<DescribeClustersCommandOutput>;
    export const sdkECSDescribeContainerInstances: (input: SdkIntegrationTask<DescribeContainerInstancesCommandInput>) => Promise<DescribeContainerInstancesCommandOutput>;
    export const sdkECSDescribeServices: (input: SdkIntegrationTask<DescribeServicesCommandInput>) => Promise<DescribeServicesCommandOutput>;
    export const sdkECSDescribeTaskDefinition: (input: SdkIntegrationTask<DescribeTaskDefinitionCommandInput>) => Promise<DescribeTaskDefinitionCommandOutput>;
    export const sdkECSDescribeTaskSets: (input: SdkIntegrationTask<DescribeTaskSetsCommandInput>) => Promise<DescribeTaskSetsCommandOutput>;
    export const sdkECSDescribeTasks: (input: SdkIntegrationTask<DescribeTasksCommandInput>) => Promise<DescribeTasksCommandOutput>;
    export const sdkECSDiscoverPollEndpoint: (input: SdkIntegrationTask<DiscoverPollEndpointCommandInput>) => Promise<DiscoverPollEndpointCommandOutput>;
    export const sdkECSExecuteCommand: (input: SdkIntegrationTask<ExecuteCommandCommandInput>) => Promise<ExecuteCommandCommandOutput>;
    export const sdkECSListAccountSettings: (input: SdkIntegrationTask<ListAccountSettingsCommandInput>) => Promise<ListAccountSettingsCommandOutput>;
    export const sdkECSListAttributes: (input: SdkIntegrationTask<ListAttributesCommandInput>) => Promise<ListAttributesCommandOutput>;
    export const sdkECSListClusters: (input: SdkIntegrationTask<ListClustersCommandInput>) => Promise<ListClustersCommandOutput>;
    export const sdkECSListContainerInstances: (input: SdkIntegrationTask<ListContainerInstancesCommandInput>) => Promise<ListContainerInstancesCommandOutput>;
    export const sdkECSListServices: (input: SdkIntegrationTask<ListServicesCommandInput>) => Promise<ListServicesCommandOutput>;
    export const sdkECSListTagsForResource: (input: SdkIntegrationTask<ListTagsForResourceCommandInput>) => Promise<ListTagsForResourceCommandOutput>;
    export const sdkECSListTaskDefinitionFamilies: (input: SdkIntegrationTask<ListTaskDefinitionFamiliesCommandInput>) => Promise<ListTaskDefinitionFamiliesCommandOutput>;
    export const sdkECSListTaskDefinitions: (input: SdkIntegrationTask<ListTaskDefinitionsCommandInput>) => Promise<ListTaskDefinitionsCommandOutput>;
    export const sdkECSListTasks: (input: SdkIntegrationTask<ListTasksCommandInput>) => Promise<ListTasksCommandOutput>;
    export const sdkECSPutAccountSetting: (input: SdkIntegrationTask<PutAccountSettingCommandInput>) => Promise<PutAccountSettingCommandOutput>;
    export const sdkECSPutAccountSettingDefault: (input: SdkIntegrationTask<PutAccountSettingDefaultCommandInput>) => Promise<PutAccountSettingDefaultCommandOutput>;
    export const sdkECSPutAttributes: (input: SdkIntegrationTask<PutAttributesCommandInput>) => Promise<PutAttributesCommandOutput>;
    export const sdkECSPutClusterCapacityProviders: (input: SdkIntegrationTask<PutClusterCapacityProvidersCommandInput>) => Promise<PutClusterCapacityProvidersCommandOutput>;
    export const sdkECSRegisterContainerInstance: (input: SdkIntegrationTask<RegisterContainerInstanceCommandInput>) => Promise<RegisterContainerInstanceCommandOutput>;
    export const sdkECSRegisterTaskDefinition: (input: SdkIntegrationTask<RegisterTaskDefinitionCommandInput>) => Promise<RegisterTaskDefinitionCommandOutput>;
    export const sdkECSRunTask: (input: SdkIntegrationTask<RunTaskCommandInput>) => Promise<RunTaskCommandOutput>;
    export const sdkECSStartTask: (input: SdkIntegrationTask<StartTaskCommandInput>) => Promise<StartTaskCommandOutput>;
    export const sdkECSStopTask: (input: SdkIntegrationTask<StopTaskCommandInput>) => Promise<StopTaskCommandOutput>;
    export const sdkECSSubmitAttachmentStateChanges: (input: SdkIntegrationTask<SubmitAttachmentStateChangesCommandInput>) => Promise<SubmitAttachmentStateChangesCommandOutput>;
    export const sdkECSSubmitContainerStateChange: (input: SdkIntegrationTask<SubmitContainerStateChangeCommandInput>) => Promise<SubmitContainerStateChangeCommandOutput>;
    export const sdkECSSubmitTaskStateChange: (input: SdkIntegrationTask<SubmitTaskStateChangeCommandInput>) => Promise<SubmitTaskStateChangeCommandOutput>;
    export const sdkECSTagResource: (input: SdkIntegrationTask<TagResourceCommandInput>) => Promise<TagResourceCommandOutput>;
    export const sdkECSUntagResource: (input: SdkIntegrationTask<UntagResourceCommandInput>) => Promise<UntagResourceCommandOutput>;
    export const sdkECSUpdateCapacityProvider: (input: SdkIntegrationTask<UpdateCapacityProviderCommandInput>) => Promise<UpdateCapacityProviderCommandOutput>;
    export const sdkECSUpdateContainerAgent: (input: SdkIntegrationTask<UpdateContainerAgentCommandInput>) => Promise<UpdateContainerAgentCommandOutput>;
    export const sdkECSUpdateContainerInstancesState: (input: SdkIntegrationTask<UpdateContainerInstancesStateCommandInput>) => Promise<UpdateContainerInstancesStateCommandOutput>;
    export const sdkECSUpdateService: (input: SdkIntegrationTask<UpdateServiceCommandInput>) => Promise<UpdateServiceCommandOutput>;
    export const sdkECSUpdateServicePrimaryTaskSet: (input: SdkIntegrationTask<UpdateServicePrimaryTaskSetCommandInput>) => Promise<UpdateServicePrimaryTaskSetCommandOutput>;
    export const sdkECSUpdateTaskSet: (input: SdkIntegrationTask<UpdateTaskSetCommandInput>) => Promise<UpdateTaskSetCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-dynamodb' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { BatchExecuteStatementCommandInput, BatchExecuteStatementCommandOutput } from "@aws-sdk/client-dynamodb";
    import { BatchGetItemCommandInput, BatchGetItemCommandOutput } from "@aws-sdk/client-dynamodb";
    import { BatchWriteItemCommandInput, BatchWriteItemCommandOutput } from "@aws-sdk/client-dynamodb";
    import { CreateBackupCommandInput, CreateBackupCommandOutput } from "@aws-sdk/client-dynamodb";
    import { CreateGlobalTableCommandInput, CreateGlobalTableCommandOutput } from "@aws-sdk/client-dynamodb";
    import { CreateTableCommandInput, CreateTableCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DeleteBackupCommandInput, DeleteBackupCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DeleteItemCommandInput, DeleteItemCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DeleteTableCommandInput, DeleteTableCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DescribeBackupCommandInput, DescribeBackupCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DescribeContinuousBackupsCommandInput, DescribeContinuousBackupsCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DescribeContributorInsightsCommandInput, DescribeContributorInsightsCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DescribeEndpointsCommandInput, DescribeEndpointsCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DescribeExportCommandInput, DescribeExportCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DescribeGlobalTableCommandInput, DescribeGlobalTableCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DescribeGlobalTableSettingsCommandInput, DescribeGlobalTableSettingsCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DescribeKinesisStreamingDestinationCommandInput, DescribeKinesisStreamingDestinationCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DescribeLimitsCommandInput, DescribeLimitsCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DescribeTableCommandInput, DescribeTableCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DescribeTableReplicaAutoScalingCommandInput, DescribeTableReplicaAutoScalingCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DescribeTimeToLiveCommandInput, DescribeTimeToLiveCommandOutput } from "@aws-sdk/client-dynamodb";
    import { DisableKinesisStreamingDestinationCommandInput, DisableKinesisStreamingDestinationCommandOutput } from "@aws-sdk/client-dynamodb";
    import { EnableKinesisStreamingDestinationCommandInput, EnableKinesisStreamingDestinationCommandOutput } from "@aws-sdk/client-dynamodb";
    import { ExecuteStatementCommandInput, ExecuteStatementCommandOutput } from "@aws-sdk/client-dynamodb";
    import { ExecuteTransactionCommandInput, ExecuteTransactionCommandOutput } from "@aws-sdk/client-dynamodb";
    import { ExportTableToPointInTimeCommandInput, ExportTableToPointInTimeCommandOutput } from "@aws-sdk/client-dynamodb";
    import { GetItemCommandInput, GetItemCommandOutput } from "@aws-sdk/client-dynamodb";
    import { ListBackupsCommandInput, ListBackupsCommandOutput } from "@aws-sdk/client-dynamodb";
    import { ListContributorInsightsCommandInput, ListContributorInsightsCommandOutput } from "@aws-sdk/client-dynamodb";
    import { ListExportsCommandInput, ListExportsCommandOutput } from "@aws-sdk/client-dynamodb";
    import { ListGlobalTablesCommandInput, ListGlobalTablesCommandOutput } from "@aws-sdk/client-dynamodb";
    import { ListTablesCommandInput, ListTablesCommandOutput } from "@aws-sdk/client-dynamodb";
    import { ListTagsOfResourceCommandInput, ListTagsOfResourceCommandOutput } from "@aws-sdk/client-dynamodb";
    import { PutItemCommandInput, PutItemCommandOutput } from "@aws-sdk/client-dynamodb";
    import { QueryCommandInput, QueryCommandOutput } from "@aws-sdk/client-dynamodb";
    import { RestoreTableFromBackupCommandInput, RestoreTableFromBackupCommandOutput } from "@aws-sdk/client-dynamodb";
    import { RestoreTableToPointInTimeCommandInput, RestoreTableToPointInTimeCommandOutput } from "@aws-sdk/client-dynamodb";
    import { ScanCommandInput, ScanCommandOutput } from "@aws-sdk/client-dynamodb";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-dynamodb";
    import { TransactGetItemsCommandInput, TransactGetItemsCommandOutput } from "@aws-sdk/client-dynamodb";
    import { TransactWriteItemsCommandInput, TransactWriteItemsCommandOutput } from "@aws-sdk/client-dynamodb";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-dynamodb";
    import { UpdateContinuousBackupsCommandInput, UpdateContinuousBackupsCommandOutput } from "@aws-sdk/client-dynamodb";
    import { UpdateContributorInsightsCommandInput, UpdateContributorInsightsCommandOutput } from "@aws-sdk/client-dynamodb";
    import { UpdateGlobalTableCommandInput, UpdateGlobalTableCommandOutput } from "@aws-sdk/client-dynamodb";
    import { UpdateGlobalTableSettingsCommandInput, UpdateGlobalTableSettingsCommandOutput } from "@aws-sdk/client-dynamodb";
    import { UpdateItemCommandInput, UpdateItemCommandOutput } from "@aws-sdk/client-dynamodb";
    import { UpdateTableCommandInput, UpdateTableCommandOutput } from "@aws-sdk/client-dynamodb";
    import { UpdateTableReplicaAutoScalingCommandInput, UpdateTableReplicaAutoScalingCommandOutput } from "@aws-sdk/client-dynamodb";
    import { UpdateTimeToLiveCommandInput, UpdateTimeToLiveCommandOutput } from "@aws-sdk/client-dynamodb";
    export const sdkDynamoDBBatchExecuteStatement: (input: SdkIntegrationTask<BatchExecuteStatementCommandInput>) => Promise<BatchExecuteStatementCommandOutput>;
    export const sdkDynamoDBBatchGetItem: (input: SdkIntegrationTask<BatchGetItemCommandInput>) => Promise<BatchGetItemCommandOutput>;
    export const sdkDynamoDBBatchWriteItem: (input: SdkIntegrationTask<BatchWriteItemCommandInput>) => Promise<BatchWriteItemCommandOutput>;
    export const sdkDynamoDBCreateBackup: (input: SdkIntegrationTask<CreateBackupCommandInput>) => Promise<CreateBackupCommandOutput>;
    export const sdkDynamoDBCreateGlobalTable: (input: SdkIntegrationTask<CreateGlobalTableCommandInput>) => Promise<CreateGlobalTableCommandOutput>;
    export const sdkDynamoDBCreateTable: (input: SdkIntegrationTask<CreateTableCommandInput>) => Promise<CreateTableCommandOutput>;
    export const sdkDynamoDBDeleteBackup: (input: SdkIntegrationTask<DeleteBackupCommandInput>) => Promise<DeleteBackupCommandOutput>;
    export const sdkDynamoDBDeleteItem: (input: SdkIntegrationTask<DeleteItemCommandInput>) => Promise<DeleteItemCommandOutput>;
    export const sdkDynamoDBDeleteTable: (input: SdkIntegrationTask<DeleteTableCommandInput>) => Promise<DeleteTableCommandOutput>;
    export const sdkDynamoDBDescribeBackup: (input: SdkIntegrationTask<DescribeBackupCommandInput>) => Promise<DescribeBackupCommandOutput>;
    export const sdkDynamoDBDescribeContinuousBackups: (input: SdkIntegrationTask<DescribeContinuousBackupsCommandInput>) => Promise<DescribeContinuousBackupsCommandOutput>;
    export const sdkDynamoDBDescribeContributorInsights: (input: SdkIntegrationTask<DescribeContributorInsightsCommandInput>) => Promise<DescribeContributorInsightsCommandOutput>;
    export const sdkDynamoDBDescribeEndpoints: (input: SdkIntegrationTask<DescribeEndpointsCommandInput>) => Promise<DescribeEndpointsCommandOutput>;
    export const sdkDynamoDBDescribeExport: (input: SdkIntegrationTask<DescribeExportCommandInput>) => Promise<DescribeExportCommandOutput>;
    export const sdkDynamoDBDescribeGlobalTable: (input: SdkIntegrationTask<DescribeGlobalTableCommandInput>) => Promise<DescribeGlobalTableCommandOutput>;
    export const sdkDynamoDBDescribeGlobalTableSettings: (input: SdkIntegrationTask<DescribeGlobalTableSettingsCommandInput>) => Promise<DescribeGlobalTableSettingsCommandOutput>;
    export const sdkDynamoDBDescribeKinesisStreamingDestination: (input: SdkIntegrationTask<DescribeKinesisStreamingDestinationCommandInput>) => Promise<DescribeKinesisStreamingDestinationCommandOutput>;
    export const sdkDynamoDBDescribeLimits: (input: SdkIntegrationTask<DescribeLimitsCommandInput>) => Promise<DescribeLimitsCommandOutput>;
    export const sdkDynamoDBDescribeTable: (input: SdkIntegrationTask<DescribeTableCommandInput>) => Promise<DescribeTableCommandOutput>;
    export const sdkDynamoDBDescribeTableReplicaAutoScaling: (input: SdkIntegrationTask<DescribeTableReplicaAutoScalingCommandInput>) => Promise<DescribeTableReplicaAutoScalingCommandOutput>;
    export const sdkDynamoDBDescribeTimeToLive: (input: SdkIntegrationTask<DescribeTimeToLiveCommandInput>) => Promise<DescribeTimeToLiveCommandOutput>;
    export const sdkDynamoDBDisableKinesisStreamingDestination: (input: SdkIntegrationTask<DisableKinesisStreamingDestinationCommandInput>) => Promise<DisableKinesisStreamingDestinationCommandOutput>;
    export const sdkDynamoDBEnableKinesisStreamingDestination: (input: SdkIntegrationTask<EnableKinesisStreamingDestinationCommandInput>) => Promise<EnableKinesisStreamingDestinationCommandOutput>;
    export const sdkDynamoDBExecuteStatement: (input: SdkIntegrationTask<ExecuteStatementCommandInput>) => Promise<ExecuteStatementCommandOutput>;
    export const sdkDynamoDBExecuteTransaction: (input: SdkIntegrationTask<ExecuteTransactionCommandInput>) => Promise<ExecuteTransactionCommandOutput>;
    export const sdkDynamoDBExportTableToPointInTime: (input: SdkIntegrationTask<ExportTableToPointInTimeCommandInput>) => Promise<ExportTableToPointInTimeCommandOutput>;
    export const sdkDynamoDBGetItem: (input: SdkIntegrationTask<GetItemCommandInput>) => Promise<GetItemCommandOutput>;
    export const sdkDynamoDBListBackups: (input: SdkIntegrationTask<ListBackupsCommandInput>) => Promise<ListBackupsCommandOutput>;
    export const sdkDynamoDBListContributorInsights: (input: SdkIntegrationTask<ListContributorInsightsCommandInput>) => Promise<ListContributorInsightsCommandOutput>;
    export const sdkDynamoDBListExports: (input: SdkIntegrationTask<ListExportsCommandInput>) => Promise<ListExportsCommandOutput>;
    export const sdkDynamoDBListGlobalTables: (input: SdkIntegrationTask<ListGlobalTablesCommandInput>) => Promise<ListGlobalTablesCommandOutput>;
    export const sdkDynamoDBListTables: (input: SdkIntegrationTask<ListTablesCommandInput>) => Promise<ListTablesCommandOutput>;
    export const sdkDynamoDBListTagsOfResource: (input: SdkIntegrationTask<ListTagsOfResourceCommandInput>) => Promise<ListTagsOfResourceCommandOutput>;
    export const sdkDynamoDBPutItem: (input: SdkIntegrationTask<PutItemCommandInput>) => Promise<PutItemCommandOutput>;
    export const sdkDynamoDBQuery: (input: SdkIntegrationTask<QueryCommandInput>) => Promise<QueryCommandOutput>;
    export const sdkDynamoDBRestoreTableFromBackup: (input: SdkIntegrationTask<RestoreTableFromBackupCommandInput>) => Promise<RestoreTableFromBackupCommandOutput>;
    export const sdkDynamoDBRestoreTableToPointInTime: (input: SdkIntegrationTask<RestoreTableToPointInTimeCommandInput>) => Promise<RestoreTableToPointInTimeCommandOutput>;
    export const sdkDynamoDBScan: (input: SdkIntegrationTask<ScanCommandInput>) => Promise<ScanCommandOutput>;
    export const sdkDynamoDBTagResource: (input: SdkIntegrationTask<TagResourceCommandInput>) => Promise<TagResourceCommandOutput>;
    export const sdkDynamoDBTransactGetItems: (input: SdkIntegrationTask<TransactGetItemsCommandInput>) => Promise<TransactGetItemsCommandOutput>;
    export const sdkDynamoDBTransactWriteItems: (input: SdkIntegrationTask<TransactWriteItemsCommandInput>) => Promise<TransactWriteItemsCommandOutput>;
    export const sdkDynamoDBUntagResource: (input: SdkIntegrationTask<UntagResourceCommandInput>) => Promise<UntagResourceCommandOutput>;
    export const sdkDynamoDBUpdateContinuousBackups: (input: SdkIntegrationTask<UpdateContinuousBackupsCommandInput>) => Promise<UpdateContinuousBackupsCommandOutput>;
    export const sdkDynamoDBUpdateContributorInsights: (input: SdkIntegrationTask<UpdateContributorInsightsCommandInput>) => Promise<UpdateContributorInsightsCommandOutput>;
    export const sdkDynamoDBUpdateGlobalTable: (input: SdkIntegrationTask<UpdateGlobalTableCommandInput>) => Promise<UpdateGlobalTableCommandOutput>;
    export const sdkDynamoDBUpdateGlobalTableSettings: (input: SdkIntegrationTask<UpdateGlobalTableSettingsCommandInput>) => Promise<UpdateGlobalTableSettingsCommandOutput>;
    export const sdkDynamoDBUpdateItem: (input: SdkIntegrationTask<UpdateItemCommandInput>) => Promise<UpdateItemCommandOutput>;
    export const sdkDynamoDBUpdateTable: (input: SdkIntegrationTask<UpdateTableCommandInput>) => Promise<UpdateTableCommandOutput>;
    export const sdkDynamoDBUpdateTableReplicaAutoScaling: (input: SdkIntegrationTask<UpdateTableReplicaAutoScalingCommandInput>) => Promise<UpdateTableReplicaAutoScalingCommandOutput>;
    export const sdkDynamoDBUpdateTimeToLive: (input: SdkIntegrationTask<UpdateTimeToLiveCommandInput>) => Promise<UpdateTimeToLiveCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-eventbridge' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { ActivateEventSourceCommandInput, ActivateEventSourceCommandOutput } from "@aws-sdk/client-eventbridge";
    import { CancelReplayCommandInput, CancelReplayCommandOutput } from "@aws-sdk/client-eventbridge";
    import { CreateApiDestinationCommandInput, CreateApiDestinationCommandOutput } from "@aws-sdk/client-eventbridge";
    import { CreateArchiveCommandInput, CreateArchiveCommandOutput } from "@aws-sdk/client-eventbridge";
    import { CreateConnectionCommandInput, CreateConnectionCommandOutput } from "@aws-sdk/client-eventbridge";
    import { CreateEventBusCommandInput, CreateEventBusCommandOutput } from "@aws-sdk/client-eventbridge";
    import { CreatePartnerEventSourceCommandInput, CreatePartnerEventSourceCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DeactivateEventSourceCommandInput, DeactivateEventSourceCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DeauthorizeConnectionCommandInput, DeauthorizeConnectionCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DeleteApiDestinationCommandInput, DeleteApiDestinationCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DeleteArchiveCommandInput, DeleteArchiveCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DeleteConnectionCommandInput, DeleteConnectionCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DeleteEventBusCommandInput, DeleteEventBusCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DeletePartnerEventSourceCommandInput, DeletePartnerEventSourceCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DeleteRuleCommandInput, DeleteRuleCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DescribeApiDestinationCommandInput, DescribeApiDestinationCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DescribeArchiveCommandInput, DescribeArchiveCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DescribeConnectionCommandInput, DescribeConnectionCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DescribeEventBusCommandInput, DescribeEventBusCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DescribeEventSourceCommandInput, DescribeEventSourceCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DescribePartnerEventSourceCommandInput, DescribePartnerEventSourceCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DescribeReplayCommandInput, DescribeReplayCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DescribeRuleCommandInput, DescribeRuleCommandOutput } from "@aws-sdk/client-eventbridge";
    import { DisableRuleCommandInput, DisableRuleCommandOutput } from "@aws-sdk/client-eventbridge";
    import { EnableRuleCommandInput, EnableRuleCommandOutput } from "@aws-sdk/client-eventbridge";
    import { ListApiDestinationsCommandInput, ListApiDestinationsCommandOutput } from "@aws-sdk/client-eventbridge";
    import { ListArchivesCommandInput, ListArchivesCommandOutput } from "@aws-sdk/client-eventbridge";
    import { ListConnectionsCommandInput, ListConnectionsCommandOutput } from "@aws-sdk/client-eventbridge";
    import { ListEventBusesCommandInput, ListEventBusesCommandOutput } from "@aws-sdk/client-eventbridge";
    import { ListEventSourcesCommandInput, ListEventSourcesCommandOutput } from "@aws-sdk/client-eventbridge";
    import { ListPartnerEventSourceAccountsCommandInput, ListPartnerEventSourceAccountsCommandOutput } from "@aws-sdk/client-eventbridge";
    import { ListPartnerEventSourcesCommandInput, ListPartnerEventSourcesCommandOutput } from "@aws-sdk/client-eventbridge";
    import { ListReplaysCommandInput, ListReplaysCommandOutput } from "@aws-sdk/client-eventbridge";
    import { ListRuleNamesByTargetCommandInput, ListRuleNamesByTargetCommandOutput } from "@aws-sdk/client-eventbridge";
    import { ListRulesCommandInput, ListRulesCommandOutput } from "@aws-sdk/client-eventbridge";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-eventbridge";
    import { ListTargetsByRuleCommandInput, ListTargetsByRuleCommandOutput } from "@aws-sdk/client-eventbridge";
    import { PutEventsCommandInput, PutEventsCommandOutput } from "@aws-sdk/client-eventbridge";
    import { PutPartnerEventsCommandInput, PutPartnerEventsCommandOutput } from "@aws-sdk/client-eventbridge";
    import { PutPermissionCommandInput, PutPermissionCommandOutput } from "@aws-sdk/client-eventbridge";
    import { PutRuleCommandInput, PutRuleCommandOutput } from "@aws-sdk/client-eventbridge";
    import { PutTargetsCommandInput, PutTargetsCommandOutput } from "@aws-sdk/client-eventbridge";
    import { RemovePermissionCommandInput, RemovePermissionCommandOutput } from "@aws-sdk/client-eventbridge";
    import { RemoveTargetsCommandInput, RemoveTargetsCommandOutput } from "@aws-sdk/client-eventbridge";
    import { StartReplayCommandInput, StartReplayCommandOutput } from "@aws-sdk/client-eventbridge";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-eventbridge";
    import { TestEventPatternCommandInput, TestEventPatternCommandOutput } from "@aws-sdk/client-eventbridge";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-eventbridge";
    import { UpdateApiDestinationCommandInput, UpdateApiDestinationCommandOutput } from "@aws-sdk/client-eventbridge";
    import { UpdateArchiveCommandInput, UpdateArchiveCommandOutput } from "@aws-sdk/client-eventbridge";
    import { UpdateConnectionCommandInput, UpdateConnectionCommandOutput } from "@aws-sdk/client-eventbridge";
    export const sdkEventBridgeActivateEventSource: (input: SdkIntegrationTask<ActivateEventSourceCommandInput>) => Promise<ActivateEventSourceCommandOutput>;
    export const sdkEventBridgeCancelReplay: (input: SdkIntegrationTask<CancelReplayCommandInput>) => Promise<CancelReplayCommandOutput>;
    export const sdkEventBridgeCreateApiDestination: (input: SdkIntegrationTask<CreateApiDestinationCommandInput>) => Promise<CreateApiDestinationCommandOutput>;
    export const sdkEventBridgeCreateArchive: (input: SdkIntegrationTask<CreateArchiveCommandInput>) => Promise<CreateArchiveCommandOutput>;
    export const sdkEventBridgeCreateConnection: (input: SdkIntegrationTask<CreateConnectionCommandInput>) => Promise<CreateConnectionCommandOutput>;
    export const sdkEventBridgeCreateEventBus: (input: SdkIntegrationTask<CreateEventBusCommandInput>) => Promise<CreateEventBusCommandOutput>;
    export const sdkEventBridgeCreatePartnerEventSource: (input: SdkIntegrationTask<CreatePartnerEventSourceCommandInput>) => Promise<CreatePartnerEventSourceCommandOutput>;
    export const sdkEventBridgeDeactivateEventSource: (input: SdkIntegrationTask<DeactivateEventSourceCommandInput>) => Promise<DeactivateEventSourceCommandOutput>;
    export const sdkEventBridgeDeauthorizeConnection: (input: SdkIntegrationTask<DeauthorizeConnectionCommandInput>) => Promise<DeauthorizeConnectionCommandOutput>;
    export const sdkEventBridgeDeleteApiDestination: (input: SdkIntegrationTask<DeleteApiDestinationCommandInput>) => Promise<DeleteApiDestinationCommandOutput>;
    export const sdkEventBridgeDeleteArchive: (input: SdkIntegrationTask<DeleteArchiveCommandInput>) => Promise<DeleteArchiveCommandOutput>;
    export const sdkEventBridgeDeleteConnection: (input: SdkIntegrationTask<DeleteConnectionCommandInput>) => Promise<DeleteConnectionCommandOutput>;
    export const sdkEventBridgeDeleteEventBus: (input: SdkIntegrationTask<DeleteEventBusCommandInput>) => Promise<DeleteEventBusCommandOutput>;
    export const sdkEventBridgeDeletePartnerEventSource: (input: SdkIntegrationTask<DeletePartnerEventSourceCommandInput>) => Promise<DeletePartnerEventSourceCommandOutput>;
    export const sdkEventBridgeDeleteRule: (input: SdkIntegrationTask<DeleteRuleCommandInput>) => Promise<DeleteRuleCommandOutput>;
    export const sdkEventBridgeDescribeApiDestination: (input: SdkIntegrationTask<DescribeApiDestinationCommandInput>) => Promise<DescribeApiDestinationCommandOutput>;
    export const sdkEventBridgeDescribeArchive: (input: SdkIntegrationTask<DescribeArchiveCommandInput>) => Promise<DescribeArchiveCommandOutput>;
    export const sdkEventBridgeDescribeConnection: (input: SdkIntegrationTask<DescribeConnectionCommandInput>) => Promise<DescribeConnectionCommandOutput>;
    export const sdkEventBridgeDescribeEventBus: (input: SdkIntegrationTask<DescribeEventBusCommandInput>) => Promise<DescribeEventBusCommandOutput>;
    export const sdkEventBridgeDescribeEventSource: (input: SdkIntegrationTask<DescribeEventSourceCommandInput>) => Promise<DescribeEventSourceCommandOutput>;
    export const sdkEventBridgeDescribePartnerEventSource: (input: SdkIntegrationTask<DescribePartnerEventSourceCommandInput>) => Promise<DescribePartnerEventSourceCommandOutput>;
    export const sdkEventBridgeDescribeReplay: (input: SdkIntegrationTask<DescribeReplayCommandInput>) => Promise<DescribeReplayCommandOutput>;
    export const sdkEventBridgeDescribeRule: (input: SdkIntegrationTask<DescribeRuleCommandInput>) => Promise<DescribeRuleCommandOutput>;
    export const sdkEventBridgeDisableRule: (input: SdkIntegrationTask<DisableRuleCommandInput>) => Promise<DisableRuleCommandOutput>;
    export const sdkEventBridgeEnableRule: (input: SdkIntegrationTask<EnableRuleCommandInput>) => Promise<EnableRuleCommandOutput>;
    export const sdkEventBridgeListApiDestinations: (input: SdkIntegrationTask<ListApiDestinationsCommandInput>) => Promise<ListApiDestinationsCommandOutput>;
    export const sdkEventBridgeListArchives: (input: SdkIntegrationTask<ListArchivesCommandInput>) => Promise<ListArchivesCommandOutput>;
    export const sdkEventBridgeListConnections: (input: SdkIntegrationTask<ListConnectionsCommandInput>) => Promise<ListConnectionsCommandOutput>;
    export const sdkEventBridgeListEventBuses: (input: SdkIntegrationTask<ListEventBusesCommandInput>) => Promise<ListEventBusesCommandOutput>;
    export const sdkEventBridgeListEventSources: (input: SdkIntegrationTask<ListEventSourcesCommandInput>) => Promise<ListEventSourcesCommandOutput>;
    export const sdkEventBridgeListPartnerEventSourceAccounts: (input: SdkIntegrationTask<ListPartnerEventSourceAccountsCommandInput>) => Promise<ListPartnerEventSourceAccountsCommandOutput>;
    export const sdkEventBridgeListPartnerEventSources: (input: SdkIntegrationTask<ListPartnerEventSourcesCommandInput>) => Promise<ListPartnerEventSourcesCommandOutput>;
    export const sdkEventBridgeListReplays: (input: SdkIntegrationTask<ListReplaysCommandInput>) => Promise<ListReplaysCommandOutput>;
    export const sdkEventBridgeListRuleNamesByTarget: (input: SdkIntegrationTask<ListRuleNamesByTargetCommandInput>) => Promise<ListRuleNamesByTargetCommandOutput>;
    export const sdkEventBridgeListRules: (input: SdkIntegrationTask<ListRulesCommandInput>) => Promise<ListRulesCommandOutput>;
    export const sdkEventBridgeListTagsForResource: (input: SdkIntegrationTask<ListTagsForResourceCommandInput>) => Promise<ListTagsForResourceCommandOutput>;
    export const sdkEventBridgeListTargetsByRule: (input: SdkIntegrationTask<ListTargetsByRuleCommandInput>) => Promise<ListTargetsByRuleCommandOutput>;
    export const sdkEventBridgePutEvents: (input: SdkIntegrationTask<PutEventsCommandInput>) => Promise<PutEventsCommandOutput>;
    export const sdkEventBridgePutPartnerEvents: (input: SdkIntegrationTask<PutPartnerEventsCommandInput>) => Promise<PutPartnerEventsCommandOutput>;
    export const sdkEventBridgePutPermission: (input: SdkIntegrationTask<PutPermissionCommandInput>) => Promise<PutPermissionCommandOutput>;
    export const sdkEventBridgePutRule: (input: SdkIntegrationTask<PutRuleCommandInput>) => Promise<PutRuleCommandOutput>;
    export const sdkEventBridgePutTargets: (input: SdkIntegrationTask<PutTargetsCommandInput>) => Promise<PutTargetsCommandOutput>;
    export const sdkEventBridgeRemovePermission: (input: SdkIntegrationTask<RemovePermissionCommandInput>) => Promise<RemovePermissionCommandOutput>;
    export const sdkEventBridgeRemoveTargets: (input: SdkIntegrationTask<RemoveTargetsCommandInput>) => Promise<RemoveTargetsCommandOutput>;
    export const sdkEventBridgeStartReplay: (input: SdkIntegrationTask<StartReplayCommandInput>) => Promise<StartReplayCommandOutput>;
    export const sdkEventBridgeTagResource: (input: SdkIntegrationTask<TagResourceCommandInput>) => Promise<TagResourceCommandOutput>;
    export const sdkEventBridgeTestEventPattern: (input: SdkIntegrationTask<TestEventPatternCommandInput>) => Promise<TestEventPatternCommandOutput>;
    export const sdkEventBridgeUntagResource: (input: SdkIntegrationTask<UntagResourceCommandInput>) => Promise<UntagResourceCommandOutput>;
    export const sdkEventBridgeUpdateApiDestination: (input: SdkIntegrationTask<UpdateApiDestinationCommandInput>) => Promise<UpdateApiDestinationCommandOutput>;
    export const sdkEventBridgeUpdateArchive: (input: SdkIntegrationTask<UpdateArchiveCommandInput>) => Promise<UpdateArchiveCommandOutput>;
    export const sdkEventBridgeUpdateConnection: (input: SdkIntegrationTask<UpdateConnectionCommandInput>) => Promise<UpdateConnectionCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-lambda' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { AddLayerVersionPermissionCommandInput, AddLayerVersionPermissionCommandOutput } from "@aws-sdk/client-lambda";
    import { AddPermissionCommandInput, AddPermissionCommandOutput } from "@aws-sdk/client-lambda";
    import { CreateAliasCommandInput, CreateAliasCommandOutput } from "@aws-sdk/client-lambda";
    import { CreateCodeSigningConfigCommandInput, CreateCodeSigningConfigCommandOutput } from "@aws-sdk/client-lambda";
    import { CreateEventSourceMappingCommandInput, CreateEventSourceMappingCommandOutput } from "@aws-sdk/client-lambda";
    import { CreateFunctionCommandInput, CreateFunctionCommandOutput } from "@aws-sdk/client-lambda";
    import { DeleteAliasCommandInput, DeleteAliasCommandOutput } from "@aws-sdk/client-lambda";
    import { DeleteCodeSigningConfigCommandInput, DeleteCodeSigningConfigCommandOutput } from "@aws-sdk/client-lambda";
    import { DeleteEventSourceMappingCommandInput, DeleteEventSourceMappingCommandOutput } from "@aws-sdk/client-lambda";
    import { DeleteFunctionCommandInput, DeleteFunctionCommandOutput } from "@aws-sdk/client-lambda";
    import { DeleteFunctionCodeSigningConfigCommandInput, DeleteFunctionCodeSigningConfigCommandOutput } from "@aws-sdk/client-lambda";
    import { DeleteFunctionConcurrencyCommandInput, DeleteFunctionConcurrencyCommandOutput } from "@aws-sdk/client-lambda";
    import { DeleteFunctionEventInvokeConfigCommandInput, DeleteFunctionEventInvokeConfigCommandOutput } from "@aws-sdk/client-lambda";
    import { DeleteLayerVersionCommandInput, DeleteLayerVersionCommandOutput } from "@aws-sdk/client-lambda";
    import { DeleteProvisionedConcurrencyConfigCommandInput, DeleteProvisionedConcurrencyConfigCommandOutput } from "@aws-sdk/client-lambda";
    import { GetAccountSettingsCommandInput, GetAccountSettingsCommandOutput } from "@aws-sdk/client-lambda";
    import { GetAliasCommandInput, GetAliasCommandOutput } from "@aws-sdk/client-lambda";
    import { GetCodeSigningConfigCommandInput, GetCodeSigningConfigCommandOutput } from "@aws-sdk/client-lambda";
    import { GetEventSourceMappingCommandInput, GetEventSourceMappingCommandOutput } from "@aws-sdk/client-lambda";
    import { GetFunctionCommandInput, GetFunctionCommandOutput } from "@aws-sdk/client-lambda";
    import { GetFunctionCodeSigningConfigCommandInput, GetFunctionCodeSigningConfigCommandOutput } from "@aws-sdk/client-lambda";
    import { GetFunctionConcurrencyCommandInput, GetFunctionConcurrencyCommandOutput } from "@aws-sdk/client-lambda";
    import { GetFunctionConfigurationCommandInput, GetFunctionConfigurationCommandOutput } from "@aws-sdk/client-lambda";
    import { GetFunctionEventInvokeConfigCommandInput, GetFunctionEventInvokeConfigCommandOutput } from "@aws-sdk/client-lambda";
    import { GetLayerVersionCommandInput, GetLayerVersionCommandOutput } from "@aws-sdk/client-lambda";
    import { GetLayerVersionByArnCommandInput, GetLayerVersionByArnCommandOutput } from "@aws-sdk/client-lambda";
    import { GetLayerVersionPolicyCommandInput, GetLayerVersionPolicyCommandOutput } from "@aws-sdk/client-lambda";
    import { GetPolicyCommandInput, GetPolicyCommandOutput } from "@aws-sdk/client-lambda";
    import { GetProvisionedConcurrencyConfigCommandInput, GetProvisionedConcurrencyConfigCommandOutput } from "@aws-sdk/client-lambda";
    import { InvokeCommandInput, InvokeCommandOutput } from "@aws-sdk/client-lambda";
    import { ListAliasesCommandInput, ListAliasesCommandOutput } from "@aws-sdk/client-lambda";
    import { ListCodeSigningConfigsCommandInput, ListCodeSigningConfigsCommandOutput } from "@aws-sdk/client-lambda";
    import { ListEventSourceMappingsCommandInput, ListEventSourceMappingsCommandOutput } from "@aws-sdk/client-lambda";
    import { ListFunctionEventInvokeConfigsCommandInput, ListFunctionEventInvokeConfigsCommandOutput } from "@aws-sdk/client-lambda";
    import { ListFunctionsCommandInput, ListFunctionsCommandOutput } from "@aws-sdk/client-lambda";
    import { ListFunctionsByCodeSigningConfigCommandInput, ListFunctionsByCodeSigningConfigCommandOutput } from "@aws-sdk/client-lambda";
    import { ListLayerVersionsCommandInput, ListLayerVersionsCommandOutput } from "@aws-sdk/client-lambda";
    import { ListLayersCommandInput, ListLayersCommandOutput } from "@aws-sdk/client-lambda";
    import { ListProvisionedConcurrencyConfigsCommandInput, ListProvisionedConcurrencyConfigsCommandOutput } from "@aws-sdk/client-lambda";
    import { ListTagsCommandInput, ListTagsCommandOutput } from "@aws-sdk/client-lambda";
    import { ListVersionsByFunctionCommandInput, ListVersionsByFunctionCommandOutput } from "@aws-sdk/client-lambda";
    import { PublishLayerVersionCommandInput, PublishLayerVersionCommandOutput } from "@aws-sdk/client-lambda";
    import { PublishVersionCommandInput, PublishVersionCommandOutput } from "@aws-sdk/client-lambda";
    import { PutFunctionCodeSigningConfigCommandInput, PutFunctionCodeSigningConfigCommandOutput } from "@aws-sdk/client-lambda";
    import { PutFunctionConcurrencyCommandInput, PutFunctionConcurrencyCommandOutput } from "@aws-sdk/client-lambda";
    import { PutFunctionEventInvokeConfigCommandInput, PutFunctionEventInvokeConfigCommandOutput } from "@aws-sdk/client-lambda";
    import { PutProvisionedConcurrencyConfigCommandInput, PutProvisionedConcurrencyConfigCommandOutput } from "@aws-sdk/client-lambda";
    import { RemoveLayerVersionPermissionCommandInput, RemoveLayerVersionPermissionCommandOutput } from "@aws-sdk/client-lambda";
    import { RemovePermissionCommandInput, RemovePermissionCommandOutput } from "@aws-sdk/client-lambda";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-lambda";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-lambda";
    import { UpdateAliasCommandInput, UpdateAliasCommandOutput } from "@aws-sdk/client-lambda";
    import { UpdateCodeSigningConfigCommandInput, UpdateCodeSigningConfigCommandOutput } from "@aws-sdk/client-lambda";
    import { UpdateEventSourceMappingCommandInput, UpdateEventSourceMappingCommandOutput } from "@aws-sdk/client-lambda";
    import { UpdateFunctionCodeCommandInput, UpdateFunctionCodeCommandOutput } from "@aws-sdk/client-lambda";
    import { UpdateFunctionConfigurationCommandInput, UpdateFunctionConfigurationCommandOutput } from "@aws-sdk/client-lambda";
    import { UpdateFunctionEventInvokeConfigCommandInput, UpdateFunctionEventInvokeConfigCommandOutput } from "@aws-sdk/client-lambda";
    declare module "@aws-sdk/client-lambda" {
        interface InvokeCommandInput {
            Payload: {};
        }
    }
    export const sdkLambdaAddLayerVersionPermission: (input: SdkIntegrationTask<AddLayerVersionPermissionCommandInput>) => Promise<AddLayerVersionPermissionCommandOutput>;
    export const sdkLambdaAddPermission: (input: SdkIntegrationTask<AddPermissionCommandInput>) => Promise<AddPermissionCommandOutput>;
    export const sdkLambdaCreateAlias: (input: SdkIntegrationTask<CreateAliasCommandInput>) => Promise<CreateAliasCommandOutput>;
    export const sdkLambdaCreateCodeSigningConfig: (input: SdkIntegrationTask<CreateCodeSigningConfigCommandInput>) => Promise<CreateCodeSigningConfigCommandOutput>;
    export const sdkLambdaCreateEventSourceMapping: (input: SdkIntegrationTask<CreateEventSourceMappingCommandInput>) => Promise<CreateEventSourceMappingCommandOutput>;
    export const sdkLambdaCreateFunction: (input: SdkIntegrationTask<CreateFunctionCommandInput>) => Promise<CreateFunctionCommandOutput>;
    export const sdkLambdaDeleteAlias: (input: SdkIntegrationTask<DeleteAliasCommandInput>) => Promise<DeleteAliasCommandOutput>;
    export const sdkLambdaDeleteCodeSigningConfig: (input: SdkIntegrationTask<DeleteCodeSigningConfigCommandInput>) => Promise<DeleteCodeSigningConfigCommandOutput>;
    export const sdkLambdaDeleteEventSourceMapping: (input: SdkIntegrationTask<DeleteEventSourceMappingCommandInput>) => Promise<DeleteEventSourceMappingCommandOutput>;
    export const sdkLambdaDeleteFunction: (input: SdkIntegrationTask<DeleteFunctionCommandInput>) => Promise<DeleteFunctionCommandOutput>;
    export const sdkLambdaDeleteFunctionCodeSigningConfig: (input: SdkIntegrationTask<DeleteFunctionCodeSigningConfigCommandInput>) => Promise<DeleteFunctionCodeSigningConfigCommandOutput>;
    export const sdkLambdaDeleteFunctionConcurrency: (input: SdkIntegrationTask<DeleteFunctionConcurrencyCommandInput>) => Promise<DeleteFunctionConcurrencyCommandOutput>;
    export const sdkLambdaDeleteFunctionEventInvokeConfig: (input: SdkIntegrationTask<DeleteFunctionEventInvokeConfigCommandInput>) => Promise<DeleteFunctionEventInvokeConfigCommandOutput>;
    export const sdkLambdaDeleteLayerVersion: (input: SdkIntegrationTask<DeleteLayerVersionCommandInput>) => Promise<DeleteLayerVersionCommandOutput>;
    export const sdkLambdaDeleteProvisionedConcurrencyConfig: (input: SdkIntegrationTask<DeleteProvisionedConcurrencyConfigCommandInput>) => Promise<DeleteProvisionedConcurrencyConfigCommandOutput>;
    export const sdkLambdaGetAccountSettings: (input: SdkIntegrationTask<GetAccountSettingsCommandInput>) => Promise<GetAccountSettingsCommandOutput>;
    export const sdkLambdaGetAlias: (input: SdkIntegrationTask<GetAliasCommandInput>) => Promise<GetAliasCommandOutput>;
    export const sdkLambdaGetCodeSigningConfig: (input: SdkIntegrationTask<GetCodeSigningConfigCommandInput>) => Promise<GetCodeSigningConfigCommandOutput>;
    export const sdkLambdaGetEventSourceMapping: (input: SdkIntegrationTask<GetEventSourceMappingCommandInput>) => Promise<GetEventSourceMappingCommandOutput>;
    export const sdkLambdaGetFunction: (input: SdkIntegrationTask<GetFunctionCommandInput>) => Promise<GetFunctionCommandOutput>;
    export const sdkLambdaGetFunctionCodeSigningConfig: (input: SdkIntegrationTask<GetFunctionCodeSigningConfigCommandInput>) => Promise<GetFunctionCodeSigningConfigCommandOutput>;
    export const sdkLambdaGetFunctionConcurrency: (input: SdkIntegrationTask<GetFunctionConcurrencyCommandInput>) => Promise<GetFunctionConcurrencyCommandOutput>;
    export const sdkLambdaGetFunctionConfiguration: (input: SdkIntegrationTask<GetFunctionConfigurationCommandInput>) => Promise<GetFunctionConfigurationCommandOutput>;
    export const sdkLambdaGetFunctionEventInvokeConfig: (input: SdkIntegrationTask<GetFunctionEventInvokeConfigCommandInput>) => Promise<GetFunctionEventInvokeConfigCommandOutput>;
    export const sdkLambdaGetLayerVersion: (input: SdkIntegrationTask<GetLayerVersionCommandInput>) => Promise<GetLayerVersionCommandOutput>;
    export const sdkLambdaGetLayerVersionByArn: (input: SdkIntegrationTask<GetLayerVersionByArnCommandInput>) => Promise<GetLayerVersionByArnCommandOutput>;
    export const sdkLambdaGetLayerVersionPolicy: (input: SdkIntegrationTask<GetLayerVersionPolicyCommandInput>) => Promise<GetLayerVersionPolicyCommandOutput>;
    export const sdkLambdaGetPolicy: (input: SdkIntegrationTask<GetPolicyCommandInput>) => Promise<GetPolicyCommandOutput>;
    export const sdkLambdaGetProvisionedConcurrencyConfig: (input: SdkIntegrationTask<GetProvisionedConcurrencyConfigCommandInput>) => Promise<GetProvisionedConcurrencyConfigCommandOutput>;
    export const sdkLambdaInvoke: (input: SdkIntegrationTask<InvokeCommandInput>) => Promise<InvokeCommandOutput>;
    export const sdkLambdaListAliases: (input: SdkIntegrationTask<ListAliasesCommandInput>) => Promise<ListAliasesCommandOutput>;
    export const sdkLambdaListCodeSigningConfigs: (input: SdkIntegrationTask<ListCodeSigningConfigsCommandInput>) => Promise<ListCodeSigningConfigsCommandOutput>;
    export const sdkLambdaListEventSourceMappings: (input: SdkIntegrationTask<ListEventSourceMappingsCommandInput>) => Promise<ListEventSourceMappingsCommandOutput>;
    export const sdkLambdaListFunctionEventInvokeConfigs: (input: SdkIntegrationTask<ListFunctionEventInvokeConfigsCommandInput>) => Promise<ListFunctionEventInvokeConfigsCommandOutput>;
    export const sdkLambdaListFunctions: (input: SdkIntegrationTask<ListFunctionsCommandInput>) => Promise<ListFunctionsCommandOutput>;
    export const sdkLambdaListFunctionsByCodeSigningConfig: (input: SdkIntegrationTask<ListFunctionsByCodeSigningConfigCommandInput>) => Promise<ListFunctionsByCodeSigningConfigCommandOutput>;
    export const sdkLambdaListLayerVersions: (input: SdkIntegrationTask<ListLayerVersionsCommandInput>) => Promise<ListLayerVersionsCommandOutput>;
    export const sdkLambdaListLayers: (input: SdkIntegrationTask<ListLayersCommandInput>) => Promise<ListLayersCommandOutput>;
    export const sdkLambdaListProvisionedConcurrencyConfigs: (input: SdkIntegrationTask<ListProvisionedConcurrencyConfigsCommandInput>) => Promise<ListProvisionedConcurrencyConfigsCommandOutput>;
    export const sdkLambdaListTags: (input: SdkIntegrationTask<ListTagsCommandInput>) => Promise<ListTagsCommandOutput>;
    export const sdkLambdaListVersionsByFunction: (input: SdkIntegrationTask<ListVersionsByFunctionCommandInput>) => Promise<ListVersionsByFunctionCommandOutput>;
    export const sdkLambdaPublishLayerVersion: (input: SdkIntegrationTask<PublishLayerVersionCommandInput>) => Promise<PublishLayerVersionCommandOutput>;
    export const sdkLambdaPublishVersion: (input: SdkIntegrationTask<PublishVersionCommandInput>) => Promise<PublishVersionCommandOutput>;
    export const sdkLambdaPutFunctionCodeSigningConfig: (input: SdkIntegrationTask<PutFunctionCodeSigningConfigCommandInput>) => Promise<PutFunctionCodeSigningConfigCommandOutput>;
    export const sdkLambdaPutFunctionConcurrency: (input: SdkIntegrationTask<PutFunctionConcurrencyCommandInput>) => Promise<PutFunctionConcurrencyCommandOutput>;
    export const sdkLambdaPutFunctionEventInvokeConfig: (input: SdkIntegrationTask<PutFunctionEventInvokeConfigCommandInput>) => Promise<PutFunctionEventInvokeConfigCommandOutput>;
    export const sdkLambdaPutProvisionedConcurrencyConfig: (input: SdkIntegrationTask<PutProvisionedConcurrencyConfigCommandInput>) => Promise<PutProvisionedConcurrencyConfigCommandOutput>;
    export const sdkLambdaRemoveLayerVersionPermission: (input: SdkIntegrationTask<RemoveLayerVersionPermissionCommandInput>) => Promise<RemoveLayerVersionPermissionCommandOutput>;
    export const sdkLambdaRemovePermission: (input: SdkIntegrationTask<RemovePermissionCommandInput>) => Promise<RemovePermissionCommandOutput>;
    export const sdkLambdaTagResource: (input: SdkIntegrationTask<TagResourceCommandInput>) => Promise<TagResourceCommandOutput>;
    export const sdkLambdaUntagResource: (input: SdkIntegrationTask<UntagResourceCommandInput>) => Promise<UntagResourceCommandOutput>;
    export const sdkLambdaUpdateAlias: (input: SdkIntegrationTask<UpdateAliasCommandInput>) => Promise<UpdateAliasCommandOutput>;
    export const sdkLambdaUpdateCodeSigningConfig: (input: SdkIntegrationTask<UpdateCodeSigningConfigCommandInput>) => Promise<UpdateCodeSigningConfigCommandOutput>;
    export const sdkLambdaUpdateEventSourceMapping: (input: SdkIntegrationTask<UpdateEventSourceMappingCommandInput>) => Promise<UpdateEventSourceMappingCommandOutput>;
    export const sdkLambdaUpdateFunctionCode: (input: SdkIntegrationTask<UpdateFunctionCodeCommandInput>) => Promise<UpdateFunctionCodeCommandOutput>;
    export const sdkLambdaUpdateFunctionConfiguration: (input: SdkIntegrationTask<UpdateFunctionConfigurationCommandInput>) => Promise<UpdateFunctionConfigurationCommandOutput>;
    export const sdkLambdaUpdateFunctionEventInvokeConfig: (input: SdkIntegrationTask<UpdateFunctionEventInvokeConfigCommandInput>) => Promise<UpdateFunctionEventInvokeConfigCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-s3' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { AbortMultipartUploadCommandInput, AbortMultipartUploadCommandOutput } from "@aws-sdk/client-s3";
    import { CompleteMultipartUploadCommandInput, CompleteMultipartUploadCommandOutput } from "@aws-sdk/client-s3";
    import { CopyObjectCommandInput, CopyObjectCommandOutput } from "@aws-sdk/client-s3";
    import { CreateBucketCommandInput, CreateBucketCommandOutput } from "@aws-sdk/client-s3";
    import { CreateMultipartUploadCommandInput, CreateMultipartUploadCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteBucketCommandInput, DeleteBucketCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteBucketAnalyticsConfigurationCommandInput, DeleteBucketAnalyticsConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteBucketCorsCommandInput, DeleteBucketCorsCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteBucketEncryptionCommandInput, DeleteBucketEncryptionCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteBucketIntelligentTieringConfigurationCommandInput, DeleteBucketIntelligentTieringConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteBucketInventoryConfigurationCommandInput, DeleteBucketInventoryConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteBucketLifecycleCommandInput, DeleteBucketLifecycleCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteBucketMetricsConfigurationCommandInput, DeleteBucketMetricsConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteBucketOwnershipControlsCommandInput, DeleteBucketOwnershipControlsCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteBucketPolicyCommandInput, DeleteBucketPolicyCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteBucketReplicationCommandInput, DeleteBucketReplicationCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteBucketTaggingCommandInput, DeleteBucketTaggingCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteBucketWebsiteCommandInput, DeleteBucketWebsiteCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteObjectCommandInput, DeleteObjectCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteObjectTaggingCommandInput, DeleteObjectTaggingCommandOutput } from "@aws-sdk/client-s3";
    import { DeleteObjectsCommandInput, DeleteObjectsCommandOutput } from "@aws-sdk/client-s3";
    import { DeletePublicAccessBlockCommandInput, DeletePublicAccessBlockCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketAccelerateConfigurationCommandInput, GetBucketAccelerateConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketAclCommandInput, GetBucketAclCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketAnalyticsConfigurationCommandInput, GetBucketAnalyticsConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketCorsCommandInput, GetBucketCorsCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketEncryptionCommandInput, GetBucketEncryptionCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketIntelligentTieringConfigurationCommandInput, GetBucketIntelligentTieringConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketInventoryConfigurationCommandInput, GetBucketInventoryConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketLifecycleConfigurationCommandInput, GetBucketLifecycleConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketLocationCommandInput, GetBucketLocationCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketLoggingCommandInput, GetBucketLoggingCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketMetricsConfigurationCommandInput, GetBucketMetricsConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketNotificationConfigurationCommandInput, GetBucketNotificationConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketOwnershipControlsCommandInput, GetBucketOwnershipControlsCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketPolicyCommandInput, GetBucketPolicyCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketPolicyStatusCommandInput, GetBucketPolicyStatusCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketReplicationCommandInput, GetBucketReplicationCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketRequestPaymentCommandInput, GetBucketRequestPaymentCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketTaggingCommandInput, GetBucketTaggingCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketVersioningCommandInput, GetBucketVersioningCommandOutput } from "@aws-sdk/client-s3";
    import { GetBucketWebsiteCommandInput, GetBucketWebsiteCommandOutput } from "@aws-sdk/client-s3";
    import { GetObjectCommandInput, GetObjectCommandOutput } from "@aws-sdk/client-s3";
    import { GetObjectAclCommandInput, GetObjectAclCommandOutput } from "@aws-sdk/client-s3";
    import { GetObjectLegalHoldCommandInput, GetObjectLegalHoldCommandOutput } from "@aws-sdk/client-s3";
    import { GetObjectLockConfigurationCommandInput, GetObjectLockConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { GetObjectRetentionCommandInput, GetObjectRetentionCommandOutput } from "@aws-sdk/client-s3";
    import { GetObjectTaggingCommandInput, GetObjectTaggingCommandOutput } from "@aws-sdk/client-s3";
    import { GetObjectTorrentCommandInput, GetObjectTorrentCommandOutput } from "@aws-sdk/client-s3";
    import { GetPublicAccessBlockCommandInput, GetPublicAccessBlockCommandOutput } from "@aws-sdk/client-s3";
    import { HeadBucketCommandInput, HeadBucketCommandOutput } from "@aws-sdk/client-s3";
    import { HeadObjectCommandInput, HeadObjectCommandOutput } from "@aws-sdk/client-s3";
    import { ListBucketAnalyticsConfigurationsCommandInput, ListBucketAnalyticsConfigurationsCommandOutput } from "@aws-sdk/client-s3";
    import { ListBucketIntelligentTieringConfigurationsCommandInput, ListBucketIntelligentTieringConfigurationsCommandOutput } from "@aws-sdk/client-s3";
    import { ListBucketInventoryConfigurationsCommandInput, ListBucketInventoryConfigurationsCommandOutput } from "@aws-sdk/client-s3";
    import { ListBucketMetricsConfigurationsCommandInput, ListBucketMetricsConfigurationsCommandOutput } from "@aws-sdk/client-s3";
    import { ListBucketsCommandInput, ListBucketsCommandOutput } from "@aws-sdk/client-s3";
    import { ListMultipartUploadsCommandInput, ListMultipartUploadsCommandOutput } from "@aws-sdk/client-s3";
    import { ListObjectVersionsCommandInput, ListObjectVersionsCommandOutput } from "@aws-sdk/client-s3";
    import { ListObjectsCommandInput, ListObjectsCommandOutput } from "@aws-sdk/client-s3";
    import { ListObjectsV2CommandInput, ListObjectsV2CommandOutput } from "@aws-sdk/client-s3";
    import { ListPartsCommandInput, ListPartsCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketAccelerateConfigurationCommandInput, PutBucketAccelerateConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketAclCommandInput, PutBucketAclCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketAnalyticsConfigurationCommandInput, PutBucketAnalyticsConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketCorsCommandInput, PutBucketCorsCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketEncryptionCommandInput, PutBucketEncryptionCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketIntelligentTieringConfigurationCommandInput, PutBucketIntelligentTieringConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketInventoryConfigurationCommandInput, PutBucketInventoryConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketLifecycleConfigurationCommandInput, PutBucketLifecycleConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketLoggingCommandInput, PutBucketLoggingCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketMetricsConfigurationCommandInput, PutBucketMetricsConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketNotificationConfigurationCommandInput, PutBucketNotificationConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketOwnershipControlsCommandInput, PutBucketOwnershipControlsCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketPolicyCommandInput, PutBucketPolicyCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketReplicationCommandInput, PutBucketReplicationCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketRequestPaymentCommandInput, PutBucketRequestPaymentCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketTaggingCommandInput, PutBucketTaggingCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketVersioningCommandInput, PutBucketVersioningCommandOutput } from "@aws-sdk/client-s3";
    import { PutBucketWebsiteCommandInput, PutBucketWebsiteCommandOutput } from "@aws-sdk/client-s3";
    import { PutObjectCommandInput, PutObjectCommandOutput } from "@aws-sdk/client-s3";
    import { PutObjectAclCommandInput, PutObjectAclCommandOutput } from "@aws-sdk/client-s3";
    import { PutObjectLegalHoldCommandInput, PutObjectLegalHoldCommandOutput } from "@aws-sdk/client-s3";
    import { PutObjectLockConfigurationCommandInput, PutObjectLockConfigurationCommandOutput } from "@aws-sdk/client-s3";
    import { PutObjectRetentionCommandInput, PutObjectRetentionCommandOutput } from "@aws-sdk/client-s3";
    import { PutObjectTaggingCommandInput, PutObjectTaggingCommandOutput } from "@aws-sdk/client-s3";
    import { PutPublicAccessBlockCommandInput, PutPublicAccessBlockCommandOutput } from "@aws-sdk/client-s3";
    import { RestoreObjectCommandInput, RestoreObjectCommandOutput } from "@aws-sdk/client-s3";
    import { UploadPartCommandInput, UploadPartCommandOutput } from "@aws-sdk/client-s3";
    import { UploadPartCopyCommandInput, UploadPartCopyCommandOutput } from "@aws-sdk/client-s3";
    import { WriteGetObjectResponseCommandInput, WriteGetObjectResponseCommandOutput } from "@aws-sdk/client-s3";
    export const sdkS3AbortMultipartUpload: (input: SdkIntegrationTask<AbortMultipartUploadCommandInput>) => Promise<AbortMultipartUploadCommandOutput>;
    export const sdkS3CompleteMultipartUpload: (input: SdkIntegrationTask<CompleteMultipartUploadCommandInput>) => Promise<CompleteMultipartUploadCommandOutput>;
    export const sdkS3CopyObject: (input: SdkIntegrationTask<CopyObjectCommandInput>) => Promise<CopyObjectCommandOutput>;
    export const sdkS3CreateBucket: (input: SdkIntegrationTask<CreateBucketCommandInput>) => Promise<CreateBucketCommandOutput>;
    export const sdkS3CreateMultipartUpload: (input: SdkIntegrationTask<CreateMultipartUploadCommandInput>) => Promise<CreateMultipartUploadCommandOutput>;
    export const sdkS3DeleteBucket: (input: SdkIntegrationTask<DeleteBucketCommandInput>) => Promise<DeleteBucketCommandOutput>;
    export const sdkS3DeleteBucketAnalyticsConfiguration: (input: SdkIntegrationTask<DeleteBucketAnalyticsConfigurationCommandInput>) => Promise<DeleteBucketAnalyticsConfigurationCommandOutput>;
    export const sdkS3DeleteBucketCors: (input: SdkIntegrationTask<DeleteBucketCorsCommandInput>) => Promise<DeleteBucketCorsCommandOutput>;
    export const sdkS3DeleteBucketEncryption: (input: SdkIntegrationTask<DeleteBucketEncryptionCommandInput>) => Promise<DeleteBucketEncryptionCommandOutput>;
    export const sdkS3DeleteBucketIntelligentTieringConfiguration: (input: SdkIntegrationTask<DeleteBucketIntelligentTieringConfigurationCommandInput>) => Promise<DeleteBucketIntelligentTieringConfigurationCommandOutput>;
    export const sdkS3DeleteBucketInventoryConfiguration: (input: SdkIntegrationTask<DeleteBucketInventoryConfigurationCommandInput>) => Promise<DeleteBucketInventoryConfigurationCommandOutput>;
    export const sdkS3DeleteBucketLifecycle: (input: SdkIntegrationTask<DeleteBucketLifecycleCommandInput>) => Promise<DeleteBucketLifecycleCommandOutput>;
    export const sdkS3DeleteBucketMetricsConfiguration: (input: SdkIntegrationTask<DeleteBucketMetricsConfigurationCommandInput>) => Promise<DeleteBucketMetricsConfigurationCommandOutput>;
    export const sdkS3DeleteBucketOwnershipControls: (input: SdkIntegrationTask<DeleteBucketOwnershipControlsCommandInput>) => Promise<DeleteBucketOwnershipControlsCommandOutput>;
    export const sdkS3DeleteBucketPolicy: (input: SdkIntegrationTask<DeleteBucketPolicyCommandInput>) => Promise<DeleteBucketPolicyCommandOutput>;
    export const sdkS3DeleteBucketReplication: (input: SdkIntegrationTask<DeleteBucketReplicationCommandInput>) => Promise<DeleteBucketReplicationCommandOutput>;
    export const sdkS3DeleteBucketTagging: (input: SdkIntegrationTask<DeleteBucketTaggingCommandInput>) => Promise<DeleteBucketTaggingCommandOutput>;
    export const sdkS3DeleteBucketWebsite: (input: SdkIntegrationTask<DeleteBucketWebsiteCommandInput>) => Promise<DeleteBucketWebsiteCommandOutput>;
    export const sdkS3DeleteObject: (input: SdkIntegrationTask<DeleteObjectCommandInput>) => Promise<DeleteObjectCommandOutput>;
    export const sdkS3DeleteObjectTagging: (input: SdkIntegrationTask<DeleteObjectTaggingCommandInput>) => Promise<DeleteObjectTaggingCommandOutput>;
    export const sdkS3DeleteObjects: (input: SdkIntegrationTask<DeleteObjectsCommandInput>) => Promise<DeleteObjectsCommandOutput>;
    export const sdkS3DeletePublicAccessBlock: (input: SdkIntegrationTask<DeletePublicAccessBlockCommandInput>) => Promise<DeletePublicAccessBlockCommandOutput>;
    export const sdkS3GetBucketAccelerateConfiguration: (input: SdkIntegrationTask<GetBucketAccelerateConfigurationCommandInput>) => Promise<GetBucketAccelerateConfigurationCommandOutput>;
    export const sdkS3GetBucketAcl: (input: SdkIntegrationTask<GetBucketAclCommandInput>) => Promise<GetBucketAclCommandOutput>;
    export const sdkS3GetBucketAnalyticsConfiguration: (input: SdkIntegrationTask<GetBucketAnalyticsConfigurationCommandInput>) => Promise<GetBucketAnalyticsConfigurationCommandOutput>;
    export const sdkS3GetBucketCors: (input: SdkIntegrationTask<GetBucketCorsCommandInput>) => Promise<GetBucketCorsCommandOutput>;
    export const sdkS3GetBucketEncryption: (input: SdkIntegrationTask<GetBucketEncryptionCommandInput>) => Promise<GetBucketEncryptionCommandOutput>;
    export const sdkS3GetBucketIntelligentTieringConfiguration: (input: SdkIntegrationTask<GetBucketIntelligentTieringConfigurationCommandInput>) => Promise<GetBucketIntelligentTieringConfigurationCommandOutput>;
    export const sdkS3GetBucketInventoryConfiguration: (input: SdkIntegrationTask<GetBucketInventoryConfigurationCommandInput>) => Promise<GetBucketInventoryConfigurationCommandOutput>;
    export const sdkS3GetBucketLifecycleConfiguration: (input: SdkIntegrationTask<GetBucketLifecycleConfigurationCommandInput>) => Promise<GetBucketLifecycleConfigurationCommandOutput>;
    export const sdkS3GetBucketLocation: (input: SdkIntegrationTask<GetBucketLocationCommandInput>) => Promise<GetBucketLocationCommandOutput>;
    export const sdkS3GetBucketLogging: (input: SdkIntegrationTask<GetBucketLoggingCommandInput>) => Promise<GetBucketLoggingCommandOutput>;
    export const sdkS3GetBucketMetricsConfiguration: (input: SdkIntegrationTask<GetBucketMetricsConfigurationCommandInput>) => Promise<GetBucketMetricsConfigurationCommandOutput>;
    export const sdkS3GetBucketNotificationConfiguration: (input: SdkIntegrationTask<GetBucketNotificationConfigurationCommandInput>) => Promise<GetBucketNotificationConfigurationCommandOutput>;
    export const sdkS3GetBucketOwnershipControls: (input: SdkIntegrationTask<GetBucketOwnershipControlsCommandInput>) => Promise<GetBucketOwnershipControlsCommandOutput>;
    export const sdkS3GetBucketPolicy: (input: SdkIntegrationTask<GetBucketPolicyCommandInput>) => Promise<GetBucketPolicyCommandOutput>;
    export const sdkS3GetBucketPolicyStatus: (input: SdkIntegrationTask<GetBucketPolicyStatusCommandInput>) => Promise<GetBucketPolicyStatusCommandOutput>;
    export const sdkS3GetBucketReplication: (input: SdkIntegrationTask<GetBucketReplicationCommandInput>) => Promise<GetBucketReplicationCommandOutput>;
    export const sdkS3GetBucketRequestPayment: (input: SdkIntegrationTask<GetBucketRequestPaymentCommandInput>) => Promise<GetBucketRequestPaymentCommandOutput>;
    export const sdkS3GetBucketTagging: (input: SdkIntegrationTask<GetBucketTaggingCommandInput>) => Promise<GetBucketTaggingCommandOutput>;
    export const sdkS3GetBucketVersioning: (input: SdkIntegrationTask<GetBucketVersioningCommandInput>) => Promise<GetBucketVersioningCommandOutput>;
    export const sdkS3GetBucketWebsite: (input: SdkIntegrationTask<GetBucketWebsiteCommandInput>) => Promise<GetBucketWebsiteCommandOutput>;
    export const sdkS3GetObject: (input: SdkIntegrationTask<GetObjectCommandInput>) => Promise<GetObjectCommandOutput>;
    export const sdkS3GetObjectAcl: (input: SdkIntegrationTask<GetObjectAclCommandInput>) => Promise<GetObjectAclCommandOutput>;
    export const sdkS3GetObjectLegalHold: (input: SdkIntegrationTask<GetObjectLegalHoldCommandInput>) => Promise<GetObjectLegalHoldCommandOutput>;
    export const sdkS3GetObjectLockConfiguration: (input: SdkIntegrationTask<GetObjectLockConfigurationCommandInput>) => Promise<GetObjectLockConfigurationCommandOutput>;
    export const sdkS3GetObjectRetention: (input: SdkIntegrationTask<GetObjectRetentionCommandInput>) => Promise<GetObjectRetentionCommandOutput>;
    export const sdkS3GetObjectTagging: (input: SdkIntegrationTask<GetObjectTaggingCommandInput>) => Promise<GetObjectTaggingCommandOutput>;
    export const sdkS3GetObjectTorrent: (input: SdkIntegrationTask<GetObjectTorrentCommandInput>) => Promise<GetObjectTorrentCommandOutput>;
    export const sdkS3GetPublicAccessBlock: (input: SdkIntegrationTask<GetPublicAccessBlockCommandInput>) => Promise<GetPublicAccessBlockCommandOutput>;
    export const sdkS3HeadBucket: (input: SdkIntegrationTask<HeadBucketCommandInput>) => Promise<HeadBucketCommandOutput>;
    export const sdkS3HeadObject: (input: SdkIntegrationTask<HeadObjectCommandInput>) => Promise<HeadObjectCommandOutput>;
    export const sdkS3ListBucketAnalyticsConfigurations: (input: SdkIntegrationTask<ListBucketAnalyticsConfigurationsCommandInput>) => Promise<ListBucketAnalyticsConfigurationsCommandOutput>;
    export const sdkS3ListBucketIntelligentTieringConfigurations: (input: SdkIntegrationTask<ListBucketIntelligentTieringConfigurationsCommandInput>) => Promise<ListBucketIntelligentTieringConfigurationsCommandOutput>;
    export const sdkS3ListBucketInventoryConfigurations: (input: SdkIntegrationTask<ListBucketInventoryConfigurationsCommandInput>) => Promise<ListBucketInventoryConfigurationsCommandOutput>;
    export const sdkS3ListBucketMetricsConfigurations: (input: SdkIntegrationTask<ListBucketMetricsConfigurationsCommandInput>) => Promise<ListBucketMetricsConfigurationsCommandOutput>;
    export const sdkS3ListBuckets: (input: SdkIntegrationTask<ListBucketsCommandInput>) => Promise<ListBucketsCommandOutput>;
    export const sdkS3ListMultipartUploads: (input: SdkIntegrationTask<ListMultipartUploadsCommandInput>) => Promise<ListMultipartUploadsCommandOutput>;
    export const sdkS3ListObjectVersions: (input: SdkIntegrationTask<ListObjectVersionsCommandInput>) => Promise<ListObjectVersionsCommandOutput>;
    export const sdkS3ListObjects: (input: SdkIntegrationTask<ListObjectsCommandInput>) => Promise<ListObjectsCommandOutput>;
    export const sdkS3ListObjectsV2: (input: SdkIntegrationTask<ListObjectsV2CommandInput>) => Promise<ListObjectsV2CommandOutput>;
    export const sdkS3ListParts: (input: SdkIntegrationTask<ListPartsCommandInput>) => Promise<ListPartsCommandOutput>;
    export const sdkS3PutBucketAccelerateConfiguration: (input: SdkIntegrationTask<PutBucketAccelerateConfigurationCommandInput>) => Promise<PutBucketAccelerateConfigurationCommandOutput>;
    export const sdkS3PutBucketAcl: (input: SdkIntegrationTask<PutBucketAclCommandInput>) => Promise<PutBucketAclCommandOutput>;
    export const sdkS3PutBucketAnalyticsConfiguration: (input: SdkIntegrationTask<PutBucketAnalyticsConfigurationCommandInput>) => Promise<PutBucketAnalyticsConfigurationCommandOutput>;
    export const sdkS3PutBucketCors: (input: SdkIntegrationTask<PutBucketCorsCommandInput>) => Promise<PutBucketCorsCommandOutput>;
    export const sdkS3PutBucketEncryption: (input: SdkIntegrationTask<PutBucketEncryptionCommandInput>) => Promise<PutBucketEncryptionCommandOutput>;
    export const sdkS3PutBucketIntelligentTieringConfiguration: (input: SdkIntegrationTask<PutBucketIntelligentTieringConfigurationCommandInput>) => Promise<PutBucketIntelligentTieringConfigurationCommandOutput>;
    export const sdkS3PutBucketInventoryConfiguration: (input: SdkIntegrationTask<PutBucketInventoryConfigurationCommandInput>) => Promise<PutBucketInventoryConfigurationCommandOutput>;
    export const sdkS3PutBucketLifecycleConfiguration: (input: SdkIntegrationTask<PutBucketLifecycleConfigurationCommandInput>) => Promise<PutBucketLifecycleConfigurationCommandOutput>;
    export const sdkS3PutBucketLogging: (input: SdkIntegrationTask<PutBucketLoggingCommandInput>) => Promise<PutBucketLoggingCommandOutput>;
    export const sdkS3PutBucketMetricsConfiguration: (input: SdkIntegrationTask<PutBucketMetricsConfigurationCommandInput>) => Promise<PutBucketMetricsConfigurationCommandOutput>;
    export const sdkS3PutBucketNotificationConfiguration: (input: SdkIntegrationTask<PutBucketNotificationConfigurationCommandInput>) => Promise<PutBucketNotificationConfigurationCommandOutput>;
    export const sdkS3PutBucketOwnershipControls: (input: SdkIntegrationTask<PutBucketOwnershipControlsCommandInput>) => Promise<PutBucketOwnershipControlsCommandOutput>;
    export const sdkS3PutBucketPolicy: (input: SdkIntegrationTask<PutBucketPolicyCommandInput>) => Promise<PutBucketPolicyCommandOutput>;
    export const sdkS3PutBucketReplication: (input: SdkIntegrationTask<PutBucketReplicationCommandInput>) => Promise<PutBucketReplicationCommandOutput>;
    export const sdkS3PutBucketRequestPayment: (input: SdkIntegrationTask<PutBucketRequestPaymentCommandInput>) => Promise<PutBucketRequestPaymentCommandOutput>;
    export const sdkS3PutBucketTagging: (input: SdkIntegrationTask<PutBucketTaggingCommandInput>) => Promise<PutBucketTaggingCommandOutput>;
    export const sdkS3PutBucketVersioning: (input: SdkIntegrationTask<PutBucketVersioningCommandInput>) => Promise<PutBucketVersioningCommandOutput>;
    export const sdkS3PutBucketWebsite: (input: SdkIntegrationTask<PutBucketWebsiteCommandInput>) => Promise<PutBucketWebsiteCommandOutput>;
    export const sdkS3PutObject: (input: SdkIntegrationTask<PutObjectCommandInput>) => Promise<PutObjectCommandOutput>;
    export const sdkS3PutObjectAcl: (input: SdkIntegrationTask<PutObjectAclCommandInput>) => Promise<PutObjectAclCommandOutput>;
    export const sdkS3PutObjectLegalHold: (input: SdkIntegrationTask<PutObjectLegalHoldCommandInput>) => Promise<PutObjectLegalHoldCommandOutput>;
    export const sdkS3PutObjectLockConfiguration: (input: SdkIntegrationTask<PutObjectLockConfigurationCommandInput>) => Promise<PutObjectLockConfigurationCommandOutput>;
    export const sdkS3PutObjectRetention: (input: SdkIntegrationTask<PutObjectRetentionCommandInput>) => Promise<PutObjectRetentionCommandOutput>;
    export const sdkS3PutObjectTagging: (input: SdkIntegrationTask<PutObjectTaggingCommandInput>) => Promise<PutObjectTaggingCommandOutput>;
    export const sdkS3PutPublicAccessBlock: (input: SdkIntegrationTask<PutPublicAccessBlockCommandInput>) => Promise<PutPublicAccessBlockCommandOutput>;
    export const sdkS3RestoreObject: (input: SdkIntegrationTask<RestoreObjectCommandInput>) => Promise<RestoreObjectCommandOutput>;
    export const sdkS3UploadPart: (input: SdkIntegrationTask<UploadPartCommandInput>) => Promise<UploadPartCommandOutput>;
    export const sdkS3UploadPartCopy: (input: SdkIntegrationTask<UploadPartCopyCommandInput>) => Promise<UploadPartCopyCommandOutput>;
    export const sdkS3WriteGetObjectResponse: (input: SdkIntegrationTask<WriteGetObjectResponseCommandInput>) => Promise<WriteGetObjectResponseCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-ses' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { CloneReceiptRuleSetCommandInput, CloneReceiptRuleSetCommandOutput } from "@aws-sdk/client-ses";
    import { CreateConfigurationSetCommandInput, CreateConfigurationSetCommandOutput } from "@aws-sdk/client-ses";
    import { CreateConfigurationSetEventDestinationCommandInput, CreateConfigurationSetEventDestinationCommandOutput } from "@aws-sdk/client-ses";
    import { CreateConfigurationSetTrackingOptionsCommandInput, CreateConfigurationSetTrackingOptionsCommandOutput } from "@aws-sdk/client-ses";
    import { CreateCustomVerificationEmailTemplateCommandInput, CreateCustomVerificationEmailTemplateCommandOutput } from "@aws-sdk/client-ses";
    import { CreateReceiptFilterCommandInput, CreateReceiptFilterCommandOutput } from "@aws-sdk/client-ses";
    import { CreateReceiptRuleCommandInput, CreateReceiptRuleCommandOutput } from "@aws-sdk/client-ses";
    import { CreateReceiptRuleSetCommandInput, CreateReceiptRuleSetCommandOutput } from "@aws-sdk/client-ses";
    import { CreateTemplateCommandInput, CreateTemplateCommandOutput } from "@aws-sdk/client-ses";
    import { DeleteConfigurationSetCommandInput, DeleteConfigurationSetCommandOutput } from "@aws-sdk/client-ses";
    import { DeleteConfigurationSetEventDestinationCommandInput, DeleteConfigurationSetEventDestinationCommandOutput } from "@aws-sdk/client-ses";
    import { DeleteConfigurationSetTrackingOptionsCommandInput, DeleteConfigurationSetTrackingOptionsCommandOutput } from "@aws-sdk/client-ses";
    import { DeleteCustomVerificationEmailTemplateCommandInput, DeleteCustomVerificationEmailTemplateCommandOutput } from "@aws-sdk/client-ses";
    import { DeleteIdentityCommandInput, DeleteIdentityCommandOutput } from "@aws-sdk/client-ses";
    import { DeleteIdentityPolicyCommandInput, DeleteIdentityPolicyCommandOutput } from "@aws-sdk/client-ses";
    import { DeleteReceiptFilterCommandInput, DeleteReceiptFilterCommandOutput } from "@aws-sdk/client-ses";
    import { DeleteReceiptRuleCommandInput, DeleteReceiptRuleCommandOutput } from "@aws-sdk/client-ses";
    import { DeleteReceiptRuleSetCommandInput, DeleteReceiptRuleSetCommandOutput } from "@aws-sdk/client-ses";
    import { DeleteTemplateCommandInput, DeleteTemplateCommandOutput } from "@aws-sdk/client-ses";
    import { DeleteVerifiedEmailAddressCommandInput, DeleteVerifiedEmailAddressCommandOutput } from "@aws-sdk/client-ses";
    import { DescribeActiveReceiptRuleSetCommandInput, DescribeActiveReceiptRuleSetCommandOutput } from "@aws-sdk/client-ses";
    import { DescribeConfigurationSetCommandInput, DescribeConfigurationSetCommandOutput } from "@aws-sdk/client-ses";
    import { DescribeReceiptRuleCommandInput, DescribeReceiptRuleCommandOutput } from "@aws-sdk/client-ses";
    import { DescribeReceiptRuleSetCommandInput, DescribeReceiptRuleSetCommandOutput } from "@aws-sdk/client-ses";
    import { GetAccountSendingEnabledCommandInput, GetAccountSendingEnabledCommandOutput } from "@aws-sdk/client-ses";
    import { GetCustomVerificationEmailTemplateCommandInput, GetCustomVerificationEmailTemplateCommandOutput } from "@aws-sdk/client-ses";
    import { GetIdentityDkimAttributesCommandInput, GetIdentityDkimAttributesCommandOutput } from "@aws-sdk/client-ses";
    import { GetIdentityMailFromDomainAttributesCommandInput, GetIdentityMailFromDomainAttributesCommandOutput } from "@aws-sdk/client-ses";
    import { GetIdentityNotificationAttributesCommandInput, GetIdentityNotificationAttributesCommandOutput } from "@aws-sdk/client-ses";
    import { GetIdentityPoliciesCommandInput, GetIdentityPoliciesCommandOutput } from "@aws-sdk/client-ses";
    import { GetIdentityVerificationAttributesCommandInput, GetIdentityVerificationAttributesCommandOutput } from "@aws-sdk/client-ses";
    import { GetSendQuotaCommandInput, GetSendQuotaCommandOutput } from "@aws-sdk/client-ses";
    import { GetSendStatisticsCommandInput, GetSendStatisticsCommandOutput } from "@aws-sdk/client-ses";
    import { GetTemplateCommandInput, GetTemplateCommandOutput } from "@aws-sdk/client-ses";
    import { ListConfigurationSetsCommandInput, ListConfigurationSetsCommandOutput } from "@aws-sdk/client-ses";
    import { ListCustomVerificationEmailTemplatesCommandInput, ListCustomVerificationEmailTemplatesCommandOutput } from "@aws-sdk/client-ses";
    import { ListIdentitiesCommandInput, ListIdentitiesCommandOutput } from "@aws-sdk/client-ses";
    import { ListIdentityPoliciesCommandInput, ListIdentityPoliciesCommandOutput } from "@aws-sdk/client-ses";
    import { ListReceiptFiltersCommandInput, ListReceiptFiltersCommandOutput } from "@aws-sdk/client-ses";
    import { ListReceiptRuleSetsCommandInput, ListReceiptRuleSetsCommandOutput } from "@aws-sdk/client-ses";
    import { ListTemplatesCommandInput, ListTemplatesCommandOutput } from "@aws-sdk/client-ses";
    import { ListVerifiedEmailAddressesCommandInput, ListVerifiedEmailAddressesCommandOutput } from "@aws-sdk/client-ses";
    import { PutConfigurationSetDeliveryOptionsCommandInput, PutConfigurationSetDeliveryOptionsCommandOutput } from "@aws-sdk/client-ses";
    import { PutIdentityPolicyCommandInput, PutIdentityPolicyCommandOutput } from "@aws-sdk/client-ses";
    import { ReorderReceiptRuleSetCommandInput, ReorderReceiptRuleSetCommandOutput } from "@aws-sdk/client-ses";
    import { SendBounceCommandInput, SendBounceCommandOutput } from "@aws-sdk/client-ses";
    import { SendBulkTemplatedEmailCommandInput, SendBulkTemplatedEmailCommandOutput } from "@aws-sdk/client-ses";
    import { SendCustomVerificationEmailCommandInput, SendCustomVerificationEmailCommandOutput } from "@aws-sdk/client-ses";
    import { SendEmailCommandInput, SendEmailCommandOutput } from "@aws-sdk/client-ses";
    import { SendRawEmailCommandInput, SendRawEmailCommandOutput } from "@aws-sdk/client-ses";
    import { SendTemplatedEmailCommandInput, SendTemplatedEmailCommandOutput } from "@aws-sdk/client-ses";
    import { SetActiveReceiptRuleSetCommandInput, SetActiveReceiptRuleSetCommandOutput } from "@aws-sdk/client-ses";
    import { SetIdentityDkimEnabledCommandInput, SetIdentityDkimEnabledCommandOutput } from "@aws-sdk/client-ses";
    import { SetIdentityFeedbackForwardingEnabledCommandInput, SetIdentityFeedbackForwardingEnabledCommandOutput } from "@aws-sdk/client-ses";
    import { SetIdentityHeadersInNotificationsEnabledCommandInput, SetIdentityHeadersInNotificationsEnabledCommandOutput } from "@aws-sdk/client-ses";
    import { SetIdentityMailFromDomainCommandInput, SetIdentityMailFromDomainCommandOutput } from "@aws-sdk/client-ses";
    import { SetIdentityNotificationTopicCommandInput, SetIdentityNotificationTopicCommandOutput } from "@aws-sdk/client-ses";
    import { SetReceiptRulePositionCommandInput, SetReceiptRulePositionCommandOutput } from "@aws-sdk/client-ses";
    import { TestRenderTemplateCommandInput, TestRenderTemplateCommandOutput } from "@aws-sdk/client-ses";
    import { UpdateAccountSendingEnabledCommandInput, UpdateAccountSendingEnabledCommandOutput } from "@aws-sdk/client-ses";
    import { UpdateConfigurationSetEventDestinationCommandInput, UpdateConfigurationSetEventDestinationCommandOutput } from "@aws-sdk/client-ses";
    import { UpdateConfigurationSetReputationMetricsEnabledCommandInput, UpdateConfigurationSetReputationMetricsEnabledCommandOutput } from "@aws-sdk/client-ses";
    import { UpdateConfigurationSetSendingEnabledCommandInput, UpdateConfigurationSetSendingEnabledCommandOutput } from "@aws-sdk/client-ses";
    import { UpdateConfigurationSetTrackingOptionsCommandInput, UpdateConfigurationSetTrackingOptionsCommandOutput } from "@aws-sdk/client-ses";
    import { UpdateCustomVerificationEmailTemplateCommandInput, UpdateCustomVerificationEmailTemplateCommandOutput } from "@aws-sdk/client-ses";
    import { UpdateReceiptRuleCommandInput, UpdateReceiptRuleCommandOutput } from "@aws-sdk/client-ses";
    import { UpdateTemplateCommandInput, UpdateTemplateCommandOutput } from "@aws-sdk/client-ses";
    import { VerifyDomainDkimCommandInput, VerifyDomainDkimCommandOutput } from "@aws-sdk/client-ses";
    import { VerifyDomainIdentityCommandInput, VerifyDomainIdentityCommandOutput } from "@aws-sdk/client-ses";
    import { VerifyEmailAddressCommandInput, VerifyEmailAddressCommandOutput } from "@aws-sdk/client-ses";
    import { VerifyEmailIdentityCommandInput, VerifyEmailIdentityCommandOutput } from "@aws-sdk/client-ses";
    export const sdkSESCloneReceiptRuleSet: (input: SdkIntegrationTask<CloneReceiptRuleSetCommandInput>) => Promise<CloneReceiptRuleSetCommandOutput>;
    export const sdkSESCreateConfigurationSet: (input: SdkIntegrationTask<CreateConfigurationSetCommandInput>) => Promise<CreateConfigurationSetCommandOutput>;
    export const sdkSESCreateConfigurationSetEventDestination: (input: SdkIntegrationTask<CreateConfigurationSetEventDestinationCommandInput>) => Promise<CreateConfigurationSetEventDestinationCommandOutput>;
    export const sdkSESCreateConfigurationSetTrackingOptions: (input: SdkIntegrationTask<CreateConfigurationSetTrackingOptionsCommandInput>) => Promise<CreateConfigurationSetTrackingOptionsCommandOutput>;
    export const sdkSESCreateCustomVerificationEmailTemplate: (input: SdkIntegrationTask<CreateCustomVerificationEmailTemplateCommandInput>) => Promise<CreateCustomVerificationEmailTemplateCommandOutput>;
    export const sdkSESCreateReceiptFilter: (input: SdkIntegrationTask<CreateReceiptFilterCommandInput>) => Promise<CreateReceiptFilterCommandOutput>;
    export const sdkSESCreateReceiptRule: (input: SdkIntegrationTask<CreateReceiptRuleCommandInput>) => Promise<CreateReceiptRuleCommandOutput>;
    export const sdkSESCreateReceiptRuleSet: (input: SdkIntegrationTask<CreateReceiptRuleSetCommandInput>) => Promise<CreateReceiptRuleSetCommandOutput>;
    export const sdkSESCreateTemplate: (input: SdkIntegrationTask<CreateTemplateCommandInput>) => Promise<CreateTemplateCommandOutput>;
    export const sdkSESDeleteConfigurationSet: (input: SdkIntegrationTask<DeleteConfigurationSetCommandInput>) => Promise<DeleteConfigurationSetCommandOutput>;
    export const sdkSESDeleteConfigurationSetEventDestination: (input: SdkIntegrationTask<DeleteConfigurationSetEventDestinationCommandInput>) => Promise<DeleteConfigurationSetEventDestinationCommandOutput>;
    export const sdkSESDeleteConfigurationSetTrackingOptions: (input: SdkIntegrationTask<DeleteConfigurationSetTrackingOptionsCommandInput>) => Promise<DeleteConfigurationSetTrackingOptionsCommandOutput>;
    export const sdkSESDeleteCustomVerificationEmailTemplate: (input: SdkIntegrationTask<DeleteCustomVerificationEmailTemplateCommandInput>) => Promise<DeleteCustomVerificationEmailTemplateCommandOutput>;
    export const sdkSESDeleteIdentity: (input: SdkIntegrationTask<DeleteIdentityCommandInput>) => Promise<DeleteIdentityCommandOutput>;
    export const sdkSESDeleteIdentityPolicy: (input: SdkIntegrationTask<DeleteIdentityPolicyCommandInput>) => Promise<DeleteIdentityPolicyCommandOutput>;
    export const sdkSESDeleteReceiptFilter: (input: SdkIntegrationTask<DeleteReceiptFilterCommandInput>) => Promise<DeleteReceiptFilterCommandOutput>;
    export const sdkSESDeleteReceiptRule: (input: SdkIntegrationTask<DeleteReceiptRuleCommandInput>) => Promise<DeleteReceiptRuleCommandOutput>;
    export const sdkSESDeleteReceiptRuleSet: (input: SdkIntegrationTask<DeleteReceiptRuleSetCommandInput>) => Promise<DeleteReceiptRuleSetCommandOutput>;
    export const sdkSESDeleteTemplate: (input: SdkIntegrationTask<DeleteTemplateCommandInput>) => Promise<DeleteTemplateCommandOutput>;
    export const sdkSESDeleteVerifiedEmailAddress: (input: SdkIntegrationTask<DeleteVerifiedEmailAddressCommandInput>) => Promise<DeleteVerifiedEmailAddressCommandOutput>;
    export const sdkSESDescribeActiveReceiptRuleSet: (input: SdkIntegrationTask<DescribeActiveReceiptRuleSetCommandInput>) => Promise<DescribeActiveReceiptRuleSetCommandOutput>;
    export const sdkSESDescribeConfigurationSet: (input: SdkIntegrationTask<DescribeConfigurationSetCommandInput>) => Promise<DescribeConfigurationSetCommandOutput>;
    export const sdkSESDescribeReceiptRule: (input: SdkIntegrationTask<DescribeReceiptRuleCommandInput>) => Promise<DescribeReceiptRuleCommandOutput>;
    export const sdkSESDescribeReceiptRuleSet: (input: SdkIntegrationTask<DescribeReceiptRuleSetCommandInput>) => Promise<DescribeReceiptRuleSetCommandOutput>;
    export const sdkSESGetAccountSendingEnabled: (input: SdkIntegrationTask<GetAccountSendingEnabledCommandInput>) => Promise<GetAccountSendingEnabledCommandOutput>;
    export const sdkSESGetCustomVerificationEmailTemplate: (input: SdkIntegrationTask<GetCustomVerificationEmailTemplateCommandInput>) => Promise<GetCustomVerificationEmailTemplateCommandOutput>;
    export const sdkSESGetIdentityDkimAttributes: (input: SdkIntegrationTask<GetIdentityDkimAttributesCommandInput>) => Promise<GetIdentityDkimAttributesCommandOutput>;
    export const sdkSESGetIdentityMailFromDomainAttributes: (input: SdkIntegrationTask<GetIdentityMailFromDomainAttributesCommandInput>) => Promise<GetIdentityMailFromDomainAttributesCommandOutput>;
    export const sdkSESGetIdentityNotificationAttributes: (input: SdkIntegrationTask<GetIdentityNotificationAttributesCommandInput>) => Promise<GetIdentityNotificationAttributesCommandOutput>;
    export const sdkSESGetIdentityPolicies: (input: SdkIntegrationTask<GetIdentityPoliciesCommandInput>) => Promise<GetIdentityPoliciesCommandOutput>;
    export const sdkSESGetIdentityVerificationAttributes: (input: SdkIntegrationTask<GetIdentityVerificationAttributesCommandInput>) => Promise<GetIdentityVerificationAttributesCommandOutput>;
    export const sdkSESGetSendQuota: (input: SdkIntegrationTask<GetSendQuotaCommandInput>) => Promise<GetSendQuotaCommandOutput>;
    export const sdkSESGetSendStatistics: (input: SdkIntegrationTask<GetSendStatisticsCommandInput>) => Promise<GetSendStatisticsCommandOutput>;
    export const sdkSESGetTemplate: (input: SdkIntegrationTask<GetTemplateCommandInput>) => Promise<GetTemplateCommandOutput>;
    export const sdkSESListConfigurationSets: (input: SdkIntegrationTask<ListConfigurationSetsCommandInput>) => Promise<ListConfigurationSetsCommandOutput>;
    export const sdkSESListCustomVerificationEmailTemplates: (input: SdkIntegrationTask<ListCustomVerificationEmailTemplatesCommandInput>) => Promise<ListCustomVerificationEmailTemplatesCommandOutput>;
    export const sdkSESListIdentities: (input: SdkIntegrationTask<ListIdentitiesCommandInput>) => Promise<ListIdentitiesCommandOutput>;
    export const sdkSESListIdentityPolicies: (input: SdkIntegrationTask<ListIdentityPoliciesCommandInput>) => Promise<ListIdentityPoliciesCommandOutput>;
    export const sdkSESListReceiptFilters: (input: SdkIntegrationTask<ListReceiptFiltersCommandInput>) => Promise<ListReceiptFiltersCommandOutput>;
    export const sdkSESListReceiptRuleSets: (input: SdkIntegrationTask<ListReceiptRuleSetsCommandInput>) => Promise<ListReceiptRuleSetsCommandOutput>;
    export const sdkSESListTemplates: (input: SdkIntegrationTask<ListTemplatesCommandInput>) => Promise<ListTemplatesCommandOutput>;
    export const sdkSESListVerifiedEmailAddresses: (input: SdkIntegrationTask<ListVerifiedEmailAddressesCommandInput>) => Promise<ListVerifiedEmailAddressesCommandOutput>;
    export const sdkSESPutConfigurationSetDeliveryOptions: (input: SdkIntegrationTask<PutConfigurationSetDeliveryOptionsCommandInput>) => Promise<PutConfigurationSetDeliveryOptionsCommandOutput>;
    export const sdkSESPutIdentityPolicy: (input: SdkIntegrationTask<PutIdentityPolicyCommandInput>) => Promise<PutIdentityPolicyCommandOutput>;
    export const sdkSESReorderReceiptRuleSet: (input: SdkIntegrationTask<ReorderReceiptRuleSetCommandInput>) => Promise<ReorderReceiptRuleSetCommandOutput>;
    export const sdkSESSendBounce: (input: SdkIntegrationTask<SendBounceCommandInput>) => Promise<SendBounceCommandOutput>;
    export const sdkSESSendBulkTemplatedEmail: (input: SdkIntegrationTask<SendBulkTemplatedEmailCommandInput>) => Promise<SendBulkTemplatedEmailCommandOutput>;
    export const sdkSESSendCustomVerificationEmail: (input: SdkIntegrationTask<SendCustomVerificationEmailCommandInput>) => Promise<SendCustomVerificationEmailCommandOutput>;
    export const sdkSESSendEmail: (input: SdkIntegrationTask<SendEmailCommandInput>) => Promise<SendEmailCommandOutput>;
    export const sdkSESSendRawEmail: (input: SdkIntegrationTask<SendRawEmailCommandInput>) => Promise<SendRawEmailCommandOutput>;
    export const sdkSESSendTemplatedEmail: (input: SdkIntegrationTask<SendTemplatedEmailCommandInput>) => Promise<SendTemplatedEmailCommandOutput>;
    export const sdkSESSetActiveReceiptRuleSet: (input: SdkIntegrationTask<SetActiveReceiptRuleSetCommandInput>) => Promise<SetActiveReceiptRuleSetCommandOutput>;
    export const sdkSESSetIdentityDkimEnabled: (input: SdkIntegrationTask<SetIdentityDkimEnabledCommandInput>) => Promise<SetIdentityDkimEnabledCommandOutput>;
    export const sdkSESSetIdentityFeedbackForwardingEnabled: (input: SdkIntegrationTask<SetIdentityFeedbackForwardingEnabledCommandInput>) => Promise<SetIdentityFeedbackForwardingEnabledCommandOutput>;
    export const sdkSESSetIdentityHeadersInNotificationsEnabled: (input: SdkIntegrationTask<SetIdentityHeadersInNotificationsEnabledCommandInput>) => Promise<SetIdentityHeadersInNotificationsEnabledCommandOutput>;
    export const sdkSESSetIdentityMailFromDomain: (input: SdkIntegrationTask<SetIdentityMailFromDomainCommandInput>) => Promise<SetIdentityMailFromDomainCommandOutput>;
    export const sdkSESSetIdentityNotificationTopic: (input: SdkIntegrationTask<SetIdentityNotificationTopicCommandInput>) => Promise<SetIdentityNotificationTopicCommandOutput>;
    export const sdkSESSetReceiptRulePosition: (input: SdkIntegrationTask<SetReceiptRulePositionCommandInput>) => Promise<SetReceiptRulePositionCommandOutput>;
    export const sdkSESTestRenderTemplate: (input: SdkIntegrationTask<TestRenderTemplateCommandInput>) => Promise<TestRenderTemplateCommandOutput>;
    export const sdkSESUpdateAccountSendingEnabled: (input: SdkIntegrationTask<UpdateAccountSendingEnabledCommandInput>) => Promise<UpdateAccountSendingEnabledCommandOutput>;
    export const sdkSESUpdateConfigurationSetEventDestination: (input: SdkIntegrationTask<UpdateConfigurationSetEventDestinationCommandInput>) => Promise<UpdateConfigurationSetEventDestinationCommandOutput>;
    export const sdkSESUpdateConfigurationSetReputationMetricsEnabled: (input: SdkIntegrationTask<UpdateConfigurationSetReputationMetricsEnabledCommandInput>) => Promise<UpdateConfigurationSetReputationMetricsEnabledCommandOutput>;
    export const sdkSESUpdateConfigurationSetSendingEnabled: (input: SdkIntegrationTask<UpdateConfigurationSetSendingEnabledCommandInput>) => Promise<UpdateConfigurationSetSendingEnabledCommandOutput>;
    export const sdkSESUpdateConfigurationSetTrackingOptions: (input: SdkIntegrationTask<UpdateConfigurationSetTrackingOptionsCommandInput>) => Promise<UpdateConfigurationSetTrackingOptionsCommandOutput>;
    export const sdkSESUpdateCustomVerificationEmailTemplate: (input: SdkIntegrationTask<UpdateCustomVerificationEmailTemplateCommandInput>) => Promise<UpdateCustomVerificationEmailTemplateCommandOutput>;
    export const sdkSESUpdateReceiptRule: (input: SdkIntegrationTask<UpdateReceiptRuleCommandInput>) => Promise<UpdateReceiptRuleCommandOutput>;
    export const sdkSESUpdateTemplate: (input: SdkIntegrationTask<UpdateTemplateCommandInput>) => Promise<UpdateTemplateCommandOutput>;
    export const sdkSESVerifyDomainDkim: (input: SdkIntegrationTask<VerifyDomainDkimCommandInput>) => Promise<VerifyDomainDkimCommandOutput>;
    export const sdkSESVerifyDomainIdentity: (input: SdkIntegrationTask<VerifyDomainIdentityCommandInput>) => Promise<VerifyDomainIdentityCommandOutput>;
    export const sdkSESVerifyEmailAddress: (input: SdkIntegrationTask<VerifyEmailAddressCommandInput>) => Promise<VerifyEmailAddressCommandOutput>;
    export const sdkSESVerifyEmailIdentity: (input: SdkIntegrationTask<VerifyEmailIdentityCommandInput>) => Promise<VerifyEmailIdentityCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-sns' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { AddPermissionCommandInput, AddPermissionCommandOutput } from "@aws-sdk/client-sns";
    import { CheckIfPhoneNumberIsOptedOutCommandInput, CheckIfPhoneNumberIsOptedOutCommandOutput } from "@aws-sdk/client-sns";
    import { ConfirmSubscriptionCommandInput, ConfirmSubscriptionCommandOutput } from "@aws-sdk/client-sns";
    import { CreatePlatformApplicationCommandInput, CreatePlatformApplicationCommandOutput } from "@aws-sdk/client-sns";
    import { CreatePlatformEndpointCommandInput, CreatePlatformEndpointCommandOutput } from "@aws-sdk/client-sns";
    import { CreateSMSSandboxPhoneNumberCommandInput, CreateSMSSandboxPhoneNumberCommandOutput } from "@aws-sdk/client-sns";
    import { CreateTopicCommandInput, CreateTopicCommandOutput } from "@aws-sdk/client-sns";
    import { DeleteEndpointCommandInput, DeleteEndpointCommandOutput } from "@aws-sdk/client-sns";
    import { DeletePlatformApplicationCommandInput, DeletePlatformApplicationCommandOutput } from "@aws-sdk/client-sns";
    import { DeleteSMSSandboxPhoneNumberCommandInput, DeleteSMSSandboxPhoneNumberCommandOutput } from "@aws-sdk/client-sns";
    import { DeleteTopicCommandInput, DeleteTopicCommandOutput } from "@aws-sdk/client-sns";
    import { GetEndpointAttributesCommandInput, GetEndpointAttributesCommandOutput } from "@aws-sdk/client-sns";
    import { GetPlatformApplicationAttributesCommandInput, GetPlatformApplicationAttributesCommandOutput } from "@aws-sdk/client-sns";
    import { GetSMSAttributesCommandInput, GetSMSAttributesCommandOutput } from "@aws-sdk/client-sns";
    import { GetSMSSandboxAccountStatusCommandInput, GetSMSSandboxAccountStatusCommandOutput } from "@aws-sdk/client-sns";
    import { GetSubscriptionAttributesCommandInput, GetSubscriptionAttributesCommandOutput } from "@aws-sdk/client-sns";
    import { GetTopicAttributesCommandInput, GetTopicAttributesCommandOutput } from "@aws-sdk/client-sns";
    import { ListEndpointsByPlatformApplicationCommandInput, ListEndpointsByPlatformApplicationCommandOutput } from "@aws-sdk/client-sns";
    import { ListOriginationNumbersCommandInput, ListOriginationNumbersCommandOutput } from "@aws-sdk/client-sns";
    import { ListPhoneNumbersOptedOutCommandInput, ListPhoneNumbersOptedOutCommandOutput } from "@aws-sdk/client-sns";
    import { ListPlatformApplicationsCommandInput, ListPlatformApplicationsCommandOutput } from "@aws-sdk/client-sns";
    import { ListSMSSandboxPhoneNumbersCommandInput, ListSMSSandboxPhoneNumbersCommandOutput } from "@aws-sdk/client-sns";
    import { ListSubscriptionsCommandInput, ListSubscriptionsCommandOutput } from "@aws-sdk/client-sns";
    import { ListSubscriptionsByTopicCommandInput, ListSubscriptionsByTopicCommandOutput } from "@aws-sdk/client-sns";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-sns";
    import { ListTopicsCommandInput, ListTopicsCommandOutput } from "@aws-sdk/client-sns";
    import { OptInPhoneNumberCommandInput, OptInPhoneNumberCommandOutput } from "@aws-sdk/client-sns";
    import { PublishCommandInput, PublishCommandOutput } from "@aws-sdk/client-sns";
    import { RemovePermissionCommandInput, RemovePermissionCommandOutput } from "@aws-sdk/client-sns";
    import { SetEndpointAttributesCommandInput, SetEndpointAttributesCommandOutput } from "@aws-sdk/client-sns";
    import { SetPlatformApplicationAttributesCommandInput, SetPlatformApplicationAttributesCommandOutput } from "@aws-sdk/client-sns";
    import { SetSMSAttributesCommandInput, SetSMSAttributesCommandOutput } from "@aws-sdk/client-sns";
    import { SetSubscriptionAttributesCommandInput, SetSubscriptionAttributesCommandOutput } from "@aws-sdk/client-sns";
    import { SetTopicAttributesCommandInput, SetTopicAttributesCommandOutput } from "@aws-sdk/client-sns";
    import { SubscribeCommandInput, SubscribeCommandOutput } from "@aws-sdk/client-sns";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-sns";
    import { UnsubscribeCommandInput, UnsubscribeCommandOutput } from "@aws-sdk/client-sns";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-sns";
    import { VerifySMSSandboxPhoneNumberCommandInput, VerifySMSSandboxPhoneNumberCommandOutput } from "@aws-sdk/client-sns";
    export const sdkSNSAddPermission: (input: SdkIntegrationTask<AddPermissionCommandInput>) => Promise<AddPermissionCommandOutput>;
    export const sdkSNSCheckIfPhoneNumberIsOptedOut: (input: SdkIntegrationTask<CheckIfPhoneNumberIsOptedOutCommandInput>) => Promise<CheckIfPhoneNumberIsOptedOutCommandOutput>;
    export const sdkSNSConfirmSubscription: (input: SdkIntegrationTask<ConfirmSubscriptionCommandInput>) => Promise<ConfirmSubscriptionCommandOutput>;
    export const sdkSNSCreatePlatformApplication: (input: SdkIntegrationTask<CreatePlatformApplicationCommandInput>) => Promise<CreatePlatformApplicationCommandOutput>;
    export const sdkSNSCreatePlatformEndpoint: (input: SdkIntegrationTask<CreatePlatformEndpointCommandInput>) => Promise<CreatePlatformEndpointCommandOutput>;
    export const sdkSNSCreateSMSSandboxPhoneNumber: (input: SdkIntegrationTask<CreateSMSSandboxPhoneNumberCommandInput>) => Promise<CreateSMSSandboxPhoneNumberCommandOutput>;
    export const sdkSNSCreateTopic: (input: SdkIntegrationTask<CreateTopicCommandInput>) => Promise<CreateTopicCommandOutput>;
    export const sdkSNSDeleteEndpoint: (input: SdkIntegrationTask<DeleteEndpointCommandInput>) => Promise<DeleteEndpointCommandOutput>;
    export const sdkSNSDeletePlatformApplication: (input: SdkIntegrationTask<DeletePlatformApplicationCommandInput>) => Promise<DeletePlatformApplicationCommandOutput>;
    export const sdkSNSDeleteSMSSandboxPhoneNumber: (input: SdkIntegrationTask<DeleteSMSSandboxPhoneNumberCommandInput>) => Promise<DeleteSMSSandboxPhoneNumberCommandOutput>;
    export const sdkSNSDeleteTopic: (input: SdkIntegrationTask<DeleteTopicCommandInput>) => Promise<DeleteTopicCommandOutput>;
    export const sdkSNSGetEndpointAttributes: (input: SdkIntegrationTask<GetEndpointAttributesCommandInput>) => Promise<GetEndpointAttributesCommandOutput>;
    export const sdkSNSGetPlatformApplicationAttributes: (input: SdkIntegrationTask<GetPlatformApplicationAttributesCommandInput>) => Promise<GetPlatformApplicationAttributesCommandOutput>;
    export const sdkSNSGetSMSAttributes: (input: SdkIntegrationTask<GetSMSAttributesCommandInput>) => Promise<GetSMSAttributesCommandOutput>;
    export const sdkSNSGetSMSSandboxAccountStatus: (input: SdkIntegrationTask<GetSMSSandboxAccountStatusCommandInput>) => Promise<GetSMSSandboxAccountStatusCommandOutput>;
    export const sdkSNSGetSubscriptionAttributes: (input: SdkIntegrationTask<GetSubscriptionAttributesCommandInput>) => Promise<GetSubscriptionAttributesCommandOutput>;
    export const sdkSNSGetTopicAttributes: (input: SdkIntegrationTask<GetTopicAttributesCommandInput>) => Promise<GetTopicAttributesCommandOutput>;
    export const sdkSNSListEndpointsByPlatformApplication: (input: SdkIntegrationTask<ListEndpointsByPlatformApplicationCommandInput>) => Promise<ListEndpointsByPlatformApplicationCommandOutput>;
    export const sdkSNSListOriginationNumbers: (input: SdkIntegrationTask<ListOriginationNumbersCommandInput>) => Promise<ListOriginationNumbersCommandOutput>;
    export const sdkSNSListPhoneNumbersOptedOut: (input: SdkIntegrationTask<ListPhoneNumbersOptedOutCommandInput>) => Promise<ListPhoneNumbersOptedOutCommandOutput>;
    export const sdkSNSListPlatformApplications: (input: SdkIntegrationTask<ListPlatformApplicationsCommandInput>) => Promise<ListPlatformApplicationsCommandOutput>;
    export const sdkSNSListSMSSandboxPhoneNumbers: (input: SdkIntegrationTask<ListSMSSandboxPhoneNumbersCommandInput>) => Promise<ListSMSSandboxPhoneNumbersCommandOutput>;
    export const sdkSNSListSubscriptions: (input: SdkIntegrationTask<ListSubscriptionsCommandInput>) => Promise<ListSubscriptionsCommandOutput>;
    export const sdkSNSListSubscriptionsByTopic: (input: SdkIntegrationTask<ListSubscriptionsByTopicCommandInput>) => Promise<ListSubscriptionsByTopicCommandOutput>;
    export const sdkSNSListTagsForResource: (input: SdkIntegrationTask<ListTagsForResourceCommandInput>) => Promise<ListTagsForResourceCommandOutput>;
    export const sdkSNSListTopics: (input: SdkIntegrationTask<ListTopicsCommandInput>) => Promise<ListTopicsCommandOutput>;
    export const sdkSNSOptInPhoneNumber: (input: SdkIntegrationTask<OptInPhoneNumberCommandInput>) => Promise<OptInPhoneNumberCommandOutput>;
    export const sdkSNSPublish: (input: SdkIntegrationTask<PublishCommandInput>) => Promise<PublishCommandOutput>;
    export const sdkSNSRemovePermission: (input: SdkIntegrationTask<RemovePermissionCommandInput>) => Promise<RemovePermissionCommandOutput>;
    export const sdkSNSSetEndpointAttributes: (input: SdkIntegrationTask<SetEndpointAttributesCommandInput>) => Promise<SetEndpointAttributesCommandOutput>;
    export const sdkSNSSetPlatformApplicationAttributes: (input: SdkIntegrationTask<SetPlatformApplicationAttributesCommandInput>) => Promise<SetPlatformApplicationAttributesCommandOutput>;
    export const sdkSNSSetSMSAttributes: (input: SdkIntegrationTask<SetSMSAttributesCommandInput>) => Promise<SetSMSAttributesCommandOutput>;
    export const sdkSNSSetSubscriptionAttributes: (input: SdkIntegrationTask<SetSubscriptionAttributesCommandInput>) => Promise<SetSubscriptionAttributesCommandOutput>;
    export const sdkSNSSetTopicAttributes: (input: SdkIntegrationTask<SetTopicAttributesCommandInput>) => Promise<SetTopicAttributesCommandOutput>;
    export const sdkSNSSubscribe: (input: SdkIntegrationTask<SubscribeCommandInput>) => Promise<SubscribeCommandOutput>;
    export const sdkSNSTagResource: (input: SdkIntegrationTask<TagResourceCommandInput>) => Promise<TagResourceCommandOutput>;
    export const sdkSNSUnsubscribe: (input: SdkIntegrationTask<UnsubscribeCommandInput>) => Promise<UnsubscribeCommandOutput>;
    export const sdkSNSUntagResource: (input: SdkIntegrationTask<UntagResourceCommandInput>) => Promise<UntagResourceCommandOutput>;
    export const sdkSNSVerifySMSSandboxPhoneNumber: (input: SdkIntegrationTask<VerifySMSSandboxPhoneNumberCommandInput>) => Promise<VerifySMSSandboxPhoneNumberCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-sqs' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { AddPermissionCommandInput, AddPermissionCommandOutput } from "@aws-sdk/client-sqs";
    import { ChangeMessageVisibilityCommandInput, ChangeMessageVisibilityCommandOutput } from "@aws-sdk/client-sqs";
    import { ChangeMessageVisibilityBatchCommandInput, ChangeMessageVisibilityBatchCommandOutput } from "@aws-sdk/client-sqs";
    import { CreateQueueCommandInput, CreateQueueCommandOutput } from "@aws-sdk/client-sqs";
    import { DeleteMessageCommandInput, DeleteMessageCommandOutput } from "@aws-sdk/client-sqs";
    import { DeleteMessageBatchCommandInput, DeleteMessageBatchCommandOutput } from "@aws-sdk/client-sqs";
    import { DeleteQueueCommandInput, DeleteQueueCommandOutput } from "@aws-sdk/client-sqs";
    import { GetQueueAttributesCommandInput, GetQueueAttributesCommandOutput } from "@aws-sdk/client-sqs";
    import { GetQueueUrlCommandInput, GetQueueUrlCommandOutput } from "@aws-sdk/client-sqs";
    import { ListDeadLetterSourceQueuesCommandInput, ListDeadLetterSourceQueuesCommandOutput } from "@aws-sdk/client-sqs";
    import { ListQueueTagsCommandInput, ListQueueTagsCommandOutput } from "@aws-sdk/client-sqs";
    import { ListQueuesCommandInput, ListQueuesCommandOutput } from "@aws-sdk/client-sqs";
    import { PurgeQueueCommandInput, PurgeQueueCommandOutput } from "@aws-sdk/client-sqs";
    import { ReceiveMessageCommandInput, ReceiveMessageCommandOutput } from "@aws-sdk/client-sqs";
    import { RemovePermissionCommandInput, RemovePermissionCommandOutput } from "@aws-sdk/client-sqs";
    import { SendMessageCommandInput, SendMessageCommandOutput } from "@aws-sdk/client-sqs";
    import { SendMessageBatchCommandInput, SendMessageBatchCommandOutput } from "@aws-sdk/client-sqs";
    import { SetQueueAttributesCommandInput, SetQueueAttributesCommandOutput } from "@aws-sdk/client-sqs";
    import { TagQueueCommandInput, TagQueueCommandOutput } from "@aws-sdk/client-sqs";
    import { UntagQueueCommandInput, UntagQueueCommandOutput } from "@aws-sdk/client-sqs";
    export const sdkSQSAddPermission: (input: SdkIntegrationTask<AddPermissionCommandInput>) => Promise<AddPermissionCommandOutput>;
    export const sdkSQSChangeMessageVisibility: (input: SdkIntegrationTask<ChangeMessageVisibilityCommandInput>) => Promise<ChangeMessageVisibilityCommandOutput>;
    export const sdkSQSChangeMessageVisibilityBatch: (input: SdkIntegrationTask<ChangeMessageVisibilityBatchCommandInput>) => Promise<ChangeMessageVisibilityBatchCommandOutput>;
    export const sdkSQSCreateQueue: (input: SdkIntegrationTask<CreateQueueCommandInput>) => Promise<CreateQueueCommandOutput>;
    export const sdkSQSDeleteMessage: (input: SdkIntegrationTask<DeleteMessageCommandInput>) => Promise<DeleteMessageCommandOutput>;
    export const sdkSQSDeleteMessageBatch: (input: SdkIntegrationTask<DeleteMessageBatchCommandInput>) => Promise<DeleteMessageBatchCommandOutput>;
    export const sdkSQSDeleteQueue: (input: SdkIntegrationTask<DeleteQueueCommandInput>) => Promise<DeleteQueueCommandOutput>;
    export const sdkSQSGetQueueAttributes: (input: SdkIntegrationTask<GetQueueAttributesCommandInput>) => Promise<GetQueueAttributesCommandOutput>;
    export const sdkSQSGetQueueUrl: (input: SdkIntegrationTask<GetQueueUrlCommandInput>) => Promise<GetQueueUrlCommandOutput>;
    export const sdkSQSListDeadLetterSourceQueues: (input: SdkIntegrationTask<ListDeadLetterSourceQueuesCommandInput>) => Promise<ListDeadLetterSourceQueuesCommandOutput>;
    export const sdkSQSListQueueTags: (input: SdkIntegrationTask<ListQueueTagsCommandInput>) => Promise<ListQueueTagsCommandOutput>;
    export const sdkSQSListQueues: (input: SdkIntegrationTask<ListQueuesCommandInput>) => Promise<ListQueuesCommandOutput>;
    export const sdkSQSPurgeQueue: (input: SdkIntegrationTask<PurgeQueueCommandInput>) => Promise<PurgeQueueCommandOutput>;
    export const sdkSQSReceiveMessage: (input: SdkIntegrationTask<ReceiveMessageCommandInput>) => Promise<ReceiveMessageCommandOutput>;
    export const sdkSQSRemovePermission: (input: SdkIntegrationTask<RemovePermissionCommandInput>) => Promise<RemovePermissionCommandOutput>;
    export const sdkSQSSendMessage: (input: SdkIntegrationTask<SendMessageCommandInput>) => Promise<SendMessageCommandOutput>;
    export const sdkSQSSendMessageBatch: (input: SdkIntegrationTask<SendMessageBatchCommandInput>) => Promise<SendMessageBatchCommandOutput>;
    export const sdkSQSSetQueueAttributes: (input: SdkIntegrationTask<SetQueueAttributesCommandInput>) => Promise<SetQueueAttributesCommandOutput>;
    export const sdkSQSTagQueue: (input: SdkIntegrationTask<TagQueueCommandInput>) => Promise<TagQueueCommandOutput>;
    export const sdkSQSUntagQueue: (input: SdkIntegrationTask<UntagQueueCommandInput>) => Promise<UntagQueueCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-ssm' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { AddTagsToResourceCommandInput, AddTagsToResourceCommandOutput } from "@aws-sdk/client-ssm";
    import { AssociateOpsItemRelatedItemCommandInput, AssociateOpsItemRelatedItemCommandOutput } from "@aws-sdk/client-ssm";
    import { CancelCommandCommandInput, CancelCommandCommandOutput } from "@aws-sdk/client-ssm";
    import { CancelMaintenanceWindowExecutionCommandInput, CancelMaintenanceWindowExecutionCommandOutput } from "@aws-sdk/client-ssm";
    import { CreateActivationCommandInput, CreateActivationCommandOutput } from "@aws-sdk/client-ssm";
    import { CreateAssociationCommandInput, CreateAssociationCommandOutput } from "@aws-sdk/client-ssm";
    import { CreateAssociationBatchCommandInput, CreateAssociationBatchCommandOutput } from "@aws-sdk/client-ssm";
    import { CreateDocumentCommandInput, CreateDocumentCommandOutput } from "@aws-sdk/client-ssm";
    import { CreateMaintenanceWindowCommandInput, CreateMaintenanceWindowCommandOutput } from "@aws-sdk/client-ssm";
    import { CreateOpsItemCommandInput, CreateOpsItemCommandOutput } from "@aws-sdk/client-ssm";
    import { CreateOpsMetadataCommandInput, CreateOpsMetadataCommandOutput } from "@aws-sdk/client-ssm";
    import { CreatePatchBaselineCommandInput, CreatePatchBaselineCommandOutput } from "@aws-sdk/client-ssm";
    import { CreateResourceDataSyncCommandInput, CreateResourceDataSyncCommandOutput } from "@aws-sdk/client-ssm";
    import { DeleteActivationCommandInput, DeleteActivationCommandOutput } from "@aws-sdk/client-ssm";
    import { DeleteAssociationCommandInput, DeleteAssociationCommandOutput } from "@aws-sdk/client-ssm";
    import { DeleteDocumentCommandInput, DeleteDocumentCommandOutput } from "@aws-sdk/client-ssm";
    import { DeleteInventoryCommandInput, DeleteInventoryCommandOutput } from "@aws-sdk/client-ssm";
    import { DeleteMaintenanceWindowCommandInput, DeleteMaintenanceWindowCommandOutput } from "@aws-sdk/client-ssm";
    import { DeleteOpsMetadataCommandInput, DeleteOpsMetadataCommandOutput } from "@aws-sdk/client-ssm";
    import { DeleteParameterCommandInput, DeleteParameterCommandOutput } from "@aws-sdk/client-ssm";
    import { DeleteParametersCommandInput, DeleteParametersCommandOutput } from "@aws-sdk/client-ssm";
    import { DeletePatchBaselineCommandInput, DeletePatchBaselineCommandOutput } from "@aws-sdk/client-ssm";
    import { DeleteResourceDataSyncCommandInput, DeleteResourceDataSyncCommandOutput } from "@aws-sdk/client-ssm";
    import { DeregisterManagedInstanceCommandInput, DeregisterManagedInstanceCommandOutput } from "@aws-sdk/client-ssm";
    import { DeregisterPatchBaselineForPatchGroupCommandInput, DeregisterPatchBaselineForPatchGroupCommandOutput } from "@aws-sdk/client-ssm";
    import { DeregisterTargetFromMaintenanceWindowCommandInput, DeregisterTargetFromMaintenanceWindowCommandOutput } from "@aws-sdk/client-ssm";
    import { DeregisterTaskFromMaintenanceWindowCommandInput, DeregisterTaskFromMaintenanceWindowCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeActivationsCommandInput, DescribeActivationsCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeAssociationCommandInput, DescribeAssociationCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeAssociationExecutionTargetsCommandInput, DescribeAssociationExecutionTargetsCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeAssociationExecutionsCommandInput, DescribeAssociationExecutionsCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeAutomationExecutionsCommandInput, DescribeAutomationExecutionsCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeAutomationStepExecutionsCommandInput, DescribeAutomationStepExecutionsCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeAvailablePatchesCommandInput, DescribeAvailablePatchesCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeDocumentCommandInput, DescribeDocumentCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeDocumentPermissionCommandInput, DescribeDocumentPermissionCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeEffectiveInstanceAssociationsCommandInput, DescribeEffectiveInstanceAssociationsCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeEffectivePatchesForPatchBaselineCommandInput, DescribeEffectivePatchesForPatchBaselineCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeInstanceAssociationsStatusCommandInput, DescribeInstanceAssociationsStatusCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeInstanceInformationCommandInput, DescribeInstanceInformationCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeInstancePatchStatesCommandInput, DescribeInstancePatchStatesCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeInstancePatchStatesForPatchGroupCommandInput, DescribeInstancePatchStatesForPatchGroupCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeInstancePatchesCommandInput, DescribeInstancePatchesCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeInventoryDeletionsCommandInput, DescribeInventoryDeletionsCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeMaintenanceWindowExecutionTaskInvocationsCommandInput, DescribeMaintenanceWindowExecutionTaskInvocationsCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeMaintenanceWindowExecutionTasksCommandInput, DescribeMaintenanceWindowExecutionTasksCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeMaintenanceWindowExecutionsCommandInput, DescribeMaintenanceWindowExecutionsCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeMaintenanceWindowScheduleCommandInput, DescribeMaintenanceWindowScheduleCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeMaintenanceWindowTargetsCommandInput, DescribeMaintenanceWindowTargetsCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeMaintenanceWindowTasksCommandInput, DescribeMaintenanceWindowTasksCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeMaintenanceWindowsCommandInput, DescribeMaintenanceWindowsCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeMaintenanceWindowsForTargetCommandInput, DescribeMaintenanceWindowsForTargetCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeOpsItemsCommandInput, DescribeOpsItemsCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeParametersCommandInput, DescribeParametersCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribePatchBaselinesCommandInput, DescribePatchBaselinesCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribePatchGroupStateCommandInput, DescribePatchGroupStateCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribePatchGroupsCommandInput, DescribePatchGroupsCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribePatchPropertiesCommandInput, DescribePatchPropertiesCommandOutput } from "@aws-sdk/client-ssm";
    import { DescribeSessionsCommandInput, DescribeSessionsCommandOutput } from "@aws-sdk/client-ssm";
    import { DisassociateOpsItemRelatedItemCommandInput, DisassociateOpsItemRelatedItemCommandOutput } from "@aws-sdk/client-ssm";
    import { GetAutomationExecutionCommandInput, GetAutomationExecutionCommandOutput } from "@aws-sdk/client-ssm";
    import { GetCalendarStateCommandInput, GetCalendarStateCommandOutput } from "@aws-sdk/client-ssm";
    import { GetCommandInvocationCommandInput, GetCommandInvocationCommandOutput } from "@aws-sdk/client-ssm";
    import { GetConnectionStatusCommandInput, GetConnectionStatusCommandOutput } from "@aws-sdk/client-ssm";
    import { GetDefaultPatchBaselineCommandInput, GetDefaultPatchBaselineCommandOutput } from "@aws-sdk/client-ssm";
    import { GetDeployablePatchSnapshotForInstanceCommandInput, GetDeployablePatchSnapshotForInstanceCommandOutput } from "@aws-sdk/client-ssm";
    import { GetDocumentCommandInput, GetDocumentCommandOutput } from "@aws-sdk/client-ssm";
    import { GetInventoryCommandInput, GetInventoryCommandOutput } from "@aws-sdk/client-ssm";
    import { GetInventorySchemaCommandInput, GetInventorySchemaCommandOutput } from "@aws-sdk/client-ssm";
    import { GetMaintenanceWindowCommandInput, GetMaintenanceWindowCommandOutput } from "@aws-sdk/client-ssm";
    import { GetMaintenanceWindowExecutionCommandInput, GetMaintenanceWindowExecutionCommandOutput } from "@aws-sdk/client-ssm";
    import { GetMaintenanceWindowExecutionTaskCommandInput, GetMaintenanceWindowExecutionTaskCommandOutput } from "@aws-sdk/client-ssm";
    import { GetMaintenanceWindowExecutionTaskInvocationCommandInput, GetMaintenanceWindowExecutionTaskInvocationCommandOutput } from "@aws-sdk/client-ssm";
    import { GetMaintenanceWindowTaskCommandInput, GetMaintenanceWindowTaskCommandOutput } from "@aws-sdk/client-ssm";
    import { GetOpsItemCommandInput, GetOpsItemCommandOutput } from "@aws-sdk/client-ssm";
    import { GetOpsMetadataCommandInput, GetOpsMetadataCommandOutput } from "@aws-sdk/client-ssm";
    import { GetOpsSummaryCommandInput, GetOpsSummaryCommandOutput } from "@aws-sdk/client-ssm";
    import { GetParameterCommandInput, GetParameterCommandOutput } from "@aws-sdk/client-ssm";
    import { GetParameterHistoryCommandInput, GetParameterHistoryCommandOutput } from "@aws-sdk/client-ssm";
    import { GetParametersCommandInput, GetParametersCommandOutput } from "@aws-sdk/client-ssm";
    import { GetParametersByPathCommandInput, GetParametersByPathCommandOutput } from "@aws-sdk/client-ssm";
    import { GetPatchBaselineCommandInput, GetPatchBaselineCommandOutput } from "@aws-sdk/client-ssm";
    import { GetPatchBaselineForPatchGroupCommandInput, GetPatchBaselineForPatchGroupCommandOutput } from "@aws-sdk/client-ssm";
    import { GetServiceSettingCommandInput, GetServiceSettingCommandOutput } from "@aws-sdk/client-ssm";
    import { LabelParameterVersionCommandInput, LabelParameterVersionCommandOutput } from "@aws-sdk/client-ssm";
    import { ListAssociationVersionsCommandInput, ListAssociationVersionsCommandOutput } from "@aws-sdk/client-ssm";
    import { ListAssociationsCommandInput, ListAssociationsCommandOutput } from "@aws-sdk/client-ssm";
    import { ListCommandInvocationsCommandInput, ListCommandInvocationsCommandOutput } from "@aws-sdk/client-ssm";
    import { ListCommandsCommandInput, ListCommandsCommandOutput } from "@aws-sdk/client-ssm";
    import { ListComplianceItemsCommandInput, ListComplianceItemsCommandOutput } from "@aws-sdk/client-ssm";
    import { ListComplianceSummariesCommandInput, ListComplianceSummariesCommandOutput } from "@aws-sdk/client-ssm";
    import { ListDocumentMetadataHistoryCommandInput, ListDocumentMetadataHistoryCommandOutput } from "@aws-sdk/client-ssm";
    import { ListDocumentVersionsCommandInput, ListDocumentVersionsCommandOutput } from "@aws-sdk/client-ssm";
    import { ListDocumentsCommandInput, ListDocumentsCommandOutput } from "@aws-sdk/client-ssm";
    import { ListInventoryEntriesCommandInput, ListInventoryEntriesCommandOutput } from "@aws-sdk/client-ssm";
    import { ListOpsItemEventsCommandInput, ListOpsItemEventsCommandOutput } from "@aws-sdk/client-ssm";
    import { ListOpsItemRelatedItemsCommandInput, ListOpsItemRelatedItemsCommandOutput } from "@aws-sdk/client-ssm";
    import { ListOpsMetadataCommandInput, ListOpsMetadataCommandOutput } from "@aws-sdk/client-ssm";
    import { ListResourceComplianceSummariesCommandInput, ListResourceComplianceSummariesCommandOutput } from "@aws-sdk/client-ssm";
    import { ListResourceDataSyncCommandInput, ListResourceDataSyncCommandOutput } from "@aws-sdk/client-ssm";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-ssm";
    import { ModifyDocumentPermissionCommandInput, ModifyDocumentPermissionCommandOutput } from "@aws-sdk/client-ssm";
    import { PutComplianceItemsCommandInput, PutComplianceItemsCommandOutput } from "@aws-sdk/client-ssm";
    import { PutInventoryCommandInput, PutInventoryCommandOutput } from "@aws-sdk/client-ssm";
    import { PutParameterCommandInput, PutParameterCommandOutput } from "@aws-sdk/client-ssm";
    import { RegisterDefaultPatchBaselineCommandInput, RegisterDefaultPatchBaselineCommandOutput } from "@aws-sdk/client-ssm";
    import { RegisterPatchBaselineForPatchGroupCommandInput, RegisterPatchBaselineForPatchGroupCommandOutput } from "@aws-sdk/client-ssm";
    import { RegisterTargetWithMaintenanceWindowCommandInput, RegisterTargetWithMaintenanceWindowCommandOutput } from "@aws-sdk/client-ssm";
    import { RegisterTaskWithMaintenanceWindowCommandInput, RegisterTaskWithMaintenanceWindowCommandOutput } from "@aws-sdk/client-ssm";
    import { RemoveTagsFromResourceCommandInput, RemoveTagsFromResourceCommandOutput } from "@aws-sdk/client-ssm";
    import { ResetServiceSettingCommandInput, ResetServiceSettingCommandOutput } from "@aws-sdk/client-ssm";
    import { ResumeSessionCommandInput, ResumeSessionCommandOutput } from "@aws-sdk/client-ssm";
    import { SendAutomationSignalCommandInput, SendAutomationSignalCommandOutput } from "@aws-sdk/client-ssm";
    import { SendCommandCommandInput, SendCommandCommandOutput } from "@aws-sdk/client-ssm";
    import { StartAssociationsOnceCommandInput, StartAssociationsOnceCommandOutput } from "@aws-sdk/client-ssm";
    import { StartAutomationExecutionCommandInput, StartAutomationExecutionCommandOutput } from "@aws-sdk/client-ssm";
    import { StartChangeRequestExecutionCommandInput, StartChangeRequestExecutionCommandOutput } from "@aws-sdk/client-ssm";
    import { StartSessionCommandInput, StartSessionCommandOutput } from "@aws-sdk/client-ssm";
    import { StopAutomationExecutionCommandInput, StopAutomationExecutionCommandOutput } from "@aws-sdk/client-ssm";
    import { TerminateSessionCommandInput, TerminateSessionCommandOutput } from "@aws-sdk/client-ssm";
    import { UnlabelParameterVersionCommandInput, UnlabelParameterVersionCommandOutput } from "@aws-sdk/client-ssm";
    import { UpdateAssociationCommandInput, UpdateAssociationCommandOutput } from "@aws-sdk/client-ssm";
    import { UpdateAssociationStatusCommandInput, UpdateAssociationStatusCommandOutput } from "@aws-sdk/client-ssm";
    import { UpdateDocumentCommandInput, UpdateDocumentCommandOutput } from "@aws-sdk/client-ssm";
    import { UpdateDocumentDefaultVersionCommandInput, UpdateDocumentDefaultVersionCommandOutput } from "@aws-sdk/client-ssm";
    import { UpdateDocumentMetadataCommandInput, UpdateDocumentMetadataCommandOutput } from "@aws-sdk/client-ssm";
    import { UpdateMaintenanceWindowCommandInput, UpdateMaintenanceWindowCommandOutput } from "@aws-sdk/client-ssm";
    import { UpdateMaintenanceWindowTargetCommandInput, UpdateMaintenanceWindowTargetCommandOutput } from "@aws-sdk/client-ssm";
    import { UpdateMaintenanceWindowTaskCommandInput, UpdateMaintenanceWindowTaskCommandOutput } from "@aws-sdk/client-ssm";
    import { UpdateManagedInstanceRoleCommandInput, UpdateManagedInstanceRoleCommandOutput } from "@aws-sdk/client-ssm";
    import { UpdateOpsItemCommandInput, UpdateOpsItemCommandOutput } from "@aws-sdk/client-ssm";
    import { UpdateOpsMetadataCommandInput, UpdateOpsMetadataCommandOutput } from "@aws-sdk/client-ssm";
    import { UpdatePatchBaselineCommandInput, UpdatePatchBaselineCommandOutput } from "@aws-sdk/client-ssm";
    import { UpdateResourceDataSyncCommandInput, UpdateResourceDataSyncCommandOutput } from "@aws-sdk/client-ssm";
    import { UpdateServiceSettingCommandInput, UpdateServiceSettingCommandOutput } from "@aws-sdk/client-ssm";
    export const sdkSSMAddTagsToResource: (input: SdkIntegrationTask<AddTagsToResourceCommandInput>) => Promise<AddTagsToResourceCommandOutput>;
    export const sdkSSMAssociateOpsItemRelatedItem: (input: SdkIntegrationTask<AssociateOpsItemRelatedItemCommandInput>) => Promise<AssociateOpsItemRelatedItemCommandOutput>;
    export const sdkSSMCancelCommand: (input: SdkIntegrationTask<CancelCommandCommandInput>) => Promise<CancelCommandCommandOutput>;
    export const sdkSSMCancelMaintenanceWindowExecution: (input: SdkIntegrationTask<CancelMaintenanceWindowExecutionCommandInput>) => Promise<CancelMaintenanceWindowExecutionCommandOutput>;
    export const sdkSSMCreateActivation: (input: SdkIntegrationTask<CreateActivationCommandInput>) => Promise<CreateActivationCommandOutput>;
    export const sdkSSMCreateAssociation: (input: SdkIntegrationTask<CreateAssociationCommandInput>) => Promise<CreateAssociationCommandOutput>;
    export const sdkSSMCreateAssociationBatch: (input: SdkIntegrationTask<CreateAssociationBatchCommandInput>) => Promise<CreateAssociationBatchCommandOutput>;
    export const sdkSSMCreateDocument: (input: SdkIntegrationTask<CreateDocumentCommandInput>) => Promise<CreateDocumentCommandOutput>;
    export const sdkSSMCreateMaintenanceWindow: (input: SdkIntegrationTask<CreateMaintenanceWindowCommandInput>) => Promise<CreateMaintenanceWindowCommandOutput>;
    export const sdkSSMCreateOpsItem: (input: SdkIntegrationTask<CreateOpsItemCommandInput>) => Promise<CreateOpsItemCommandOutput>;
    export const sdkSSMCreateOpsMetadata: (input: SdkIntegrationTask<CreateOpsMetadataCommandInput>) => Promise<CreateOpsMetadataCommandOutput>;
    export const sdkSSMCreatePatchBaseline: (input: SdkIntegrationTask<CreatePatchBaselineCommandInput>) => Promise<CreatePatchBaselineCommandOutput>;
    export const sdkSSMCreateResourceDataSync: (input: SdkIntegrationTask<CreateResourceDataSyncCommandInput>) => Promise<CreateResourceDataSyncCommandOutput>;
    export const sdkSSMDeleteActivation: (input: SdkIntegrationTask<DeleteActivationCommandInput>) => Promise<DeleteActivationCommandOutput>;
    export const sdkSSMDeleteAssociation: (input: SdkIntegrationTask<DeleteAssociationCommandInput>) => Promise<DeleteAssociationCommandOutput>;
    export const sdkSSMDeleteDocument: (input: SdkIntegrationTask<DeleteDocumentCommandInput>) => Promise<DeleteDocumentCommandOutput>;
    export const sdkSSMDeleteInventory: (input: SdkIntegrationTask<DeleteInventoryCommandInput>) => Promise<DeleteInventoryCommandOutput>;
    export const sdkSSMDeleteMaintenanceWindow: (input: SdkIntegrationTask<DeleteMaintenanceWindowCommandInput>) => Promise<DeleteMaintenanceWindowCommandOutput>;
    export const sdkSSMDeleteOpsMetadata: (input: SdkIntegrationTask<DeleteOpsMetadataCommandInput>) => Promise<DeleteOpsMetadataCommandOutput>;
    export const sdkSSMDeleteParameter: (input: SdkIntegrationTask<DeleteParameterCommandInput>) => Promise<DeleteParameterCommandOutput>;
    export const sdkSSMDeleteParameters: (input: SdkIntegrationTask<DeleteParametersCommandInput>) => Promise<DeleteParametersCommandOutput>;
    export const sdkSSMDeletePatchBaseline: (input: SdkIntegrationTask<DeletePatchBaselineCommandInput>) => Promise<DeletePatchBaselineCommandOutput>;
    export const sdkSSMDeleteResourceDataSync: (input: SdkIntegrationTask<DeleteResourceDataSyncCommandInput>) => Promise<DeleteResourceDataSyncCommandOutput>;
    export const sdkSSMDeregisterManagedInstance: (input: SdkIntegrationTask<DeregisterManagedInstanceCommandInput>) => Promise<DeregisterManagedInstanceCommandOutput>;
    export const sdkSSMDeregisterPatchBaselineForPatchGroup: (input: SdkIntegrationTask<DeregisterPatchBaselineForPatchGroupCommandInput>) => Promise<DeregisterPatchBaselineForPatchGroupCommandOutput>;
    export const sdkSSMDeregisterTargetFromMaintenanceWindow: (input: SdkIntegrationTask<DeregisterTargetFromMaintenanceWindowCommandInput>) => Promise<DeregisterTargetFromMaintenanceWindowCommandOutput>;
    export const sdkSSMDeregisterTaskFromMaintenanceWindow: (input: SdkIntegrationTask<DeregisterTaskFromMaintenanceWindowCommandInput>) => Promise<DeregisterTaskFromMaintenanceWindowCommandOutput>;
    export const sdkSSMDescribeActivations: (input: SdkIntegrationTask<DescribeActivationsCommandInput>) => Promise<DescribeActivationsCommandOutput>;
    export const sdkSSMDescribeAssociation: (input: SdkIntegrationTask<DescribeAssociationCommandInput>) => Promise<DescribeAssociationCommandOutput>;
    export const sdkSSMDescribeAssociationExecutionTargets: (input: SdkIntegrationTask<DescribeAssociationExecutionTargetsCommandInput>) => Promise<DescribeAssociationExecutionTargetsCommandOutput>;
    export const sdkSSMDescribeAssociationExecutions: (input: SdkIntegrationTask<DescribeAssociationExecutionsCommandInput>) => Promise<DescribeAssociationExecutionsCommandOutput>;
    export const sdkSSMDescribeAutomationExecutions: (input: SdkIntegrationTask<DescribeAutomationExecutionsCommandInput>) => Promise<DescribeAutomationExecutionsCommandOutput>;
    export const sdkSSMDescribeAutomationStepExecutions: (input: SdkIntegrationTask<DescribeAutomationStepExecutionsCommandInput>) => Promise<DescribeAutomationStepExecutionsCommandOutput>;
    export const sdkSSMDescribeAvailablePatches: (input: SdkIntegrationTask<DescribeAvailablePatchesCommandInput>) => Promise<DescribeAvailablePatchesCommandOutput>;
    export const sdkSSMDescribeDocument: (input: SdkIntegrationTask<DescribeDocumentCommandInput>) => Promise<DescribeDocumentCommandOutput>;
    export const sdkSSMDescribeDocumentPermission: (input: SdkIntegrationTask<DescribeDocumentPermissionCommandInput>) => Promise<DescribeDocumentPermissionCommandOutput>;
    export const sdkSSMDescribeEffectiveInstanceAssociations: (input: SdkIntegrationTask<DescribeEffectiveInstanceAssociationsCommandInput>) => Promise<DescribeEffectiveInstanceAssociationsCommandOutput>;
    export const sdkSSMDescribeEffectivePatchesForPatchBaseline: (input: SdkIntegrationTask<DescribeEffectivePatchesForPatchBaselineCommandInput>) => Promise<DescribeEffectivePatchesForPatchBaselineCommandOutput>;
    export const sdkSSMDescribeInstanceAssociationsStatus: (input: SdkIntegrationTask<DescribeInstanceAssociationsStatusCommandInput>) => Promise<DescribeInstanceAssociationsStatusCommandOutput>;
    export const sdkSSMDescribeInstanceInformation: (input: SdkIntegrationTask<DescribeInstanceInformationCommandInput>) => Promise<DescribeInstanceInformationCommandOutput>;
    export const sdkSSMDescribeInstancePatchStates: (input: SdkIntegrationTask<DescribeInstancePatchStatesCommandInput>) => Promise<DescribeInstancePatchStatesCommandOutput>;
    export const sdkSSMDescribeInstancePatchStatesForPatchGroup: (input: SdkIntegrationTask<DescribeInstancePatchStatesForPatchGroupCommandInput>) => Promise<DescribeInstancePatchStatesForPatchGroupCommandOutput>;
    export const sdkSSMDescribeInstancePatches: (input: SdkIntegrationTask<DescribeInstancePatchesCommandInput>) => Promise<DescribeInstancePatchesCommandOutput>;
    export const sdkSSMDescribeInventoryDeletions: (input: SdkIntegrationTask<DescribeInventoryDeletionsCommandInput>) => Promise<DescribeInventoryDeletionsCommandOutput>;
    export const sdkSSMDescribeMaintenanceWindowExecutionTaskInvocations: (input: SdkIntegrationTask<DescribeMaintenanceWindowExecutionTaskInvocationsCommandInput>) => Promise<DescribeMaintenanceWindowExecutionTaskInvocationsCommandOutput>;
    export const sdkSSMDescribeMaintenanceWindowExecutionTasks: (input: SdkIntegrationTask<DescribeMaintenanceWindowExecutionTasksCommandInput>) => Promise<DescribeMaintenanceWindowExecutionTasksCommandOutput>;
    export const sdkSSMDescribeMaintenanceWindowExecutions: (input: SdkIntegrationTask<DescribeMaintenanceWindowExecutionsCommandInput>) => Promise<DescribeMaintenanceWindowExecutionsCommandOutput>;
    export const sdkSSMDescribeMaintenanceWindowSchedule: (input: SdkIntegrationTask<DescribeMaintenanceWindowScheduleCommandInput>) => Promise<DescribeMaintenanceWindowScheduleCommandOutput>;
    export const sdkSSMDescribeMaintenanceWindowTargets: (input: SdkIntegrationTask<DescribeMaintenanceWindowTargetsCommandInput>) => Promise<DescribeMaintenanceWindowTargetsCommandOutput>;
    export const sdkSSMDescribeMaintenanceWindowTasks: (input: SdkIntegrationTask<DescribeMaintenanceWindowTasksCommandInput>) => Promise<DescribeMaintenanceWindowTasksCommandOutput>;
    export const sdkSSMDescribeMaintenanceWindows: (input: SdkIntegrationTask<DescribeMaintenanceWindowsCommandInput>) => Promise<DescribeMaintenanceWindowsCommandOutput>;
    export const sdkSSMDescribeMaintenanceWindowsForTarget: (input: SdkIntegrationTask<DescribeMaintenanceWindowsForTargetCommandInput>) => Promise<DescribeMaintenanceWindowsForTargetCommandOutput>;
    export const sdkSSMDescribeOpsItems: (input: SdkIntegrationTask<DescribeOpsItemsCommandInput>) => Promise<DescribeOpsItemsCommandOutput>;
    export const sdkSSMDescribeParameters: (input: SdkIntegrationTask<DescribeParametersCommandInput>) => Promise<DescribeParametersCommandOutput>;
    export const sdkSSMDescribePatchBaselines: (input: SdkIntegrationTask<DescribePatchBaselinesCommandInput>) => Promise<DescribePatchBaselinesCommandOutput>;
    export const sdkSSMDescribePatchGroupState: (input: SdkIntegrationTask<DescribePatchGroupStateCommandInput>) => Promise<DescribePatchGroupStateCommandOutput>;
    export const sdkSSMDescribePatchGroups: (input: SdkIntegrationTask<DescribePatchGroupsCommandInput>) => Promise<DescribePatchGroupsCommandOutput>;
    export const sdkSSMDescribePatchProperties: (input: SdkIntegrationTask<DescribePatchPropertiesCommandInput>) => Promise<DescribePatchPropertiesCommandOutput>;
    export const sdkSSMDescribeSessions: (input: SdkIntegrationTask<DescribeSessionsCommandInput>) => Promise<DescribeSessionsCommandOutput>;
    export const sdkSSMDisassociateOpsItemRelatedItem: (input: SdkIntegrationTask<DisassociateOpsItemRelatedItemCommandInput>) => Promise<DisassociateOpsItemRelatedItemCommandOutput>;
    export const sdkSSMGetAutomationExecution: (input: SdkIntegrationTask<GetAutomationExecutionCommandInput>) => Promise<GetAutomationExecutionCommandOutput>;
    export const sdkSSMGetCalendarState: (input: SdkIntegrationTask<GetCalendarStateCommandInput>) => Promise<GetCalendarStateCommandOutput>;
    export const sdkSSMGetCommandInvocation: (input: SdkIntegrationTask<GetCommandInvocationCommandInput>) => Promise<GetCommandInvocationCommandOutput>;
    export const sdkSSMGetConnectionStatus: (input: SdkIntegrationTask<GetConnectionStatusCommandInput>) => Promise<GetConnectionStatusCommandOutput>;
    export const sdkSSMGetDefaultPatchBaseline: (input: SdkIntegrationTask<GetDefaultPatchBaselineCommandInput>) => Promise<GetDefaultPatchBaselineCommandOutput>;
    export const sdkSSMGetDeployablePatchSnapshotForInstance: (input: SdkIntegrationTask<GetDeployablePatchSnapshotForInstanceCommandInput>) => Promise<GetDeployablePatchSnapshotForInstanceCommandOutput>;
    export const sdkSSMGetDocument: (input: SdkIntegrationTask<GetDocumentCommandInput>) => Promise<GetDocumentCommandOutput>;
    export const sdkSSMGetInventory: (input: SdkIntegrationTask<GetInventoryCommandInput>) => Promise<GetInventoryCommandOutput>;
    export const sdkSSMGetInventorySchema: (input: SdkIntegrationTask<GetInventorySchemaCommandInput>) => Promise<GetInventorySchemaCommandOutput>;
    export const sdkSSMGetMaintenanceWindow: (input: SdkIntegrationTask<GetMaintenanceWindowCommandInput>) => Promise<GetMaintenanceWindowCommandOutput>;
    export const sdkSSMGetMaintenanceWindowExecution: (input: SdkIntegrationTask<GetMaintenanceWindowExecutionCommandInput>) => Promise<GetMaintenanceWindowExecutionCommandOutput>;
    export const sdkSSMGetMaintenanceWindowExecutionTask: (input: SdkIntegrationTask<GetMaintenanceWindowExecutionTaskCommandInput>) => Promise<GetMaintenanceWindowExecutionTaskCommandOutput>;
    export const sdkSSMGetMaintenanceWindowExecutionTaskInvocation: (input: SdkIntegrationTask<GetMaintenanceWindowExecutionTaskInvocationCommandInput>) => Promise<GetMaintenanceWindowExecutionTaskInvocationCommandOutput>;
    export const sdkSSMGetMaintenanceWindowTask: (input: SdkIntegrationTask<GetMaintenanceWindowTaskCommandInput>) => Promise<GetMaintenanceWindowTaskCommandOutput>;
    export const sdkSSMGetOpsItem: (input: SdkIntegrationTask<GetOpsItemCommandInput>) => Promise<GetOpsItemCommandOutput>;
    export const sdkSSMGetOpsMetadata: (input: SdkIntegrationTask<GetOpsMetadataCommandInput>) => Promise<GetOpsMetadataCommandOutput>;
    export const sdkSSMGetOpsSummary: (input: SdkIntegrationTask<GetOpsSummaryCommandInput>) => Promise<GetOpsSummaryCommandOutput>;
    export const sdkSSMGetParameter: (input: SdkIntegrationTask<GetParameterCommandInput>) => Promise<GetParameterCommandOutput>;
    export const sdkSSMGetParameterHistory: (input: SdkIntegrationTask<GetParameterHistoryCommandInput>) => Promise<GetParameterHistoryCommandOutput>;
    export const sdkSSMGetParameters: (input: SdkIntegrationTask<GetParametersCommandInput>) => Promise<GetParametersCommandOutput>;
    export const sdkSSMGetParametersByPath: (input: SdkIntegrationTask<GetParametersByPathCommandInput>) => Promise<GetParametersByPathCommandOutput>;
    export const sdkSSMGetPatchBaseline: (input: SdkIntegrationTask<GetPatchBaselineCommandInput>) => Promise<GetPatchBaselineCommandOutput>;
    export const sdkSSMGetPatchBaselineForPatchGroup: (input: SdkIntegrationTask<GetPatchBaselineForPatchGroupCommandInput>) => Promise<GetPatchBaselineForPatchGroupCommandOutput>;
    export const sdkSSMGetServiceSetting: (input: SdkIntegrationTask<GetServiceSettingCommandInput>) => Promise<GetServiceSettingCommandOutput>;
    export const sdkSSMLabelParameterVersion: (input: SdkIntegrationTask<LabelParameterVersionCommandInput>) => Promise<LabelParameterVersionCommandOutput>;
    export const sdkSSMListAssociationVersions: (input: SdkIntegrationTask<ListAssociationVersionsCommandInput>) => Promise<ListAssociationVersionsCommandOutput>;
    export const sdkSSMListAssociations: (input: SdkIntegrationTask<ListAssociationsCommandInput>) => Promise<ListAssociationsCommandOutput>;
    export const sdkSSMListCommandInvocations: (input: SdkIntegrationTask<ListCommandInvocationsCommandInput>) => Promise<ListCommandInvocationsCommandOutput>;
    export const sdkSSMListCommands: (input: SdkIntegrationTask<ListCommandsCommandInput>) => Promise<ListCommandsCommandOutput>;
    export const sdkSSMListComplianceItems: (input: SdkIntegrationTask<ListComplianceItemsCommandInput>) => Promise<ListComplianceItemsCommandOutput>;
    export const sdkSSMListComplianceSummaries: (input: SdkIntegrationTask<ListComplianceSummariesCommandInput>) => Promise<ListComplianceSummariesCommandOutput>;
    export const sdkSSMListDocumentMetadataHistory: (input: SdkIntegrationTask<ListDocumentMetadataHistoryCommandInput>) => Promise<ListDocumentMetadataHistoryCommandOutput>;
    export const sdkSSMListDocumentVersions: (input: SdkIntegrationTask<ListDocumentVersionsCommandInput>) => Promise<ListDocumentVersionsCommandOutput>;
    export const sdkSSMListDocuments: (input: SdkIntegrationTask<ListDocumentsCommandInput>) => Promise<ListDocumentsCommandOutput>;
    export const sdkSSMListInventoryEntries: (input: SdkIntegrationTask<ListInventoryEntriesCommandInput>) => Promise<ListInventoryEntriesCommandOutput>;
    export const sdkSSMListOpsItemEvents: (input: SdkIntegrationTask<ListOpsItemEventsCommandInput>) => Promise<ListOpsItemEventsCommandOutput>;
    export const sdkSSMListOpsItemRelatedItems: (input: SdkIntegrationTask<ListOpsItemRelatedItemsCommandInput>) => Promise<ListOpsItemRelatedItemsCommandOutput>;
    export const sdkSSMListOpsMetadata: (input: SdkIntegrationTask<ListOpsMetadataCommandInput>) => Promise<ListOpsMetadataCommandOutput>;
    export const sdkSSMListResourceComplianceSummaries: (input: SdkIntegrationTask<ListResourceComplianceSummariesCommandInput>) => Promise<ListResourceComplianceSummariesCommandOutput>;
    export const sdkSSMListResourceDataSync: (input: SdkIntegrationTask<ListResourceDataSyncCommandInput>) => Promise<ListResourceDataSyncCommandOutput>;
    export const sdkSSMListTagsForResource: (input: SdkIntegrationTask<ListTagsForResourceCommandInput>) => Promise<ListTagsForResourceCommandOutput>;
    export const sdkSSMModifyDocumentPermission: (input: SdkIntegrationTask<ModifyDocumentPermissionCommandInput>) => Promise<ModifyDocumentPermissionCommandOutput>;
    export const sdkSSMPutComplianceItems: (input: SdkIntegrationTask<PutComplianceItemsCommandInput>) => Promise<PutComplianceItemsCommandOutput>;
    export const sdkSSMPutInventory: (input: SdkIntegrationTask<PutInventoryCommandInput>) => Promise<PutInventoryCommandOutput>;
    export const sdkSSMPutParameter: (input: SdkIntegrationTask<PutParameterCommandInput>) => Promise<PutParameterCommandOutput>;
    export const sdkSSMRegisterDefaultPatchBaseline: (input: SdkIntegrationTask<RegisterDefaultPatchBaselineCommandInput>) => Promise<RegisterDefaultPatchBaselineCommandOutput>;
    export const sdkSSMRegisterPatchBaselineForPatchGroup: (input: SdkIntegrationTask<RegisterPatchBaselineForPatchGroupCommandInput>) => Promise<RegisterPatchBaselineForPatchGroupCommandOutput>;
    export const sdkSSMRegisterTargetWithMaintenanceWindow: (input: SdkIntegrationTask<RegisterTargetWithMaintenanceWindowCommandInput>) => Promise<RegisterTargetWithMaintenanceWindowCommandOutput>;
    export const sdkSSMRegisterTaskWithMaintenanceWindow: (input: SdkIntegrationTask<RegisterTaskWithMaintenanceWindowCommandInput>) => Promise<RegisterTaskWithMaintenanceWindowCommandOutput>;
    export const sdkSSMRemoveTagsFromResource: (input: SdkIntegrationTask<RemoveTagsFromResourceCommandInput>) => Promise<RemoveTagsFromResourceCommandOutput>;
    export const sdkSSMResetServiceSetting: (input: SdkIntegrationTask<ResetServiceSettingCommandInput>) => Promise<ResetServiceSettingCommandOutput>;
    export const sdkSSMResumeSession: (input: SdkIntegrationTask<ResumeSessionCommandInput>) => Promise<ResumeSessionCommandOutput>;
    export const sdkSSMSendAutomationSignal: (input: SdkIntegrationTask<SendAutomationSignalCommandInput>) => Promise<SendAutomationSignalCommandOutput>;
    export const sdkSSMSendCommand: (input: SdkIntegrationTask<SendCommandCommandInput>) => Promise<SendCommandCommandOutput>;
    export const sdkSSMStartAssociationsOnce: (input: SdkIntegrationTask<StartAssociationsOnceCommandInput>) => Promise<StartAssociationsOnceCommandOutput>;
    export const sdkSSMStartAutomationExecution: (input: SdkIntegrationTask<StartAutomationExecutionCommandInput>) => Promise<StartAutomationExecutionCommandOutput>;
    export const sdkSSMStartChangeRequestExecution: (input: SdkIntegrationTask<StartChangeRequestExecutionCommandInput>) => Promise<StartChangeRequestExecutionCommandOutput>;
    export const sdkSSMStartSession: (input: SdkIntegrationTask<StartSessionCommandInput>) => Promise<StartSessionCommandOutput>;
    export const sdkSSMStopAutomationExecution: (input: SdkIntegrationTask<StopAutomationExecutionCommandInput>) => Promise<StopAutomationExecutionCommandOutput>;
    export const sdkSSMTerminateSession: (input: SdkIntegrationTask<TerminateSessionCommandInput>) => Promise<TerminateSessionCommandOutput>;
    export const sdkSSMUnlabelParameterVersion: (input: SdkIntegrationTask<UnlabelParameterVersionCommandInput>) => Promise<UnlabelParameterVersionCommandOutput>;
    export const sdkSSMUpdateAssociation: (input: SdkIntegrationTask<UpdateAssociationCommandInput>) => Promise<UpdateAssociationCommandOutput>;
    export const sdkSSMUpdateAssociationStatus: (input: SdkIntegrationTask<UpdateAssociationStatusCommandInput>) => Promise<UpdateAssociationStatusCommandOutput>;
    export const sdkSSMUpdateDocument: (input: SdkIntegrationTask<UpdateDocumentCommandInput>) => Promise<UpdateDocumentCommandOutput>;
    export const sdkSSMUpdateDocumentDefaultVersion: (input: SdkIntegrationTask<UpdateDocumentDefaultVersionCommandInput>) => Promise<UpdateDocumentDefaultVersionCommandOutput>;
    export const sdkSSMUpdateDocumentMetadata: (input: SdkIntegrationTask<UpdateDocumentMetadataCommandInput>) => Promise<UpdateDocumentMetadataCommandOutput>;
    export const sdkSSMUpdateMaintenanceWindow: (input: SdkIntegrationTask<UpdateMaintenanceWindowCommandInput>) => Promise<UpdateMaintenanceWindowCommandOutput>;
    export const sdkSSMUpdateMaintenanceWindowTarget: (input: SdkIntegrationTask<UpdateMaintenanceWindowTargetCommandInput>) => Promise<UpdateMaintenanceWindowTargetCommandOutput>;
    export const sdkSSMUpdateMaintenanceWindowTask: (input: SdkIntegrationTask<UpdateMaintenanceWindowTaskCommandInput>) => Promise<UpdateMaintenanceWindowTaskCommandOutput>;
    export const sdkSSMUpdateManagedInstanceRole: (input: SdkIntegrationTask<UpdateManagedInstanceRoleCommandInput>) => Promise<UpdateManagedInstanceRoleCommandOutput>;
    export const sdkSSMUpdateOpsItem: (input: SdkIntegrationTask<UpdateOpsItemCommandInput>) => Promise<UpdateOpsItemCommandOutput>;
    export const sdkSSMUpdateOpsMetadata: (input: SdkIntegrationTask<UpdateOpsMetadataCommandInput>) => Promise<UpdateOpsMetadataCommandOutput>;
    export const sdkSSMUpdatePatchBaseline: (input: SdkIntegrationTask<UpdatePatchBaselineCommandInput>) => Promise<UpdatePatchBaselineCommandOutput>;
    export const sdkSSMUpdateResourceDataSync: (input: SdkIntegrationTask<UpdateResourceDataSyncCommandInput>) => Promise<UpdateResourceDataSyncCommandOutput>;
    export const sdkSSMUpdateServiceSetting: (input: SdkIntegrationTask<UpdateServiceSettingCommandInput>) => Promise<UpdateServiceSettingCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-sfn' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { CreateActivityCommandInput, CreateActivityCommandOutput } from "@aws-sdk/client-sfn";
    import { CreateStateMachineCommandInput, CreateStateMachineCommandOutput } from "@aws-sdk/client-sfn";
    import { DeleteActivityCommandInput, DeleteActivityCommandOutput } from "@aws-sdk/client-sfn";
    import { DeleteStateMachineCommandInput, DeleteStateMachineCommandOutput } from "@aws-sdk/client-sfn";
    import { DescribeActivityCommandInput, DescribeActivityCommandOutput } from "@aws-sdk/client-sfn";
    import { DescribeExecutionCommandInput, DescribeExecutionCommandOutput } from "@aws-sdk/client-sfn";
    import { DescribeStateMachineCommandInput, DescribeStateMachineCommandOutput } from "@aws-sdk/client-sfn";
    import { DescribeStateMachineForExecutionCommandInput, DescribeStateMachineForExecutionCommandOutput } from "@aws-sdk/client-sfn";
    import { GetActivityTaskCommandInput, GetActivityTaskCommandOutput } from "@aws-sdk/client-sfn";
    import { GetExecutionHistoryCommandInput, GetExecutionHistoryCommandOutput } from "@aws-sdk/client-sfn";
    import { ListActivitiesCommandInput, ListActivitiesCommandOutput } from "@aws-sdk/client-sfn";
    import { ListExecutionsCommandInput, ListExecutionsCommandOutput } from "@aws-sdk/client-sfn";
    import { ListStateMachinesCommandInput, ListStateMachinesCommandOutput } from "@aws-sdk/client-sfn";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-sfn";
    import { SendTaskFailureCommandInput, SendTaskFailureCommandOutput } from "@aws-sdk/client-sfn";
    import { SendTaskHeartbeatCommandInput, SendTaskHeartbeatCommandOutput } from "@aws-sdk/client-sfn";
    import { SendTaskSuccessCommandInput, SendTaskSuccessCommandOutput } from "@aws-sdk/client-sfn";
    import { StartExecutionCommandInput, StartExecutionCommandOutput } from "@aws-sdk/client-sfn";
    import { StartSyncExecutionCommandInput, StartSyncExecutionCommandOutput } from "@aws-sdk/client-sfn";
    import { StopExecutionCommandInput, StopExecutionCommandOutput } from "@aws-sdk/client-sfn";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-sfn";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-sfn";
    import { UpdateStateMachineCommandInput, UpdateStateMachineCommandOutput } from "@aws-sdk/client-sfn";
    export const sdkSfnCreateActivity: (input: SdkIntegrationTask<CreateActivityCommandInput>) => Promise<CreateActivityCommandOutput>;
    export const sdkSfnCreateStateMachine: (input: SdkIntegrationTask<CreateStateMachineCommandInput>) => Promise<CreateStateMachineCommandOutput>;
    export const sdkSfnDeleteActivity: (input: SdkIntegrationTask<DeleteActivityCommandInput>) => Promise<DeleteActivityCommandOutput>;
    export const sdkSfnDeleteStateMachine: (input: SdkIntegrationTask<DeleteStateMachineCommandInput>) => Promise<DeleteStateMachineCommandOutput>;
    export const sdkSfnDescribeActivity: (input: SdkIntegrationTask<DescribeActivityCommandInput>) => Promise<DescribeActivityCommandOutput>;
    export const sdkSfnDescribeExecution: (input: SdkIntegrationTask<DescribeExecutionCommandInput>) => Promise<DescribeExecutionCommandOutput>;
    export const sdkSfnDescribeStateMachine: (input: SdkIntegrationTask<DescribeStateMachineCommandInput>) => Promise<DescribeStateMachineCommandOutput>;
    export const sdkSfnDescribeStateMachineForExecution: (input: SdkIntegrationTask<DescribeStateMachineForExecutionCommandInput>) => Promise<DescribeStateMachineForExecutionCommandOutput>;
    export const sdkSfnGetActivityTask: (input: SdkIntegrationTask<GetActivityTaskCommandInput>) => Promise<GetActivityTaskCommandOutput>;
    export const sdkSfnGetExecutionHistory: (input: SdkIntegrationTask<GetExecutionHistoryCommandInput>) => Promise<GetExecutionHistoryCommandOutput>;
    export const sdkSfnListActivities: (input: SdkIntegrationTask<ListActivitiesCommandInput>) => Promise<ListActivitiesCommandOutput>;
    export const sdkSfnListExecutions: (input: SdkIntegrationTask<ListExecutionsCommandInput>) => Promise<ListExecutionsCommandOutput>;
    export const sdkSfnListStateMachines: (input: SdkIntegrationTask<ListStateMachinesCommandInput>) => Promise<ListStateMachinesCommandOutput>;
    export const sdkSfnListTagsForResource: (input: SdkIntegrationTask<ListTagsForResourceCommandInput>) => Promise<ListTagsForResourceCommandOutput>;
    export const sdkSfnSendTaskFailure: (input: SdkIntegrationTask<SendTaskFailureCommandInput>) => Promise<SendTaskFailureCommandOutput>;
    export const sdkSfnSendTaskHeartbeat: (input: SdkIntegrationTask<SendTaskHeartbeatCommandInput>) => Promise<SendTaskHeartbeatCommandOutput>;
    export const sdkSfnSendTaskSuccess: (input: SdkIntegrationTask<SendTaskSuccessCommandInput>) => Promise<SendTaskSuccessCommandOutput>;
    export const sdkSfnStartExecution: (input: SdkIntegrationTask<StartExecutionCommandInput>) => Promise<StartExecutionCommandOutput>;
    export const sdkSfnStartSyncExecution: (input: SdkIntegrationTask<StartSyncExecutionCommandInput>) => Promise<StartSyncExecutionCommandOutput>;
    export const sdkSfnStopExecution: (input: SdkIntegrationTask<StopExecutionCommandInput>) => Promise<StopExecutionCommandOutput>;
    export const sdkSfnTagResource: (input: SdkIntegrationTask<TagResourceCommandInput>) => Promise<TagResourceCommandOutput>;
    export const sdkSfnUntagResource: (input: SdkIntegrationTask<UntagResourceCommandInput>) => Promise<UntagResourceCommandOutput>;
    export const sdkSfnUpdateStateMachine: (input: SdkIntegrationTask<UpdateStateMachineCommandInput>) => Promise<UpdateStateMachineCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-textract' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { AnalyzeDocumentCommandInput, AnalyzeDocumentCommandOutput } from "@aws-sdk/client-textract";
    import { AnalyzeExpenseCommandInput, AnalyzeExpenseCommandOutput } from "@aws-sdk/client-textract";
    import { DetectDocumentTextCommandInput, DetectDocumentTextCommandOutput } from "@aws-sdk/client-textract";
    import { GetDocumentAnalysisCommandInput, GetDocumentAnalysisCommandOutput } from "@aws-sdk/client-textract";
    import { GetDocumentTextDetectionCommandInput, GetDocumentTextDetectionCommandOutput } from "@aws-sdk/client-textract";
    import { StartDocumentAnalysisCommandInput, StartDocumentAnalysisCommandOutput } from "@aws-sdk/client-textract";
    import { StartDocumentTextDetectionCommandInput, StartDocumentTextDetectionCommandOutput } from "@aws-sdk/client-textract";
    export const sdkTextractAnalyzeDocument: (input: SdkIntegrationTask<AnalyzeDocumentCommandInput>) => Promise<AnalyzeDocumentCommandOutput>;
    export const sdkTextractAnalyzeExpense: (input: SdkIntegrationTask<AnalyzeExpenseCommandInput>) => Promise<AnalyzeExpenseCommandOutput>;
    export const sdkTextractDetectDocumentText: (input: SdkIntegrationTask<DetectDocumentTextCommandInput>) => Promise<DetectDocumentTextCommandOutput>;
    export const sdkTextractGetDocumentAnalysis: (input: SdkIntegrationTask<GetDocumentAnalysisCommandInput>) => Promise<GetDocumentAnalysisCommandOutput>;
    export const sdkTextractGetDocumentTextDetection: (input: SdkIntegrationTask<GetDocumentTextDetectionCommandInput>) => Promise<GetDocumentTextDetectionCommandOutput>;
    export const sdkTextractStartDocumentAnalysis: (input: SdkIntegrationTask<StartDocumentAnalysisCommandInput>) => Promise<StartDocumentAnalysisCommandOutput>;
    export const sdkTextractStartDocumentTextDetection: (input: SdkIntegrationTask<StartDocumentTextDetectionCommandInput>) => Promise<StartDocumentTextDetectionCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-organizations' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { AcceptHandshakeCommandInput, AcceptHandshakeCommandOutput } from "@aws-sdk/client-organizations";
    import { AttachPolicyCommandInput, AttachPolicyCommandOutput } from "@aws-sdk/client-organizations";
    import { CancelHandshakeCommandInput, CancelHandshakeCommandOutput } from "@aws-sdk/client-organizations";
    import { CreateAccountCommandInput, CreateAccountCommandOutput } from "@aws-sdk/client-organizations";
    import { CreateGovCloudAccountCommandInput, CreateGovCloudAccountCommandOutput } from "@aws-sdk/client-organizations";
    import { CreateOrganizationCommandInput, CreateOrganizationCommandOutput } from "@aws-sdk/client-organizations";
    import { CreateOrganizationalUnitCommandInput, CreateOrganizationalUnitCommandOutput } from "@aws-sdk/client-organizations";
    import { CreatePolicyCommandInput, CreatePolicyCommandOutput } from "@aws-sdk/client-organizations";
    import { DeclineHandshakeCommandInput, DeclineHandshakeCommandOutput } from "@aws-sdk/client-organizations";
    import { DeleteOrganizationCommandInput, DeleteOrganizationCommandOutput } from "@aws-sdk/client-organizations";
    import { DeleteOrganizationalUnitCommandInput, DeleteOrganizationalUnitCommandOutput } from "@aws-sdk/client-organizations";
    import { DeletePolicyCommandInput, DeletePolicyCommandOutput } from "@aws-sdk/client-organizations";
    import { DeregisterDelegatedAdministratorCommandInput, DeregisterDelegatedAdministratorCommandOutput } from "@aws-sdk/client-organizations";
    import { DescribeAccountCommandInput, DescribeAccountCommandOutput } from "@aws-sdk/client-organizations";
    import { DescribeCreateAccountStatusCommandInput, DescribeCreateAccountStatusCommandOutput } from "@aws-sdk/client-organizations";
    import { DescribeEffectivePolicyCommandInput, DescribeEffectivePolicyCommandOutput } from "@aws-sdk/client-organizations";
    import { DescribeHandshakeCommandInput, DescribeHandshakeCommandOutput } from "@aws-sdk/client-organizations";
    import { DescribeOrganizationCommandInput, DescribeOrganizationCommandOutput } from "@aws-sdk/client-organizations";
    import { DescribeOrganizationalUnitCommandInput, DescribeOrganizationalUnitCommandOutput } from "@aws-sdk/client-organizations";
    import { DescribePolicyCommandInput, DescribePolicyCommandOutput } from "@aws-sdk/client-organizations";
    import { DetachPolicyCommandInput, DetachPolicyCommandOutput } from "@aws-sdk/client-organizations";
    import { DisableAWSServiceAccessCommandInput, DisableAWSServiceAccessCommandOutput } from "@aws-sdk/client-organizations";
    import { DisablePolicyTypeCommandInput, DisablePolicyTypeCommandOutput } from "@aws-sdk/client-organizations";
    import { EnableAWSServiceAccessCommandInput, EnableAWSServiceAccessCommandOutput } from "@aws-sdk/client-organizations";
    import { EnableAllFeaturesCommandInput, EnableAllFeaturesCommandOutput } from "@aws-sdk/client-organizations";
    import { EnablePolicyTypeCommandInput, EnablePolicyTypeCommandOutput } from "@aws-sdk/client-organizations";
    import { InviteAccountToOrganizationCommandInput, InviteAccountToOrganizationCommandOutput } from "@aws-sdk/client-organizations";
    import { LeaveOrganizationCommandInput, LeaveOrganizationCommandOutput } from "@aws-sdk/client-organizations";
    import { ListAWSServiceAccessForOrganizationCommandInput, ListAWSServiceAccessForOrganizationCommandOutput } from "@aws-sdk/client-organizations";
    import { ListAccountsCommandInput, ListAccountsCommandOutput } from "@aws-sdk/client-organizations";
    import { ListAccountsForParentCommandInput, ListAccountsForParentCommandOutput } from "@aws-sdk/client-organizations";
    import { ListChildrenCommandInput, ListChildrenCommandOutput } from "@aws-sdk/client-organizations";
    import { ListCreateAccountStatusCommandInput, ListCreateAccountStatusCommandOutput } from "@aws-sdk/client-organizations";
    import { ListDelegatedAdministratorsCommandInput, ListDelegatedAdministratorsCommandOutput } from "@aws-sdk/client-organizations";
    import { ListDelegatedServicesForAccountCommandInput, ListDelegatedServicesForAccountCommandOutput } from "@aws-sdk/client-organizations";
    import { ListHandshakesForAccountCommandInput, ListHandshakesForAccountCommandOutput } from "@aws-sdk/client-organizations";
    import { ListHandshakesForOrganizationCommandInput, ListHandshakesForOrganizationCommandOutput } from "@aws-sdk/client-organizations";
    import { ListOrganizationalUnitsForParentCommandInput, ListOrganizationalUnitsForParentCommandOutput } from "@aws-sdk/client-organizations";
    import { ListParentsCommandInput, ListParentsCommandOutput } from "@aws-sdk/client-organizations";
    import { ListPoliciesCommandInput, ListPoliciesCommandOutput } from "@aws-sdk/client-organizations";
    import { ListPoliciesForTargetCommandInput, ListPoliciesForTargetCommandOutput } from "@aws-sdk/client-organizations";
    import { ListRootsCommandInput, ListRootsCommandOutput } from "@aws-sdk/client-organizations";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-organizations";
    import { ListTargetsForPolicyCommandInput, ListTargetsForPolicyCommandOutput } from "@aws-sdk/client-organizations";
    import { MoveAccountCommandInput, MoveAccountCommandOutput } from "@aws-sdk/client-organizations";
    import { RegisterDelegatedAdministratorCommandInput, RegisterDelegatedAdministratorCommandOutput } from "@aws-sdk/client-organizations";
    import { RemoveAccountFromOrganizationCommandInput, RemoveAccountFromOrganizationCommandOutput } from "@aws-sdk/client-organizations";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-organizations";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-organizations";
    import { UpdateOrganizationalUnitCommandInput, UpdateOrganizationalUnitCommandOutput } from "@aws-sdk/client-organizations";
    import { UpdatePolicyCommandInput, UpdatePolicyCommandOutput } from "@aws-sdk/client-organizations";
    export const sdkOrganizationsAcceptHandshake: (input: SdkIntegrationTask<AcceptHandshakeCommandInput>) => Promise<AcceptHandshakeCommandOutput>;
    export const sdkOrganizationsAttachPolicy: (input: SdkIntegrationTask<AttachPolicyCommandInput>) => Promise<AttachPolicyCommandOutput>;
    export const sdkOrganizationsCancelHandshake: (input: SdkIntegrationTask<CancelHandshakeCommandInput>) => Promise<CancelHandshakeCommandOutput>;
    export const sdkOrganizationsCreateAccount: (input: SdkIntegrationTask<CreateAccountCommandInput>) => Promise<CreateAccountCommandOutput>;
    export const sdkOrganizationsCreateGovCloudAccount: (input: SdkIntegrationTask<CreateGovCloudAccountCommandInput>) => Promise<CreateGovCloudAccountCommandOutput>;
    export const sdkOrganizationsCreateOrganization: (input: SdkIntegrationTask<CreateOrganizationCommandInput>) => Promise<CreateOrganizationCommandOutput>;
    export const sdkOrganizationsCreateOrganizationalUnit: (input: SdkIntegrationTask<CreateOrganizationalUnitCommandInput>) => Promise<CreateOrganizationalUnitCommandOutput>;
    export const sdkOrganizationsCreatePolicy: (input: SdkIntegrationTask<CreatePolicyCommandInput>) => Promise<CreatePolicyCommandOutput>;
    export const sdkOrganizationsDeclineHandshake: (input: SdkIntegrationTask<DeclineHandshakeCommandInput>) => Promise<DeclineHandshakeCommandOutput>;
    export const sdkOrganizationsDeleteOrganization: (input: SdkIntegrationTask<DeleteOrganizationCommandInput>) => Promise<DeleteOrganizationCommandOutput>;
    export const sdkOrganizationsDeleteOrganizationalUnit: (input: SdkIntegrationTask<DeleteOrganizationalUnitCommandInput>) => Promise<DeleteOrganizationalUnitCommandOutput>;
    export const sdkOrganizationsDeletePolicy: (input: SdkIntegrationTask<DeletePolicyCommandInput>) => Promise<DeletePolicyCommandOutput>;
    export const sdkOrganizationsDeregisterDelegatedAdministrator: (input: SdkIntegrationTask<DeregisterDelegatedAdministratorCommandInput>) => Promise<DeregisterDelegatedAdministratorCommandOutput>;
    export const sdkOrganizationsDescribeAccount: (input: SdkIntegrationTask<DescribeAccountCommandInput>) => Promise<DescribeAccountCommandOutput>;
    export const sdkOrganizationsDescribeCreateAccountStatus: (input: SdkIntegrationTask<DescribeCreateAccountStatusCommandInput>) => Promise<DescribeCreateAccountStatusCommandOutput>;
    export const sdkOrganizationsDescribeEffectivePolicy: (input: SdkIntegrationTask<DescribeEffectivePolicyCommandInput>) => Promise<DescribeEffectivePolicyCommandOutput>;
    export const sdkOrganizationsDescribeHandshake: (input: SdkIntegrationTask<DescribeHandshakeCommandInput>) => Promise<DescribeHandshakeCommandOutput>;
    export const sdkOrganizationsDescribeOrganization: (input: SdkIntegrationTask<DescribeOrganizationCommandInput>) => Promise<DescribeOrganizationCommandOutput>;
    export const sdkOrganizationsDescribeOrganizationalUnit: (input: SdkIntegrationTask<DescribeOrganizationalUnitCommandInput>) => Promise<DescribeOrganizationalUnitCommandOutput>;
    export const sdkOrganizationsDescribePolicy: (input: SdkIntegrationTask<DescribePolicyCommandInput>) => Promise<DescribePolicyCommandOutput>;
    export const sdkOrganizationsDetachPolicy: (input: SdkIntegrationTask<DetachPolicyCommandInput>) => Promise<DetachPolicyCommandOutput>;
    export const sdkOrganizationsDisableAWSServiceAccess: (input: SdkIntegrationTask<DisableAWSServiceAccessCommandInput>) => Promise<DisableAWSServiceAccessCommandOutput>;
    export const sdkOrganizationsDisablePolicyType: (input: SdkIntegrationTask<DisablePolicyTypeCommandInput>) => Promise<DisablePolicyTypeCommandOutput>;
    export const sdkOrganizationsEnableAWSServiceAccess: (input: SdkIntegrationTask<EnableAWSServiceAccessCommandInput>) => Promise<EnableAWSServiceAccessCommandOutput>;
    export const sdkOrganizationsEnableAllFeatures: (input: SdkIntegrationTask<EnableAllFeaturesCommandInput>) => Promise<EnableAllFeaturesCommandOutput>;
    export const sdkOrganizationsEnablePolicyType: (input: SdkIntegrationTask<EnablePolicyTypeCommandInput>) => Promise<EnablePolicyTypeCommandOutput>;
    export const sdkOrganizationsInviteAccountToOrganization: (input: SdkIntegrationTask<InviteAccountToOrganizationCommandInput>) => Promise<InviteAccountToOrganizationCommandOutput>;
    export const sdkOrganizationsLeaveOrganization: (input: SdkIntegrationTask<LeaveOrganizationCommandInput>) => Promise<LeaveOrganizationCommandOutput>;
    export const sdkOrganizationsListAWSServiceAccessForOrganization: (input: SdkIntegrationTask<ListAWSServiceAccessForOrganizationCommandInput>) => Promise<ListAWSServiceAccessForOrganizationCommandOutput>;
    export const sdkOrganizationsListAccounts: (input: SdkIntegrationTask<ListAccountsCommandInput>) => Promise<ListAccountsCommandOutput>;
    export const sdkOrganizationsListAccountsForParent: (input: SdkIntegrationTask<ListAccountsForParentCommandInput>) => Promise<ListAccountsForParentCommandOutput>;
    export const sdkOrganizationsListChildren: (input: SdkIntegrationTask<ListChildrenCommandInput>) => Promise<ListChildrenCommandOutput>;
    export const sdkOrganizationsListCreateAccountStatus: (input: SdkIntegrationTask<ListCreateAccountStatusCommandInput>) => Promise<ListCreateAccountStatusCommandOutput>;
    export const sdkOrganizationsListDelegatedAdministrators: (input: SdkIntegrationTask<ListDelegatedAdministratorsCommandInput>) => Promise<ListDelegatedAdministratorsCommandOutput>;
    export const sdkOrganizationsListDelegatedServicesForAccount: (input: SdkIntegrationTask<ListDelegatedServicesForAccountCommandInput>) => Promise<ListDelegatedServicesForAccountCommandOutput>;
    export const sdkOrganizationsListHandshakesForAccount: (input: SdkIntegrationTask<ListHandshakesForAccountCommandInput>) => Promise<ListHandshakesForAccountCommandOutput>;
    export const sdkOrganizationsListHandshakesForOrganization: (input: SdkIntegrationTask<ListHandshakesForOrganizationCommandInput>) => Promise<ListHandshakesForOrganizationCommandOutput>;
    export const sdkOrganizationsListOrganizationalUnitsForParent: (input: SdkIntegrationTask<ListOrganizationalUnitsForParentCommandInput>) => Promise<ListOrganizationalUnitsForParentCommandOutput>;
    export const sdkOrganizationsListParents: (input: SdkIntegrationTask<ListParentsCommandInput>) => Promise<ListParentsCommandOutput>;
    export const sdkOrganizationsListPolicies: (input: SdkIntegrationTask<ListPoliciesCommandInput>) => Promise<ListPoliciesCommandOutput>;
    export const sdkOrganizationsListPoliciesForTarget: (input: SdkIntegrationTask<ListPoliciesForTargetCommandInput>) => Promise<ListPoliciesForTargetCommandOutput>;
    export const sdkOrganizationsListRoots: (input: SdkIntegrationTask<ListRootsCommandInput>) => Promise<ListRootsCommandOutput>;
    export const sdkOrganizationsListTagsForResource: (input: SdkIntegrationTask<ListTagsForResourceCommandInput>) => Promise<ListTagsForResourceCommandOutput>;
    export const sdkOrganizationsListTargetsForPolicy: (input: SdkIntegrationTask<ListTargetsForPolicyCommandInput>) => Promise<ListTargetsForPolicyCommandOutput>;
    export const sdkOrganizationsMoveAccount: (input: SdkIntegrationTask<MoveAccountCommandInput>) => Promise<MoveAccountCommandOutput>;
    export const sdkOrganizationsRegisterDelegatedAdministrator: (input: SdkIntegrationTask<RegisterDelegatedAdministratorCommandInput>) => Promise<RegisterDelegatedAdministratorCommandOutput>;
    export const sdkOrganizationsRemoveAccountFromOrganization: (input: SdkIntegrationTask<RemoveAccountFromOrganizationCommandInput>) => Promise<RemoveAccountFromOrganizationCommandOutput>;
    export const sdkOrganizationsTagResource: (input: SdkIntegrationTask<TagResourceCommandInput>) => Promise<TagResourceCommandOutput>;
    export const sdkOrganizationsUntagResource: (input: SdkIntegrationTask<UntagResourceCommandInput>) => Promise<UntagResourceCommandOutput>;
    export const sdkOrganizationsUpdateOrganizationalUnit: (input: SdkIntegrationTask<UpdateOrganizationalUnitCommandInput>) => Promise<UpdateOrganizationalUnitCommandOutput>;
    export const sdkOrganizationsUpdatePolicy: (input: SdkIntegrationTask<UpdatePolicyCommandInput>) => Promise<UpdatePolicyCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-codebuild' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { BatchDeleteBuildsCommandInput, BatchDeleteBuildsCommandOutput } from "@aws-sdk/client-codebuild";
    import { BatchGetBuildBatchesCommandInput, BatchGetBuildBatchesCommandOutput } from "@aws-sdk/client-codebuild";
    import { BatchGetBuildsCommandInput, BatchGetBuildsCommandOutput } from "@aws-sdk/client-codebuild";
    import { BatchGetProjectsCommandInput, BatchGetProjectsCommandOutput } from "@aws-sdk/client-codebuild";
    import { BatchGetReportGroupsCommandInput, BatchGetReportGroupsCommandOutput } from "@aws-sdk/client-codebuild";
    import { BatchGetReportsCommandInput, BatchGetReportsCommandOutput } from "@aws-sdk/client-codebuild";
    import { CreateProjectCommandInput, CreateProjectCommandOutput } from "@aws-sdk/client-codebuild";
    import { CreateReportGroupCommandInput, CreateReportGroupCommandOutput } from "@aws-sdk/client-codebuild";
    import { CreateWebhookCommandInput, CreateWebhookCommandOutput } from "@aws-sdk/client-codebuild";
    import { DeleteBuildBatchCommandInput, DeleteBuildBatchCommandOutput } from "@aws-sdk/client-codebuild";
    import { DeleteProjectCommandInput, DeleteProjectCommandOutput } from "@aws-sdk/client-codebuild";
    import { DeleteReportCommandInput, DeleteReportCommandOutput } from "@aws-sdk/client-codebuild";
    import { DeleteReportGroupCommandInput, DeleteReportGroupCommandOutput } from "@aws-sdk/client-codebuild";
    import { DeleteResourcePolicyCommandInput, DeleteResourcePolicyCommandOutput } from "@aws-sdk/client-codebuild";
    import { DeleteSourceCredentialsCommandInput, DeleteSourceCredentialsCommandOutput } from "@aws-sdk/client-codebuild";
    import { DeleteWebhookCommandInput, DeleteWebhookCommandOutput } from "@aws-sdk/client-codebuild";
    import { DescribeCodeCoveragesCommandInput, DescribeCodeCoveragesCommandOutput } from "@aws-sdk/client-codebuild";
    import { DescribeTestCasesCommandInput, DescribeTestCasesCommandOutput } from "@aws-sdk/client-codebuild";
    import { GetReportGroupTrendCommandInput, GetReportGroupTrendCommandOutput } from "@aws-sdk/client-codebuild";
    import { GetResourcePolicyCommandInput, GetResourcePolicyCommandOutput } from "@aws-sdk/client-codebuild";
    import { ImportSourceCredentialsCommandInput, ImportSourceCredentialsCommandOutput } from "@aws-sdk/client-codebuild";
    import { InvalidateProjectCacheCommandInput, InvalidateProjectCacheCommandOutput } from "@aws-sdk/client-codebuild";
    import { ListBuildBatchesCommandInput, ListBuildBatchesCommandOutput } from "@aws-sdk/client-codebuild";
    import { ListBuildBatchesForProjectCommandInput, ListBuildBatchesForProjectCommandOutput } from "@aws-sdk/client-codebuild";
    import { ListBuildsCommandInput, ListBuildsCommandOutput } from "@aws-sdk/client-codebuild";
    import { ListBuildsForProjectCommandInput, ListBuildsForProjectCommandOutput } from "@aws-sdk/client-codebuild";
    import { ListCuratedEnvironmentImagesCommandInput, ListCuratedEnvironmentImagesCommandOutput } from "@aws-sdk/client-codebuild";
    import { ListProjectsCommandInput, ListProjectsCommandOutput } from "@aws-sdk/client-codebuild";
    import { ListReportGroupsCommandInput, ListReportGroupsCommandOutput } from "@aws-sdk/client-codebuild";
    import { ListReportsCommandInput, ListReportsCommandOutput } from "@aws-sdk/client-codebuild";
    import { ListReportsForReportGroupCommandInput, ListReportsForReportGroupCommandOutput } from "@aws-sdk/client-codebuild";
    import { ListSharedProjectsCommandInput, ListSharedProjectsCommandOutput } from "@aws-sdk/client-codebuild";
    import { ListSharedReportGroupsCommandInput, ListSharedReportGroupsCommandOutput } from "@aws-sdk/client-codebuild";
    import { ListSourceCredentialsCommandInput, ListSourceCredentialsCommandOutput } from "@aws-sdk/client-codebuild";
    import { PutResourcePolicyCommandInput, PutResourcePolicyCommandOutput } from "@aws-sdk/client-codebuild";
    import { RetryBuildCommandInput, RetryBuildCommandOutput } from "@aws-sdk/client-codebuild";
    import { RetryBuildBatchCommandInput, RetryBuildBatchCommandOutput } from "@aws-sdk/client-codebuild";
    import { StartBuildCommandInput, StartBuildCommandOutput } from "@aws-sdk/client-codebuild";
    import { StartBuildBatchCommandInput, StartBuildBatchCommandOutput } from "@aws-sdk/client-codebuild";
    import { StopBuildCommandInput, StopBuildCommandOutput } from "@aws-sdk/client-codebuild";
    import { StopBuildBatchCommandInput, StopBuildBatchCommandOutput } from "@aws-sdk/client-codebuild";
    import { UpdateProjectCommandInput, UpdateProjectCommandOutput } from "@aws-sdk/client-codebuild";
    import { UpdateProjectVisibilityCommandInput, UpdateProjectVisibilityCommandOutput } from "@aws-sdk/client-codebuild";
    import { UpdateReportGroupCommandInput, UpdateReportGroupCommandOutput } from "@aws-sdk/client-codebuild";
    import { UpdateWebhookCommandInput, UpdateWebhookCommandOutput } from "@aws-sdk/client-codebuild";
    export const sdkCodeBuildBatchDeleteBuilds: (input: SdkIntegrationTask<BatchDeleteBuildsCommandInput>) => Promise<BatchDeleteBuildsCommandOutput>;
    export const sdkCodeBuildBatchGetBuildBatches: (input: SdkIntegrationTask<BatchGetBuildBatchesCommandInput>) => Promise<BatchGetBuildBatchesCommandOutput>;
    export const sdkCodeBuildBatchGetBuilds: (input: SdkIntegrationTask<BatchGetBuildsCommandInput>) => Promise<BatchGetBuildsCommandOutput>;
    export const sdkCodeBuildBatchGetProjects: (input: SdkIntegrationTask<BatchGetProjectsCommandInput>) => Promise<BatchGetProjectsCommandOutput>;
    export const sdkCodeBuildBatchGetReportGroups: (input: SdkIntegrationTask<BatchGetReportGroupsCommandInput>) => Promise<BatchGetReportGroupsCommandOutput>;
    export const sdkCodeBuildBatchGetReports: (input: SdkIntegrationTask<BatchGetReportsCommandInput>) => Promise<BatchGetReportsCommandOutput>;
    export const sdkCodeBuildCreateProject: (input: SdkIntegrationTask<CreateProjectCommandInput>) => Promise<CreateProjectCommandOutput>;
    export const sdkCodeBuildCreateReportGroup: (input: SdkIntegrationTask<CreateReportGroupCommandInput>) => Promise<CreateReportGroupCommandOutput>;
    export const sdkCodeBuildCreateWebhook: (input: SdkIntegrationTask<CreateWebhookCommandInput>) => Promise<CreateWebhookCommandOutput>;
    export const sdkCodeBuildDeleteBuildBatch: (input: SdkIntegrationTask<DeleteBuildBatchCommandInput>) => Promise<DeleteBuildBatchCommandOutput>;
    export const sdkCodeBuildDeleteProject: (input: SdkIntegrationTask<DeleteProjectCommandInput>) => Promise<DeleteProjectCommandOutput>;
    export const sdkCodeBuildDeleteReport: (input: SdkIntegrationTask<DeleteReportCommandInput>) => Promise<DeleteReportCommandOutput>;
    export const sdkCodeBuildDeleteReportGroup: (input: SdkIntegrationTask<DeleteReportGroupCommandInput>) => Promise<DeleteReportGroupCommandOutput>;
    export const sdkCodeBuildDeleteResourcePolicy: (input: SdkIntegrationTask<DeleteResourcePolicyCommandInput>) => Promise<DeleteResourcePolicyCommandOutput>;
    export const sdkCodeBuildDeleteSourceCredentials: (input: SdkIntegrationTask<DeleteSourceCredentialsCommandInput>) => Promise<DeleteSourceCredentialsCommandOutput>;
    export const sdkCodeBuildDeleteWebhook: (input: SdkIntegrationTask<DeleteWebhookCommandInput>) => Promise<DeleteWebhookCommandOutput>;
    export const sdkCodeBuildDescribeCodeCoverages: (input: SdkIntegrationTask<DescribeCodeCoveragesCommandInput>) => Promise<DescribeCodeCoveragesCommandOutput>;
    export const sdkCodeBuildDescribeTestCases: (input: SdkIntegrationTask<DescribeTestCasesCommandInput>) => Promise<DescribeTestCasesCommandOutput>;
    export const sdkCodeBuildGetReportGroupTrend: (input: SdkIntegrationTask<GetReportGroupTrendCommandInput>) => Promise<GetReportGroupTrendCommandOutput>;
    export const sdkCodeBuildGetResourcePolicy: (input: SdkIntegrationTask<GetResourcePolicyCommandInput>) => Promise<GetResourcePolicyCommandOutput>;
    export const sdkCodeBuildImportSourceCredentials: (input: SdkIntegrationTask<ImportSourceCredentialsCommandInput>) => Promise<ImportSourceCredentialsCommandOutput>;
    export const sdkCodeBuildInvalidateProjectCache: (input: SdkIntegrationTask<InvalidateProjectCacheCommandInput>) => Promise<InvalidateProjectCacheCommandOutput>;
    export const sdkCodeBuildListBuildBatches: (input: SdkIntegrationTask<ListBuildBatchesCommandInput>) => Promise<ListBuildBatchesCommandOutput>;
    export const sdkCodeBuildListBuildBatchesForProject: (input: SdkIntegrationTask<ListBuildBatchesForProjectCommandInput>) => Promise<ListBuildBatchesForProjectCommandOutput>;
    export const sdkCodeBuildListBuilds: (input: SdkIntegrationTask<ListBuildsCommandInput>) => Promise<ListBuildsCommandOutput>;
    export const sdkCodeBuildListBuildsForProject: (input: SdkIntegrationTask<ListBuildsForProjectCommandInput>) => Promise<ListBuildsForProjectCommandOutput>;
    export const sdkCodeBuildListCuratedEnvironmentImages: (input: SdkIntegrationTask<ListCuratedEnvironmentImagesCommandInput>) => Promise<ListCuratedEnvironmentImagesCommandOutput>;
    export const sdkCodeBuildListProjects: (input: SdkIntegrationTask<ListProjectsCommandInput>) => Promise<ListProjectsCommandOutput>;
    export const sdkCodeBuildListReportGroups: (input: SdkIntegrationTask<ListReportGroupsCommandInput>) => Promise<ListReportGroupsCommandOutput>;
    export const sdkCodeBuildListReports: (input: SdkIntegrationTask<ListReportsCommandInput>) => Promise<ListReportsCommandOutput>;
    export const sdkCodeBuildListReportsForReportGroup: (input: SdkIntegrationTask<ListReportsForReportGroupCommandInput>) => Promise<ListReportsForReportGroupCommandOutput>;
    export const sdkCodeBuildListSharedProjects: (input: SdkIntegrationTask<ListSharedProjectsCommandInput>) => Promise<ListSharedProjectsCommandOutput>;
    export const sdkCodeBuildListSharedReportGroups: (input: SdkIntegrationTask<ListSharedReportGroupsCommandInput>) => Promise<ListSharedReportGroupsCommandOutput>;
    export const sdkCodeBuildListSourceCredentials: (input: SdkIntegrationTask<ListSourceCredentialsCommandInput>) => Promise<ListSourceCredentialsCommandOutput>;
    export const sdkCodeBuildPutResourcePolicy: (input: SdkIntegrationTask<PutResourcePolicyCommandInput>) => Promise<PutResourcePolicyCommandOutput>;
    export const sdkCodeBuildRetryBuild: (input: SdkIntegrationTask<RetryBuildCommandInput>) => Promise<RetryBuildCommandOutput>;
    export const sdkCodeBuildRetryBuildBatch: (input: SdkIntegrationTask<RetryBuildBatchCommandInput>) => Promise<RetryBuildBatchCommandOutput>;
    export const sdkCodeBuildStartBuild: (input: SdkIntegrationTask<StartBuildCommandInput>) => Promise<StartBuildCommandOutput>;
    export const sdkCodeBuildStartBuildBatch: (input: SdkIntegrationTask<StartBuildBatchCommandInput>) => Promise<StartBuildBatchCommandOutput>;
    export const sdkCodeBuildStopBuild: (input: SdkIntegrationTask<StopBuildCommandInput>) => Promise<StopBuildCommandOutput>;
    export const sdkCodeBuildStopBuildBatch: (input: SdkIntegrationTask<StopBuildBatchCommandInput>) => Promise<StopBuildBatchCommandOutput>;
    export const sdkCodeBuildUpdateProject: (input: SdkIntegrationTask<UpdateProjectCommandInput>) => Promise<UpdateProjectCommandOutput>;
    export const sdkCodeBuildUpdateProjectVisibility: (input: SdkIntegrationTask<UpdateProjectVisibilityCommandInput>) => Promise<UpdateProjectVisibilityCommandOutput>;
    export const sdkCodeBuildUpdateReportGroup: (input: SdkIntegrationTask<UpdateReportGroupCommandInput>) => Promise<UpdateReportGroupCommandOutput>;
    export const sdkCodeBuildUpdateWebhook: (input: SdkIntegrationTask<UpdateWebhookCommandInput>) => Promise<UpdateWebhookCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-cloudwatch' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { DeleteAlarmsCommandInput, DeleteAlarmsCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { DeleteAnomalyDetectorCommandInput, DeleteAnomalyDetectorCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { DeleteDashboardsCommandInput, DeleteDashboardsCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { DeleteInsightRulesCommandInput, DeleteInsightRulesCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { DeleteMetricStreamCommandInput, DeleteMetricStreamCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { DescribeAlarmHistoryCommandInput, DescribeAlarmHistoryCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { DescribeAlarmsCommandInput, DescribeAlarmsCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { DescribeAlarmsForMetricCommandInput, DescribeAlarmsForMetricCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { DescribeAnomalyDetectorsCommandInput, DescribeAnomalyDetectorsCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { DescribeInsightRulesCommandInput, DescribeInsightRulesCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { DisableAlarmActionsCommandInput, DisableAlarmActionsCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { DisableInsightRulesCommandInput, DisableInsightRulesCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { EnableAlarmActionsCommandInput, EnableAlarmActionsCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { EnableInsightRulesCommandInput, EnableInsightRulesCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { GetDashboardCommandInput, GetDashboardCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { GetInsightRuleReportCommandInput, GetInsightRuleReportCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { GetMetricDataCommandInput, GetMetricDataCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { GetMetricStatisticsCommandInput, GetMetricStatisticsCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { GetMetricStreamCommandInput, GetMetricStreamCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { GetMetricWidgetImageCommandInput, GetMetricWidgetImageCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { ListDashboardsCommandInput, ListDashboardsCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { ListMetricStreamsCommandInput, ListMetricStreamsCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { ListMetricsCommandInput, ListMetricsCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { PutAnomalyDetectorCommandInput, PutAnomalyDetectorCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { PutCompositeAlarmCommandInput, PutCompositeAlarmCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { PutDashboardCommandInput, PutDashboardCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { PutInsightRuleCommandInput, PutInsightRuleCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { PutMetricAlarmCommandInput, PutMetricAlarmCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { PutMetricDataCommandInput, PutMetricDataCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { PutMetricStreamCommandInput, PutMetricStreamCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { SetAlarmStateCommandInput, SetAlarmStateCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { StartMetricStreamsCommandInput, StartMetricStreamsCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { StopMetricStreamsCommandInput, StopMetricStreamsCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-cloudwatch";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-cloudwatch";
    export const sdkCloudWatchDeleteAlarms: (input: SdkIntegrationTask<DeleteAlarmsCommandInput>) => Promise<DeleteAlarmsCommandOutput>;
    export const sdkCloudWatchDeleteAnomalyDetector: (input: SdkIntegrationTask<DeleteAnomalyDetectorCommandInput>) => Promise<DeleteAnomalyDetectorCommandOutput>;
    export const sdkCloudWatchDeleteDashboards: (input: SdkIntegrationTask<DeleteDashboardsCommandInput>) => Promise<DeleteDashboardsCommandOutput>;
    export const sdkCloudWatchDeleteInsightRules: (input: SdkIntegrationTask<DeleteInsightRulesCommandInput>) => Promise<DeleteInsightRulesCommandOutput>;
    export const sdkCloudWatchDeleteMetricStream: (input: SdkIntegrationTask<DeleteMetricStreamCommandInput>) => Promise<DeleteMetricStreamCommandOutput>;
    export const sdkCloudWatchDescribeAlarmHistory: (input: SdkIntegrationTask<DescribeAlarmHistoryCommandInput>) => Promise<DescribeAlarmHistoryCommandOutput>;
    export const sdkCloudWatchDescribeAlarms: (input: SdkIntegrationTask<DescribeAlarmsCommandInput>) => Promise<DescribeAlarmsCommandOutput>;
    export const sdkCloudWatchDescribeAlarmsForMetric: (input: SdkIntegrationTask<DescribeAlarmsForMetricCommandInput>) => Promise<DescribeAlarmsForMetricCommandOutput>;
    export const sdkCloudWatchDescribeAnomalyDetectors: (input: SdkIntegrationTask<DescribeAnomalyDetectorsCommandInput>) => Promise<DescribeAnomalyDetectorsCommandOutput>;
    export const sdkCloudWatchDescribeInsightRules: (input: SdkIntegrationTask<DescribeInsightRulesCommandInput>) => Promise<DescribeInsightRulesCommandOutput>;
    export const sdkCloudWatchDisableAlarmActions: (input: SdkIntegrationTask<DisableAlarmActionsCommandInput>) => Promise<DisableAlarmActionsCommandOutput>;
    export const sdkCloudWatchDisableInsightRules: (input: SdkIntegrationTask<DisableInsightRulesCommandInput>) => Promise<DisableInsightRulesCommandOutput>;
    export const sdkCloudWatchEnableAlarmActions: (input: SdkIntegrationTask<EnableAlarmActionsCommandInput>) => Promise<EnableAlarmActionsCommandOutput>;
    export const sdkCloudWatchEnableInsightRules: (input: SdkIntegrationTask<EnableInsightRulesCommandInput>) => Promise<EnableInsightRulesCommandOutput>;
    export const sdkCloudWatchGetDashboard: (input: SdkIntegrationTask<GetDashboardCommandInput>) => Promise<GetDashboardCommandOutput>;
    export const sdkCloudWatchGetInsightRuleReport: (input: SdkIntegrationTask<GetInsightRuleReportCommandInput>) => Promise<GetInsightRuleReportCommandOutput>;
    export const sdkCloudWatchGetMetricData: (input: SdkIntegrationTask<GetMetricDataCommandInput>) => Promise<GetMetricDataCommandOutput>;
    export const sdkCloudWatchGetMetricStatistics: (input: SdkIntegrationTask<GetMetricStatisticsCommandInput>) => Promise<GetMetricStatisticsCommandOutput>;
    export const sdkCloudWatchGetMetricStream: (input: SdkIntegrationTask<GetMetricStreamCommandInput>) => Promise<GetMetricStreamCommandOutput>;
    export const sdkCloudWatchGetMetricWidgetImage: (input: SdkIntegrationTask<GetMetricWidgetImageCommandInput>) => Promise<GetMetricWidgetImageCommandOutput>;
    export const sdkCloudWatchListDashboards: (input: SdkIntegrationTask<ListDashboardsCommandInput>) => Promise<ListDashboardsCommandOutput>;
    export const sdkCloudWatchListMetricStreams: (input: SdkIntegrationTask<ListMetricStreamsCommandInput>) => Promise<ListMetricStreamsCommandOutput>;
    export const sdkCloudWatchListMetrics: (input: SdkIntegrationTask<ListMetricsCommandInput>) => Promise<ListMetricsCommandOutput>;
    export const sdkCloudWatchListTagsForResource: (input: SdkIntegrationTask<ListTagsForResourceCommandInput>) => Promise<ListTagsForResourceCommandOutput>;
    export const sdkCloudWatchPutAnomalyDetector: (input: SdkIntegrationTask<PutAnomalyDetectorCommandInput>) => Promise<PutAnomalyDetectorCommandOutput>;
    export const sdkCloudWatchPutCompositeAlarm: (input: SdkIntegrationTask<PutCompositeAlarmCommandInput>) => Promise<PutCompositeAlarmCommandOutput>;
    export const sdkCloudWatchPutDashboard: (input: SdkIntegrationTask<PutDashboardCommandInput>) => Promise<PutDashboardCommandOutput>;
    export const sdkCloudWatchPutInsightRule: (input: SdkIntegrationTask<PutInsightRuleCommandInput>) => Promise<PutInsightRuleCommandOutput>;
    export const sdkCloudWatchPutMetricAlarm: (input: SdkIntegrationTask<PutMetricAlarmCommandInput>) => Promise<PutMetricAlarmCommandOutput>;
    export const sdkCloudWatchPutMetricData: (input: SdkIntegrationTask<PutMetricDataCommandInput>) => Promise<PutMetricDataCommandOutput>;
    export const sdkCloudWatchPutMetricStream: (input: SdkIntegrationTask<PutMetricStreamCommandInput>) => Promise<PutMetricStreamCommandOutput>;
    export const sdkCloudWatchSetAlarmState: (input: SdkIntegrationTask<SetAlarmStateCommandInput>) => Promise<SetAlarmStateCommandOutput>;
    export const sdkCloudWatchStartMetricStreams: (input: SdkIntegrationTask<StartMetricStreamsCommandInput>) => Promise<StartMetricStreamsCommandOutput>;
    export const sdkCloudWatchStopMetricStreams: (input: SdkIntegrationTask<StopMetricStreamsCommandInput>) => Promise<StopMetricStreamsCommandOutput>;
    export const sdkCloudWatchTagResource: (input: SdkIntegrationTask<TagResourceCommandInput>) => Promise<TagResourceCommandOutput>;
    export const sdkCloudWatchUntagResource: (input: SdkIntegrationTask<UntagResourceCommandInput>) => Promise<UntagResourceCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-iam' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { AddClientIDToOpenIDConnectProviderCommandInput, AddClientIDToOpenIDConnectProviderCommandOutput } from "@aws-sdk/client-iam";
    import { AddRoleToInstanceProfileCommandInput, AddRoleToInstanceProfileCommandOutput } from "@aws-sdk/client-iam";
    import { AddUserToGroupCommandInput, AddUserToGroupCommandOutput } from "@aws-sdk/client-iam";
    import { AttachGroupPolicyCommandInput, AttachGroupPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { AttachRolePolicyCommandInput, AttachRolePolicyCommandOutput } from "@aws-sdk/client-iam";
    import { AttachUserPolicyCommandInput, AttachUserPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { ChangePasswordCommandInput, ChangePasswordCommandOutput } from "@aws-sdk/client-iam";
    import { CreateAccessKeyCommandInput, CreateAccessKeyCommandOutput } from "@aws-sdk/client-iam";
    import { CreateAccountAliasCommandInput, CreateAccountAliasCommandOutput } from "@aws-sdk/client-iam";
    import { CreateGroupCommandInput, CreateGroupCommandOutput } from "@aws-sdk/client-iam";
    import { CreateInstanceProfileCommandInput, CreateInstanceProfileCommandOutput } from "@aws-sdk/client-iam";
    import { CreateLoginProfileCommandInput, CreateLoginProfileCommandOutput } from "@aws-sdk/client-iam";
    import { CreateOpenIDConnectProviderCommandInput, CreateOpenIDConnectProviderCommandOutput } from "@aws-sdk/client-iam";
    import { CreatePolicyCommandInput, CreatePolicyCommandOutput } from "@aws-sdk/client-iam";
    import { CreatePolicyVersionCommandInput, CreatePolicyVersionCommandOutput } from "@aws-sdk/client-iam";
    import { CreateRoleCommandInput, CreateRoleCommandOutput } from "@aws-sdk/client-iam";
    import { CreateSAMLProviderCommandInput, CreateSAMLProviderCommandOutput } from "@aws-sdk/client-iam";
    import { CreateServiceLinkedRoleCommandInput, CreateServiceLinkedRoleCommandOutput } from "@aws-sdk/client-iam";
    import { CreateServiceSpecificCredentialCommandInput, CreateServiceSpecificCredentialCommandOutput } from "@aws-sdk/client-iam";
    import { CreateUserCommandInput, CreateUserCommandOutput } from "@aws-sdk/client-iam";
    import { CreateVirtualMFADeviceCommandInput, CreateVirtualMFADeviceCommandOutput } from "@aws-sdk/client-iam";
    import { DeactivateMFADeviceCommandInput, DeactivateMFADeviceCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteAccessKeyCommandInput, DeleteAccessKeyCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteAccountAliasCommandInput, DeleteAccountAliasCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteAccountPasswordPolicyCommandInput, DeleteAccountPasswordPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteGroupCommandInput, DeleteGroupCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteGroupPolicyCommandInput, DeleteGroupPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteInstanceProfileCommandInput, DeleteInstanceProfileCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteLoginProfileCommandInput, DeleteLoginProfileCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteOpenIDConnectProviderCommandInput, DeleteOpenIDConnectProviderCommandOutput } from "@aws-sdk/client-iam";
    import { DeletePolicyCommandInput, DeletePolicyCommandOutput } from "@aws-sdk/client-iam";
    import { DeletePolicyVersionCommandInput, DeletePolicyVersionCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteRoleCommandInput, DeleteRoleCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteRolePermissionsBoundaryCommandInput, DeleteRolePermissionsBoundaryCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteRolePolicyCommandInput, DeleteRolePolicyCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteSAMLProviderCommandInput, DeleteSAMLProviderCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteSSHPublicKeyCommandInput, DeleteSSHPublicKeyCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteServerCertificateCommandInput, DeleteServerCertificateCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteServiceLinkedRoleCommandInput, DeleteServiceLinkedRoleCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteServiceSpecificCredentialCommandInput, DeleteServiceSpecificCredentialCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteSigningCertificateCommandInput, DeleteSigningCertificateCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteUserCommandInput, DeleteUserCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteUserPermissionsBoundaryCommandInput, DeleteUserPermissionsBoundaryCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteUserPolicyCommandInput, DeleteUserPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { DeleteVirtualMFADeviceCommandInput, DeleteVirtualMFADeviceCommandOutput } from "@aws-sdk/client-iam";
    import { DetachGroupPolicyCommandInput, DetachGroupPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { DetachRolePolicyCommandInput, DetachRolePolicyCommandOutput } from "@aws-sdk/client-iam";
    import { DetachUserPolicyCommandInput, DetachUserPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { EnableMFADeviceCommandInput, EnableMFADeviceCommandOutput } from "@aws-sdk/client-iam";
    import { GenerateCredentialReportCommandInput, GenerateCredentialReportCommandOutput } from "@aws-sdk/client-iam";
    import { GenerateOrganizationsAccessReportCommandInput, GenerateOrganizationsAccessReportCommandOutput } from "@aws-sdk/client-iam";
    import { GenerateServiceLastAccessedDetailsCommandInput, GenerateServiceLastAccessedDetailsCommandOutput } from "@aws-sdk/client-iam";
    import { GetAccessKeyLastUsedCommandInput, GetAccessKeyLastUsedCommandOutput } from "@aws-sdk/client-iam";
    import { GetAccountAuthorizationDetailsCommandInput, GetAccountAuthorizationDetailsCommandOutput } from "@aws-sdk/client-iam";
    import { GetAccountPasswordPolicyCommandInput, GetAccountPasswordPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { GetAccountSummaryCommandInput, GetAccountSummaryCommandOutput } from "@aws-sdk/client-iam";
    import { GetContextKeysForCustomPolicyCommandInput, GetContextKeysForCustomPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { GetContextKeysForPrincipalPolicyCommandInput, GetContextKeysForPrincipalPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { GetCredentialReportCommandInput, GetCredentialReportCommandOutput } from "@aws-sdk/client-iam";
    import { GetGroupCommandInput, GetGroupCommandOutput } from "@aws-sdk/client-iam";
    import { GetGroupPolicyCommandInput, GetGroupPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { GetInstanceProfileCommandInput, GetInstanceProfileCommandOutput } from "@aws-sdk/client-iam";
    import { GetLoginProfileCommandInput, GetLoginProfileCommandOutput } from "@aws-sdk/client-iam";
    import { GetOpenIDConnectProviderCommandInput, GetOpenIDConnectProviderCommandOutput } from "@aws-sdk/client-iam";
    import { GetOrganizationsAccessReportCommandInput, GetOrganizationsAccessReportCommandOutput } from "@aws-sdk/client-iam";
    import { GetPolicyCommandInput, GetPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { GetPolicyVersionCommandInput, GetPolicyVersionCommandOutput } from "@aws-sdk/client-iam";
    import { GetRoleCommandInput, GetRoleCommandOutput } from "@aws-sdk/client-iam";
    import { GetRolePolicyCommandInput, GetRolePolicyCommandOutput } from "@aws-sdk/client-iam";
    import { GetSAMLProviderCommandInput, GetSAMLProviderCommandOutput } from "@aws-sdk/client-iam";
    import { GetSSHPublicKeyCommandInput, GetSSHPublicKeyCommandOutput } from "@aws-sdk/client-iam";
    import { GetServerCertificateCommandInput, GetServerCertificateCommandOutput } from "@aws-sdk/client-iam";
    import { GetServiceLastAccessedDetailsCommandInput, GetServiceLastAccessedDetailsCommandOutput } from "@aws-sdk/client-iam";
    import { GetServiceLastAccessedDetailsWithEntitiesCommandInput, GetServiceLastAccessedDetailsWithEntitiesCommandOutput } from "@aws-sdk/client-iam";
    import { GetServiceLinkedRoleDeletionStatusCommandInput, GetServiceLinkedRoleDeletionStatusCommandOutput } from "@aws-sdk/client-iam";
    import { GetUserCommandInput, GetUserCommandOutput } from "@aws-sdk/client-iam";
    import { GetUserPolicyCommandInput, GetUserPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { ListAccessKeysCommandInput, ListAccessKeysCommandOutput } from "@aws-sdk/client-iam";
    import { ListAccountAliasesCommandInput, ListAccountAliasesCommandOutput } from "@aws-sdk/client-iam";
    import { ListAttachedGroupPoliciesCommandInput, ListAttachedGroupPoliciesCommandOutput } from "@aws-sdk/client-iam";
    import { ListAttachedRolePoliciesCommandInput, ListAttachedRolePoliciesCommandOutput } from "@aws-sdk/client-iam";
    import { ListAttachedUserPoliciesCommandInput, ListAttachedUserPoliciesCommandOutput } from "@aws-sdk/client-iam";
    import { ListEntitiesForPolicyCommandInput, ListEntitiesForPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { ListGroupPoliciesCommandInput, ListGroupPoliciesCommandOutput } from "@aws-sdk/client-iam";
    import { ListGroupsCommandInput, ListGroupsCommandOutput } from "@aws-sdk/client-iam";
    import { ListGroupsForUserCommandInput, ListGroupsForUserCommandOutput } from "@aws-sdk/client-iam";
    import { ListInstanceProfileTagsCommandInput, ListInstanceProfileTagsCommandOutput } from "@aws-sdk/client-iam";
    import { ListInstanceProfilesCommandInput, ListInstanceProfilesCommandOutput } from "@aws-sdk/client-iam";
    import { ListInstanceProfilesForRoleCommandInput, ListInstanceProfilesForRoleCommandOutput } from "@aws-sdk/client-iam";
    import { ListMFADeviceTagsCommandInput, ListMFADeviceTagsCommandOutput } from "@aws-sdk/client-iam";
    import { ListMFADevicesCommandInput, ListMFADevicesCommandOutput } from "@aws-sdk/client-iam";
    import { ListOpenIDConnectProviderTagsCommandInput, ListOpenIDConnectProviderTagsCommandOutput } from "@aws-sdk/client-iam";
    import { ListOpenIDConnectProvidersCommandInput, ListOpenIDConnectProvidersCommandOutput } from "@aws-sdk/client-iam";
    import { ListPoliciesCommandInput, ListPoliciesCommandOutput } from "@aws-sdk/client-iam";
    import { ListPoliciesGrantingServiceAccessCommandInput, ListPoliciesGrantingServiceAccessCommandOutput } from "@aws-sdk/client-iam";
    import { ListPolicyTagsCommandInput, ListPolicyTagsCommandOutput } from "@aws-sdk/client-iam";
    import { ListPolicyVersionsCommandInput, ListPolicyVersionsCommandOutput } from "@aws-sdk/client-iam";
    import { ListRolePoliciesCommandInput, ListRolePoliciesCommandOutput } from "@aws-sdk/client-iam";
    import { ListRoleTagsCommandInput, ListRoleTagsCommandOutput } from "@aws-sdk/client-iam";
    import { ListRolesCommandInput, ListRolesCommandOutput } from "@aws-sdk/client-iam";
    import { ListSAMLProviderTagsCommandInput, ListSAMLProviderTagsCommandOutput } from "@aws-sdk/client-iam";
    import { ListSAMLProvidersCommandInput, ListSAMLProvidersCommandOutput } from "@aws-sdk/client-iam";
    import { ListSSHPublicKeysCommandInput, ListSSHPublicKeysCommandOutput } from "@aws-sdk/client-iam";
    import { ListServerCertificateTagsCommandInput, ListServerCertificateTagsCommandOutput } from "@aws-sdk/client-iam";
    import { ListServerCertificatesCommandInput, ListServerCertificatesCommandOutput } from "@aws-sdk/client-iam";
    import { ListServiceSpecificCredentialsCommandInput, ListServiceSpecificCredentialsCommandOutput } from "@aws-sdk/client-iam";
    import { ListSigningCertificatesCommandInput, ListSigningCertificatesCommandOutput } from "@aws-sdk/client-iam";
    import { ListUserPoliciesCommandInput, ListUserPoliciesCommandOutput } from "@aws-sdk/client-iam";
    import { ListUserTagsCommandInput, ListUserTagsCommandOutput } from "@aws-sdk/client-iam";
    import { ListUsersCommandInput, ListUsersCommandOutput } from "@aws-sdk/client-iam";
    import { ListVirtualMFADevicesCommandInput, ListVirtualMFADevicesCommandOutput } from "@aws-sdk/client-iam";
    import { PutGroupPolicyCommandInput, PutGroupPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { PutRolePermissionsBoundaryCommandInput, PutRolePermissionsBoundaryCommandOutput } from "@aws-sdk/client-iam";
    import { PutRolePolicyCommandInput, PutRolePolicyCommandOutput } from "@aws-sdk/client-iam";
    import { PutUserPermissionsBoundaryCommandInput, PutUserPermissionsBoundaryCommandOutput } from "@aws-sdk/client-iam";
    import { PutUserPolicyCommandInput, PutUserPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { RemoveClientIDFromOpenIDConnectProviderCommandInput, RemoveClientIDFromOpenIDConnectProviderCommandOutput } from "@aws-sdk/client-iam";
    import { RemoveRoleFromInstanceProfileCommandInput, RemoveRoleFromInstanceProfileCommandOutput } from "@aws-sdk/client-iam";
    import { RemoveUserFromGroupCommandInput, RemoveUserFromGroupCommandOutput } from "@aws-sdk/client-iam";
    import { ResetServiceSpecificCredentialCommandInput, ResetServiceSpecificCredentialCommandOutput } from "@aws-sdk/client-iam";
    import { ResyncMFADeviceCommandInput, ResyncMFADeviceCommandOutput } from "@aws-sdk/client-iam";
    import { SetDefaultPolicyVersionCommandInput, SetDefaultPolicyVersionCommandOutput } from "@aws-sdk/client-iam";
    import { SetSecurityTokenServicePreferencesCommandInput, SetSecurityTokenServicePreferencesCommandOutput } from "@aws-sdk/client-iam";
    import { SimulateCustomPolicyCommandInput, SimulateCustomPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { SimulatePrincipalPolicyCommandInput, SimulatePrincipalPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { TagInstanceProfileCommandInput, TagInstanceProfileCommandOutput } from "@aws-sdk/client-iam";
    import { TagMFADeviceCommandInput, TagMFADeviceCommandOutput } from "@aws-sdk/client-iam";
    import { TagOpenIDConnectProviderCommandInput, TagOpenIDConnectProviderCommandOutput } from "@aws-sdk/client-iam";
    import { TagPolicyCommandInput, TagPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { TagRoleCommandInput, TagRoleCommandOutput } from "@aws-sdk/client-iam";
    import { TagSAMLProviderCommandInput, TagSAMLProviderCommandOutput } from "@aws-sdk/client-iam";
    import { TagServerCertificateCommandInput, TagServerCertificateCommandOutput } from "@aws-sdk/client-iam";
    import { TagUserCommandInput, TagUserCommandOutput } from "@aws-sdk/client-iam";
    import { UntagInstanceProfileCommandInput, UntagInstanceProfileCommandOutput } from "@aws-sdk/client-iam";
    import { UntagMFADeviceCommandInput, UntagMFADeviceCommandOutput } from "@aws-sdk/client-iam";
    import { UntagOpenIDConnectProviderCommandInput, UntagOpenIDConnectProviderCommandOutput } from "@aws-sdk/client-iam";
    import { UntagPolicyCommandInput, UntagPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { UntagRoleCommandInput, UntagRoleCommandOutput } from "@aws-sdk/client-iam";
    import { UntagSAMLProviderCommandInput, UntagSAMLProviderCommandOutput } from "@aws-sdk/client-iam";
    import { UntagServerCertificateCommandInput, UntagServerCertificateCommandOutput } from "@aws-sdk/client-iam";
    import { UntagUserCommandInput, UntagUserCommandOutput } from "@aws-sdk/client-iam";
    import { UpdateAccessKeyCommandInput, UpdateAccessKeyCommandOutput } from "@aws-sdk/client-iam";
    import { UpdateAccountPasswordPolicyCommandInput, UpdateAccountPasswordPolicyCommandOutput } from "@aws-sdk/client-iam";
    import { UpdateAssumeRolePolicyCommandInput, UpdateAssumeRolePolicyCommandOutput } from "@aws-sdk/client-iam";
    import { UpdateGroupCommandInput, UpdateGroupCommandOutput } from "@aws-sdk/client-iam";
    import { UpdateLoginProfileCommandInput, UpdateLoginProfileCommandOutput } from "@aws-sdk/client-iam";
    import { UpdateOpenIDConnectProviderThumbprintCommandInput, UpdateOpenIDConnectProviderThumbprintCommandOutput } from "@aws-sdk/client-iam";
    import { UpdateRoleCommandInput, UpdateRoleCommandOutput } from "@aws-sdk/client-iam";
    import { UpdateRoleDescriptionCommandInput, UpdateRoleDescriptionCommandOutput } from "@aws-sdk/client-iam";
    import { UpdateSAMLProviderCommandInput, UpdateSAMLProviderCommandOutput } from "@aws-sdk/client-iam";
    import { UpdateSSHPublicKeyCommandInput, UpdateSSHPublicKeyCommandOutput } from "@aws-sdk/client-iam";
    import { UpdateServerCertificateCommandInput, UpdateServerCertificateCommandOutput } from "@aws-sdk/client-iam";
    import { UpdateServiceSpecificCredentialCommandInput, UpdateServiceSpecificCredentialCommandOutput } from "@aws-sdk/client-iam";
    import { UpdateSigningCertificateCommandInput, UpdateSigningCertificateCommandOutput } from "@aws-sdk/client-iam";
    import { UpdateUserCommandInput, UpdateUserCommandOutput } from "@aws-sdk/client-iam";
    import { UploadSSHPublicKeyCommandInput, UploadSSHPublicKeyCommandOutput } from "@aws-sdk/client-iam";
    import { UploadServerCertificateCommandInput, UploadServerCertificateCommandOutput } from "@aws-sdk/client-iam";
    import { UploadSigningCertificateCommandInput, UploadSigningCertificateCommandOutput } from "@aws-sdk/client-iam";
    export const sdkIAMAddClientIDToOpenIDConnectProvider: (input: SdkIntegrationTask<AddClientIDToOpenIDConnectProviderCommandInput>) => Promise<AddClientIDToOpenIDConnectProviderCommandOutput>;
    export const sdkIAMAddRoleToInstanceProfile: (input: SdkIntegrationTask<AddRoleToInstanceProfileCommandInput>) => Promise<AddRoleToInstanceProfileCommandOutput>;
    export const sdkIAMAddUserToGroup: (input: SdkIntegrationTask<AddUserToGroupCommandInput>) => Promise<AddUserToGroupCommandOutput>;
    export const sdkIAMAttachGroupPolicy: (input: SdkIntegrationTask<AttachGroupPolicyCommandInput>) => Promise<AttachGroupPolicyCommandOutput>;
    export const sdkIAMAttachRolePolicy: (input: SdkIntegrationTask<AttachRolePolicyCommandInput>) => Promise<AttachRolePolicyCommandOutput>;
    export const sdkIAMAttachUserPolicy: (input: SdkIntegrationTask<AttachUserPolicyCommandInput>) => Promise<AttachUserPolicyCommandOutput>;
    export const sdkIAMChangePassword: (input: SdkIntegrationTask<ChangePasswordCommandInput>) => Promise<ChangePasswordCommandOutput>;
    export const sdkIAMCreateAccessKey: (input: SdkIntegrationTask<CreateAccessKeyCommandInput>) => Promise<CreateAccessKeyCommandOutput>;
    export const sdkIAMCreateAccountAlias: (input: SdkIntegrationTask<CreateAccountAliasCommandInput>) => Promise<CreateAccountAliasCommandOutput>;
    export const sdkIAMCreateGroup: (input: SdkIntegrationTask<CreateGroupCommandInput>) => Promise<CreateGroupCommandOutput>;
    export const sdkIAMCreateInstanceProfile: (input: SdkIntegrationTask<CreateInstanceProfileCommandInput>) => Promise<CreateInstanceProfileCommandOutput>;
    export const sdkIAMCreateLoginProfile: (input: SdkIntegrationTask<CreateLoginProfileCommandInput>) => Promise<CreateLoginProfileCommandOutput>;
    export const sdkIAMCreateOpenIDConnectProvider: (input: SdkIntegrationTask<CreateOpenIDConnectProviderCommandInput>) => Promise<CreateOpenIDConnectProviderCommandOutput>;
    export const sdkIAMCreatePolicy: (input: SdkIntegrationTask<CreatePolicyCommandInput>) => Promise<CreatePolicyCommandOutput>;
    export const sdkIAMCreatePolicyVersion: (input: SdkIntegrationTask<CreatePolicyVersionCommandInput>) => Promise<CreatePolicyVersionCommandOutput>;
    export const sdkIAMCreateRole: (input: SdkIntegrationTask<CreateRoleCommandInput>) => Promise<CreateRoleCommandOutput>;
    export const sdkIAMCreateSAMLProvider: (input: SdkIntegrationTask<CreateSAMLProviderCommandInput>) => Promise<CreateSAMLProviderCommandOutput>;
    export const sdkIAMCreateServiceLinkedRole: (input: SdkIntegrationTask<CreateServiceLinkedRoleCommandInput>) => Promise<CreateServiceLinkedRoleCommandOutput>;
    export const sdkIAMCreateServiceSpecificCredential: (input: SdkIntegrationTask<CreateServiceSpecificCredentialCommandInput>) => Promise<CreateServiceSpecificCredentialCommandOutput>;
    export const sdkIAMCreateUser: (input: SdkIntegrationTask<CreateUserCommandInput>) => Promise<CreateUserCommandOutput>;
    export const sdkIAMCreateVirtualMFADevice: (input: SdkIntegrationTask<CreateVirtualMFADeviceCommandInput>) => Promise<CreateVirtualMFADeviceCommandOutput>;
    export const sdkIAMDeactivateMFADevice: (input: SdkIntegrationTask<DeactivateMFADeviceCommandInput>) => Promise<DeactivateMFADeviceCommandOutput>;
    export const sdkIAMDeleteAccessKey: (input: SdkIntegrationTask<DeleteAccessKeyCommandInput>) => Promise<DeleteAccessKeyCommandOutput>;
    export const sdkIAMDeleteAccountAlias: (input: SdkIntegrationTask<DeleteAccountAliasCommandInput>) => Promise<DeleteAccountAliasCommandOutput>;
    export const sdkIAMDeleteAccountPasswordPolicy: (input: SdkIntegrationTask<DeleteAccountPasswordPolicyCommandInput>) => Promise<DeleteAccountPasswordPolicyCommandOutput>;
    export const sdkIAMDeleteGroup: (input: SdkIntegrationTask<DeleteGroupCommandInput>) => Promise<DeleteGroupCommandOutput>;
    export const sdkIAMDeleteGroupPolicy: (input: SdkIntegrationTask<DeleteGroupPolicyCommandInput>) => Promise<DeleteGroupPolicyCommandOutput>;
    export const sdkIAMDeleteInstanceProfile: (input: SdkIntegrationTask<DeleteInstanceProfileCommandInput>) => Promise<DeleteInstanceProfileCommandOutput>;
    export const sdkIAMDeleteLoginProfile: (input: SdkIntegrationTask<DeleteLoginProfileCommandInput>) => Promise<DeleteLoginProfileCommandOutput>;
    export const sdkIAMDeleteOpenIDConnectProvider: (input: SdkIntegrationTask<DeleteOpenIDConnectProviderCommandInput>) => Promise<DeleteOpenIDConnectProviderCommandOutput>;
    export const sdkIAMDeletePolicy: (input: SdkIntegrationTask<DeletePolicyCommandInput>) => Promise<DeletePolicyCommandOutput>;
    export const sdkIAMDeletePolicyVersion: (input: SdkIntegrationTask<DeletePolicyVersionCommandInput>) => Promise<DeletePolicyVersionCommandOutput>;
    export const sdkIAMDeleteRole: (input: SdkIntegrationTask<DeleteRoleCommandInput>) => Promise<DeleteRoleCommandOutput>;
    export const sdkIAMDeleteRolePermissionsBoundary: (input: SdkIntegrationTask<DeleteRolePermissionsBoundaryCommandInput>) => Promise<DeleteRolePermissionsBoundaryCommandOutput>;
    export const sdkIAMDeleteRolePolicy: (input: SdkIntegrationTask<DeleteRolePolicyCommandInput>) => Promise<DeleteRolePolicyCommandOutput>;
    export const sdkIAMDeleteSAMLProvider: (input: SdkIntegrationTask<DeleteSAMLProviderCommandInput>) => Promise<DeleteSAMLProviderCommandOutput>;
    export const sdkIAMDeleteSSHPublicKey: (input: SdkIntegrationTask<DeleteSSHPublicKeyCommandInput>) => Promise<DeleteSSHPublicKeyCommandOutput>;
    export const sdkIAMDeleteServerCertificate: (input: SdkIntegrationTask<DeleteServerCertificateCommandInput>) => Promise<DeleteServerCertificateCommandOutput>;
    export const sdkIAMDeleteServiceLinkedRole: (input: SdkIntegrationTask<DeleteServiceLinkedRoleCommandInput>) => Promise<DeleteServiceLinkedRoleCommandOutput>;
    export const sdkIAMDeleteServiceSpecificCredential: (input: SdkIntegrationTask<DeleteServiceSpecificCredentialCommandInput>) => Promise<DeleteServiceSpecificCredentialCommandOutput>;
    export const sdkIAMDeleteSigningCertificate: (input: SdkIntegrationTask<DeleteSigningCertificateCommandInput>) => Promise<DeleteSigningCertificateCommandOutput>;
    export const sdkIAMDeleteUser: (input: SdkIntegrationTask<DeleteUserCommandInput>) => Promise<DeleteUserCommandOutput>;
    export const sdkIAMDeleteUserPermissionsBoundary: (input: SdkIntegrationTask<DeleteUserPermissionsBoundaryCommandInput>) => Promise<DeleteUserPermissionsBoundaryCommandOutput>;
    export const sdkIAMDeleteUserPolicy: (input: SdkIntegrationTask<DeleteUserPolicyCommandInput>) => Promise<DeleteUserPolicyCommandOutput>;
    export const sdkIAMDeleteVirtualMFADevice: (input: SdkIntegrationTask<DeleteVirtualMFADeviceCommandInput>) => Promise<DeleteVirtualMFADeviceCommandOutput>;
    export const sdkIAMDetachGroupPolicy: (input: SdkIntegrationTask<DetachGroupPolicyCommandInput>) => Promise<DetachGroupPolicyCommandOutput>;
    export const sdkIAMDetachRolePolicy: (input: SdkIntegrationTask<DetachRolePolicyCommandInput>) => Promise<DetachRolePolicyCommandOutput>;
    export const sdkIAMDetachUserPolicy: (input: SdkIntegrationTask<DetachUserPolicyCommandInput>) => Promise<DetachUserPolicyCommandOutput>;
    export const sdkIAMEnableMFADevice: (input: SdkIntegrationTask<EnableMFADeviceCommandInput>) => Promise<EnableMFADeviceCommandOutput>;
    export const sdkIAMGenerateCredentialReport: (input: SdkIntegrationTask<GenerateCredentialReportCommandInput>) => Promise<GenerateCredentialReportCommandOutput>;
    export const sdkIAMGenerateOrganizationsAccessReport: (input: SdkIntegrationTask<GenerateOrganizationsAccessReportCommandInput>) => Promise<GenerateOrganizationsAccessReportCommandOutput>;
    export const sdkIAMGenerateServiceLastAccessedDetails: (input: SdkIntegrationTask<GenerateServiceLastAccessedDetailsCommandInput>) => Promise<GenerateServiceLastAccessedDetailsCommandOutput>;
    export const sdkIAMGetAccessKeyLastUsed: (input: SdkIntegrationTask<GetAccessKeyLastUsedCommandInput>) => Promise<GetAccessKeyLastUsedCommandOutput>;
    export const sdkIAMGetAccountAuthorizationDetails: (input: SdkIntegrationTask<GetAccountAuthorizationDetailsCommandInput>) => Promise<GetAccountAuthorizationDetailsCommandOutput>;
    export const sdkIAMGetAccountPasswordPolicy: (input: SdkIntegrationTask<GetAccountPasswordPolicyCommandInput>) => Promise<GetAccountPasswordPolicyCommandOutput>;
    export const sdkIAMGetAccountSummary: (input: SdkIntegrationTask<GetAccountSummaryCommandInput>) => Promise<GetAccountSummaryCommandOutput>;
    export const sdkIAMGetContextKeysForCustomPolicy: (input: SdkIntegrationTask<GetContextKeysForCustomPolicyCommandInput>) => Promise<GetContextKeysForCustomPolicyCommandOutput>;
    export const sdkIAMGetContextKeysForPrincipalPolicy: (input: SdkIntegrationTask<GetContextKeysForPrincipalPolicyCommandInput>) => Promise<GetContextKeysForPrincipalPolicyCommandOutput>;
    export const sdkIAMGetCredentialReport: (input: SdkIntegrationTask<GetCredentialReportCommandInput>) => Promise<GetCredentialReportCommandOutput>;
    export const sdkIAMGetGroup: (input: SdkIntegrationTask<GetGroupCommandInput>) => Promise<GetGroupCommandOutput>;
    export const sdkIAMGetGroupPolicy: (input: SdkIntegrationTask<GetGroupPolicyCommandInput>) => Promise<GetGroupPolicyCommandOutput>;
    export const sdkIAMGetInstanceProfile: (input: SdkIntegrationTask<GetInstanceProfileCommandInput>) => Promise<GetInstanceProfileCommandOutput>;
    export const sdkIAMGetLoginProfile: (input: SdkIntegrationTask<GetLoginProfileCommandInput>) => Promise<GetLoginProfileCommandOutput>;
    export const sdkIAMGetOpenIDConnectProvider: (input: SdkIntegrationTask<GetOpenIDConnectProviderCommandInput>) => Promise<GetOpenIDConnectProviderCommandOutput>;
    export const sdkIAMGetOrganizationsAccessReport: (input: SdkIntegrationTask<GetOrganizationsAccessReportCommandInput>) => Promise<GetOrganizationsAccessReportCommandOutput>;
    export const sdkIAMGetPolicy: (input: SdkIntegrationTask<GetPolicyCommandInput>) => Promise<GetPolicyCommandOutput>;
    export const sdkIAMGetPolicyVersion: (input: SdkIntegrationTask<GetPolicyVersionCommandInput>) => Promise<GetPolicyVersionCommandOutput>;
    export const sdkIAMGetRole: (input: SdkIntegrationTask<GetRoleCommandInput>) => Promise<GetRoleCommandOutput>;
    export const sdkIAMGetRolePolicy: (input: SdkIntegrationTask<GetRolePolicyCommandInput>) => Promise<GetRolePolicyCommandOutput>;
    export const sdkIAMGetSAMLProvider: (input: SdkIntegrationTask<GetSAMLProviderCommandInput>) => Promise<GetSAMLProviderCommandOutput>;
    export const sdkIAMGetSSHPublicKey: (input: SdkIntegrationTask<GetSSHPublicKeyCommandInput>) => Promise<GetSSHPublicKeyCommandOutput>;
    export const sdkIAMGetServerCertificate: (input: SdkIntegrationTask<GetServerCertificateCommandInput>) => Promise<GetServerCertificateCommandOutput>;
    export const sdkIAMGetServiceLastAccessedDetails: (input: SdkIntegrationTask<GetServiceLastAccessedDetailsCommandInput>) => Promise<GetServiceLastAccessedDetailsCommandOutput>;
    export const sdkIAMGetServiceLastAccessedDetailsWithEntities: (input: SdkIntegrationTask<GetServiceLastAccessedDetailsWithEntitiesCommandInput>) => Promise<GetServiceLastAccessedDetailsWithEntitiesCommandOutput>;
    export const sdkIAMGetServiceLinkedRoleDeletionStatus: (input: SdkIntegrationTask<GetServiceLinkedRoleDeletionStatusCommandInput>) => Promise<GetServiceLinkedRoleDeletionStatusCommandOutput>;
    export const sdkIAMGetUser: (input: SdkIntegrationTask<GetUserCommandInput>) => Promise<GetUserCommandOutput>;
    export const sdkIAMGetUserPolicy: (input: SdkIntegrationTask<GetUserPolicyCommandInput>) => Promise<GetUserPolicyCommandOutput>;
    export const sdkIAMListAccessKeys: (input: SdkIntegrationTask<ListAccessKeysCommandInput>) => Promise<ListAccessKeysCommandOutput>;
    export const sdkIAMListAccountAliases: (input: SdkIntegrationTask<ListAccountAliasesCommandInput>) => Promise<ListAccountAliasesCommandOutput>;
    export const sdkIAMListAttachedGroupPolicies: (input: SdkIntegrationTask<ListAttachedGroupPoliciesCommandInput>) => Promise<ListAttachedGroupPoliciesCommandOutput>;
    export const sdkIAMListAttachedRolePolicies: (input: SdkIntegrationTask<ListAttachedRolePoliciesCommandInput>) => Promise<ListAttachedRolePoliciesCommandOutput>;
    export const sdkIAMListAttachedUserPolicies: (input: SdkIntegrationTask<ListAttachedUserPoliciesCommandInput>) => Promise<ListAttachedUserPoliciesCommandOutput>;
    export const sdkIAMListEntitiesForPolicy: (input: SdkIntegrationTask<ListEntitiesForPolicyCommandInput>) => Promise<ListEntitiesForPolicyCommandOutput>;
    export const sdkIAMListGroupPolicies: (input: SdkIntegrationTask<ListGroupPoliciesCommandInput>) => Promise<ListGroupPoliciesCommandOutput>;
    export const sdkIAMListGroups: (input: SdkIntegrationTask<ListGroupsCommandInput>) => Promise<ListGroupsCommandOutput>;
    export const sdkIAMListGroupsForUser: (input: SdkIntegrationTask<ListGroupsForUserCommandInput>) => Promise<ListGroupsForUserCommandOutput>;
    export const sdkIAMListInstanceProfileTags: (input: SdkIntegrationTask<ListInstanceProfileTagsCommandInput>) => Promise<ListInstanceProfileTagsCommandOutput>;
    export const sdkIAMListInstanceProfiles: (input: SdkIntegrationTask<ListInstanceProfilesCommandInput>) => Promise<ListInstanceProfilesCommandOutput>;
    export const sdkIAMListInstanceProfilesForRole: (input: SdkIntegrationTask<ListInstanceProfilesForRoleCommandInput>) => Promise<ListInstanceProfilesForRoleCommandOutput>;
    export const sdkIAMListMFADeviceTags: (input: SdkIntegrationTask<ListMFADeviceTagsCommandInput>) => Promise<ListMFADeviceTagsCommandOutput>;
    export const sdkIAMListMFADevices: (input: SdkIntegrationTask<ListMFADevicesCommandInput>) => Promise<ListMFADevicesCommandOutput>;
    export const sdkIAMListOpenIDConnectProviderTags: (input: SdkIntegrationTask<ListOpenIDConnectProviderTagsCommandInput>) => Promise<ListOpenIDConnectProviderTagsCommandOutput>;
    export const sdkIAMListOpenIDConnectProviders: (input: SdkIntegrationTask<ListOpenIDConnectProvidersCommandInput>) => Promise<ListOpenIDConnectProvidersCommandOutput>;
    export const sdkIAMListPolicies: (input: SdkIntegrationTask<ListPoliciesCommandInput>) => Promise<ListPoliciesCommandOutput>;
    export const sdkIAMListPoliciesGrantingServiceAccess: (input: SdkIntegrationTask<ListPoliciesGrantingServiceAccessCommandInput>) => Promise<ListPoliciesGrantingServiceAccessCommandOutput>;
    export const sdkIAMListPolicyTags: (input: SdkIntegrationTask<ListPolicyTagsCommandInput>) => Promise<ListPolicyTagsCommandOutput>;
    export const sdkIAMListPolicyVersions: (input: SdkIntegrationTask<ListPolicyVersionsCommandInput>) => Promise<ListPolicyVersionsCommandOutput>;
    export const sdkIAMListRolePolicies: (input: SdkIntegrationTask<ListRolePoliciesCommandInput>) => Promise<ListRolePoliciesCommandOutput>;
    export const sdkIAMListRoleTags: (input: SdkIntegrationTask<ListRoleTagsCommandInput>) => Promise<ListRoleTagsCommandOutput>;
    export const sdkIAMListRoles: (input: SdkIntegrationTask<ListRolesCommandInput>) => Promise<ListRolesCommandOutput>;
    export const sdkIAMListSAMLProviderTags: (input: SdkIntegrationTask<ListSAMLProviderTagsCommandInput>) => Promise<ListSAMLProviderTagsCommandOutput>;
    export const sdkIAMListSAMLProviders: (input: SdkIntegrationTask<ListSAMLProvidersCommandInput>) => Promise<ListSAMLProvidersCommandOutput>;
    export const sdkIAMListSSHPublicKeys: (input: SdkIntegrationTask<ListSSHPublicKeysCommandInput>) => Promise<ListSSHPublicKeysCommandOutput>;
    export const sdkIAMListServerCertificateTags: (input: SdkIntegrationTask<ListServerCertificateTagsCommandInput>) => Promise<ListServerCertificateTagsCommandOutput>;
    export const sdkIAMListServerCertificates: (input: SdkIntegrationTask<ListServerCertificatesCommandInput>) => Promise<ListServerCertificatesCommandOutput>;
    export const sdkIAMListServiceSpecificCredentials: (input: SdkIntegrationTask<ListServiceSpecificCredentialsCommandInput>) => Promise<ListServiceSpecificCredentialsCommandOutput>;
    export const sdkIAMListSigningCertificates: (input: SdkIntegrationTask<ListSigningCertificatesCommandInput>) => Promise<ListSigningCertificatesCommandOutput>;
    export const sdkIAMListUserPolicies: (input: SdkIntegrationTask<ListUserPoliciesCommandInput>) => Promise<ListUserPoliciesCommandOutput>;
    export const sdkIAMListUserTags: (input: SdkIntegrationTask<ListUserTagsCommandInput>) => Promise<ListUserTagsCommandOutput>;
    export const sdkIAMListUsers: (input: SdkIntegrationTask<ListUsersCommandInput>) => Promise<ListUsersCommandOutput>;
    export const sdkIAMListVirtualMFADevices: (input: SdkIntegrationTask<ListVirtualMFADevicesCommandInput>) => Promise<ListVirtualMFADevicesCommandOutput>;
    export const sdkIAMPutGroupPolicy: (input: SdkIntegrationTask<PutGroupPolicyCommandInput>) => Promise<PutGroupPolicyCommandOutput>;
    export const sdkIAMPutRolePermissionsBoundary: (input: SdkIntegrationTask<PutRolePermissionsBoundaryCommandInput>) => Promise<PutRolePermissionsBoundaryCommandOutput>;
    export const sdkIAMPutRolePolicy: (input: SdkIntegrationTask<PutRolePolicyCommandInput>) => Promise<PutRolePolicyCommandOutput>;
    export const sdkIAMPutUserPermissionsBoundary: (input: SdkIntegrationTask<PutUserPermissionsBoundaryCommandInput>) => Promise<PutUserPermissionsBoundaryCommandOutput>;
    export const sdkIAMPutUserPolicy: (input: SdkIntegrationTask<PutUserPolicyCommandInput>) => Promise<PutUserPolicyCommandOutput>;
    export const sdkIAMRemoveClientIDFromOpenIDConnectProvider: (input: SdkIntegrationTask<RemoveClientIDFromOpenIDConnectProviderCommandInput>) => Promise<RemoveClientIDFromOpenIDConnectProviderCommandOutput>;
    export const sdkIAMRemoveRoleFromInstanceProfile: (input: SdkIntegrationTask<RemoveRoleFromInstanceProfileCommandInput>) => Promise<RemoveRoleFromInstanceProfileCommandOutput>;
    export const sdkIAMRemoveUserFromGroup: (input: SdkIntegrationTask<RemoveUserFromGroupCommandInput>) => Promise<RemoveUserFromGroupCommandOutput>;
    export const sdkIAMResetServiceSpecificCredential: (input: SdkIntegrationTask<ResetServiceSpecificCredentialCommandInput>) => Promise<ResetServiceSpecificCredentialCommandOutput>;
    export const sdkIAMResyncMFADevice: (input: SdkIntegrationTask<ResyncMFADeviceCommandInput>) => Promise<ResyncMFADeviceCommandOutput>;
    export const sdkIAMSetDefaultPolicyVersion: (input: SdkIntegrationTask<SetDefaultPolicyVersionCommandInput>) => Promise<SetDefaultPolicyVersionCommandOutput>;
    export const sdkIAMSetSecurityTokenServicePreferences: (input: SdkIntegrationTask<SetSecurityTokenServicePreferencesCommandInput>) => Promise<SetSecurityTokenServicePreferencesCommandOutput>;
    export const sdkIAMSimulateCustomPolicy: (input: SdkIntegrationTask<SimulateCustomPolicyCommandInput>) => Promise<SimulateCustomPolicyCommandOutput>;
    export const sdkIAMSimulatePrincipalPolicy: (input: SdkIntegrationTask<SimulatePrincipalPolicyCommandInput>) => Promise<SimulatePrincipalPolicyCommandOutput>;
    export const sdkIAMTagInstanceProfile: (input: SdkIntegrationTask<TagInstanceProfileCommandInput>) => Promise<TagInstanceProfileCommandOutput>;
    export const sdkIAMTagMFADevice: (input: SdkIntegrationTask<TagMFADeviceCommandInput>) => Promise<TagMFADeviceCommandOutput>;
    export const sdkIAMTagOpenIDConnectProvider: (input: SdkIntegrationTask<TagOpenIDConnectProviderCommandInput>) => Promise<TagOpenIDConnectProviderCommandOutput>;
    export const sdkIAMTagPolicy: (input: SdkIntegrationTask<TagPolicyCommandInput>) => Promise<TagPolicyCommandOutput>;
    export const sdkIAMTagRole: (input: SdkIntegrationTask<TagRoleCommandInput>) => Promise<TagRoleCommandOutput>;
    export const sdkIAMTagSAMLProvider: (input: SdkIntegrationTask<TagSAMLProviderCommandInput>) => Promise<TagSAMLProviderCommandOutput>;
    export const sdkIAMTagServerCertificate: (input: SdkIntegrationTask<TagServerCertificateCommandInput>) => Promise<TagServerCertificateCommandOutput>;
    export const sdkIAMTagUser: (input: SdkIntegrationTask<TagUserCommandInput>) => Promise<TagUserCommandOutput>;
    export const sdkIAMUntagInstanceProfile: (input: SdkIntegrationTask<UntagInstanceProfileCommandInput>) => Promise<UntagInstanceProfileCommandOutput>;
    export const sdkIAMUntagMFADevice: (input: SdkIntegrationTask<UntagMFADeviceCommandInput>) => Promise<UntagMFADeviceCommandOutput>;
    export const sdkIAMUntagOpenIDConnectProvider: (input: SdkIntegrationTask<UntagOpenIDConnectProviderCommandInput>) => Promise<UntagOpenIDConnectProviderCommandOutput>;
    export const sdkIAMUntagPolicy: (input: SdkIntegrationTask<UntagPolicyCommandInput>) => Promise<UntagPolicyCommandOutput>;
    export const sdkIAMUntagRole: (input: SdkIntegrationTask<UntagRoleCommandInput>) => Promise<UntagRoleCommandOutput>;
    export const sdkIAMUntagSAMLProvider: (input: SdkIntegrationTask<UntagSAMLProviderCommandInput>) => Promise<UntagSAMLProviderCommandOutput>;
    export const sdkIAMUntagServerCertificate: (input: SdkIntegrationTask<UntagServerCertificateCommandInput>) => Promise<UntagServerCertificateCommandOutput>;
    export const sdkIAMUntagUser: (input: SdkIntegrationTask<UntagUserCommandInput>) => Promise<UntagUserCommandOutput>;
    export const sdkIAMUpdateAccessKey: (input: SdkIntegrationTask<UpdateAccessKeyCommandInput>) => Promise<UpdateAccessKeyCommandOutput>;
    export const sdkIAMUpdateAccountPasswordPolicy: (input: SdkIntegrationTask<UpdateAccountPasswordPolicyCommandInput>) => Promise<UpdateAccountPasswordPolicyCommandOutput>;
    export const sdkIAMUpdateAssumeRolePolicy: (input: SdkIntegrationTask<UpdateAssumeRolePolicyCommandInput>) => Promise<UpdateAssumeRolePolicyCommandOutput>;
    export const sdkIAMUpdateGroup: (input: SdkIntegrationTask<UpdateGroupCommandInput>) => Promise<UpdateGroupCommandOutput>;
    export const sdkIAMUpdateLoginProfile: (input: SdkIntegrationTask<UpdateLoginProfileCommandInput>) => Promise<UpdateLoginProfileCommandOutput>;
    export const sdkIAMUpdateOpenIDConnectProviderThumbprint: (input: SdkIntegrationTask<UpdateOpenIDConnectProviderThumbprintCommandInput>) => Promise<UpdateOpenIDConnectProviderThumbprintCommandOutput>;
    export const sdkIAMUpdateRole: (input: SdkIntegrationTask<UpdateRoleCommandInput>) => Promise<UpdateRoleCommandOutput>;
    export const sdkIAMUpdateRoleDescription: (input: SdkIntegrationTask<UpdateRoleDescriptionCommandInput>) => Promise<UpdateRoleDescriptionCommandOutput>;
    export const sdkIAMUpdateSAMLProvider: (input: SdkIntegrationTask<UpdateSAMLProviderCommandInput>) => Promise<UpdateSAMLProviderCommandOutput>;
    export const sdkIAMUpdateSSHPublicKey: (input: SdkIntegrationTask<UpdateSSHPublicKeyCommandInput>) => Promise<UpdateSSHPublicKeyCommandOutput>;
    export const sdkIAMUpdateServerCertificate: (input: SdkIntegrationTask<UpdateServerCertificateCommandInput>) => Promise<UpdateServerCertificateCommandOutput>;
    export const sdkIAMUpdateServiceSpecificCredential: (input: SdkIntegrationTask<UpdateServiceSpecificCredentialCommandInput>) => Promise<UpdateServiceSpecificCredentialCommandOutput>;
    export const sdkIAMUpdateSigningCertificate: (input: SdkIntegrationTask<UpdateSigningCertificateCommandInput>) => Promise<UpdateSigningCertificateCommandOutput>;
    export const sdkIAMUpdateUser: (input: SdkIntegrationTask<UpdateUserCommandInput>) => Promise<UpdateUserCommandOutput>;
    export const sdkIAMUploadSSHPublicKey: (input: SdkIntegrationTask<UploadSSHPublicKeyCommandInput>) => Promise<UploadSSHPublicKeyCommandOutput>;
    export const sdkIAMUploadServerCertificate: (input: SdkIntegrationTask<UploadServerCertificateCommandInput>) => Promise<UploadServerCertificateCommandOutput>;
    export const sdkIAMUploadSigningCertificate: (input: SdkIntegrationTask<UploadSigningCertificateCommandInput>) => Promise<UploadSigningCertificateCommandOutput>;
}

declare module '@ts2asl/asl-lib/sdk-integrations-sts' {
    import { SdkIntegrationTask } from "@ts2asl/asl-lib/asl";
    import { DecodeAuthorizationMessageCommandInput, DecodeAuthorizationMessageCommandOutput } from "@aws-sdk/client-sts";
    import { GetAccessKeyInfoCommandInput, GetAccessKeyInfoCommandOutput } from "@aws-sdk/client-sts";
    import { GetCallerIdentityCommandInput, GetCallerIdentityCommandOutput } from "@aws-sdk/client-sts";
    import { GetFederationTokenCommandInput, GetFederationTokenCommandOutput } from "@aws-sdk/client-sts";
    import { GetSessionTokenCommandInput, GetSessionTokenCommandOutput } from "@aws-sdk/client-sts";
    export const sdkSTSDecodeAuthorizationMessage: (input: SdkIntegrationTask<DecodeAuthorizationMessageCommandInput>) => Promise<DecodeAuthorizationMessageCommandOutput>;
    export const sdkSTSGetAccessKeyInfo: (input: SdkIntegrationTask<GetAccessKeyInfoCommandInput>) => Promise<GetAccessKeyInfoCommandOutput>;
    export const sdkSTSGetCallerIdentity: (input: SdkIntegrationTask<GetCallerIdentityCommandInput>) => Promise<GetCallerIdentityCommandOutput>;
    export const sdkSTSGetFederationToken: (input: SdkIntegrationTask<GetFederationTokenCommandInput>) => Promise<GetFederationTokenCommandOutput>;
    export const sdkSTSGetSessionToken: (input: SdkIntegrationTask<GetSessionTokenCommandInput>) => Promise<GetSessionTokenCommandOutput>;
}

declare module '@ts2asl/asl-lib/deploy' {
    export namespace deploy {
        const asStateMachine: <T>(fn: T) => T;
        const asLambda: <T>(fn: T) => T;
        const getParameter: (parameterName: string) => string;
        const setParameter: (parameterName: string, value: string) => void;
        const getLambdaName: (functionName: string | Function) => string;
        const getLambdaArn: (functionName: string | Function) => string;
        const getStateMachineName: (functionName: string | Function) => string;
        const getStateMachineArn: (functionName: string | Function) => string;
        const evalConst: <T>(identifier: T) => T;
    }
}

declare module '@ts2asl/asl-lib/runtime' {
    import { AslError } from "@ts2asl/asl-lib/asl";
    export namespace runtime {
        const createError: (error: string, cause: string) => AslError & Error & {
            name: string;
        };
    }
}

declare module '@ts2asl/asl-lib/testing' {
    import { StateMachineContext } from "@ts2asl/asl-lib/asl";
    export namespace testing {
        const createTestContext: <TInput>(input: TInput, context?: Partial<StateMachineContext<TInput>>) => StateMachineContext<TInput>;
    }
}

`