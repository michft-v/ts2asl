{
  "statements": [
    {
      "stateName": "Assign myArray",
      "name": {
        "identifier": "myArray",
        "type": "object",
        "_syntaxKind": "identifier"
      },
      "source": "myArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",
      "expression": {
        "elements": [
          {
            "value": 1,
            "type": "numeric",
            "_syntaxKind": "literal"
          },
          {
            "value": 2,
            "type": "numeric",
            "_syntaxKind": "literal"
          },
          {
            "value": 3,
            "type": "numeric",
            "_syntaxKind": "literal"
          },
          {
            "value": 4,
            "type": "numeric",
            "_syntaxKind": "literal"
          },
          {
            "value": 5,
            "type": "numeric",
            "_syntaxKind": "literal"
          },
          {
            "value": 6,
            "type": "numeric",
            "_syntaxKind": "literal"
          },
          {
            "value": 7,
            "type": "numeric",
            "_syntaxKind": "literal"
          },
          {
            "value": 8,
            "type": "numeric",
            "_syntaxKind": "literal"
          },
          {
            "value": 9,
            "type": "numeric",
            "_syntaxKind": "literal"
          },
          {
            "value": 10,
            "type": "numeric",
            "_syntaxKind": "literal"
          }
        ],
        "_syntaxKind": "literal-array"
      },
      "_syntaxKind": "variable-assignment"
    },
    {
      "stateName": "Return",
      "expression": {
        "stateName": "myArray.map => x",
        "items": {
          "identifier": "myArray",
          "type": "object",
          "_syntaxKind": "identifier"
        },
        "iterator": {
          "inputArgumentName": {
            "identifier": "x",
            "type": "object",
            "_syntaxKind": "identifier"
          },
          "statements": [
            {
              "stateName": "If (x === 1 || x === 3 || ...",
              "condition": {
                "lhs": {
                  "lhs": {
                    "lhs": {
                      "lhs": {
                        "lhs": {
                          "identifier": "x",
                          "type": "numeric",
                          "_syntaxKind": "identifier"
                        },
                        "operator": "eq",
                        "rhs": {
                          "value": 1,
                          "type": "numeric",
                          "_syntaxKind": "literal"
                        },
                        "_syntaxKind": "binary-expression"
                      },
                      "operator": "or",
                      "rhs": {
                        "lhs": {
                          "identifier": "x",
                          "type": "numeric",
                          "_syntaxKind": "identifier"
                        },
                        "operator": "eq",
                        "rhs": {
                          "value": 3,
                          "type": "numeric",
                          "_syntaxKind": "literal"
                        },
                        "_syntaxKind": "binary-expression"
                      },
                      "_syntaxKind": "binary-expression"
                    },
                    "operator": "or",
                    "rhs": {
                      "lhs": {
                        "identifier": "x",
                        "type": "numeric",
                        "_syntaxKind": "identifier"
                      },
                      "operator": "eq",
                      "rhs": {
                        "value": 5,
                        "type": "numeric",
                        "_syntaxKind": "literal"
                      },
                      "_syntaxKind": "binary-expression"
                    },
                    "_syntaxKind": "binary-expression"
                  },
                  "operator": "or",
                  "rhs": {
                    "lhs": {
                      "identifier": "x",
                      "type": "numeric",
                      "_syntaxKind": "identifier"
                    },
                    "operator": "eq",
                    "rhs": {
                      "value": 7,
                      "type": "numeric",
                      "_syntaxKind": "literal"
                    },
                    "_syntaxKind": "binary-expression"
                  },
                  "_syntaxKind": "binary-expression"
                },
                "operator": "or",
                "rhs": {
                  "lhs": {
                    "identifier": "x",
                    "type": "numeric",
                    "_syntaxKind": "identifier"
                  },
                  "operator": "eq",
                  "rhs": {
                    "value": 9,
                    "type": "numeric",
                    "_syntaxKind": "literal"
                  },
                  "_syntaxKind": "binary-expression"
                },
                "_syntaxKind": "binary-expression"
              },
              "then": {
                "statements": [
                  {
                    "stateName": "Return { age: x, ...",
                    "expression": {
                      "properties": {
                        "age": {
                          "identifier": "x",
                          "type": "unknown",
                          "_syntaxKind": "identifier"
                        },
                        "species": {
                          "value": "dog",
                          "type": "string",
                          "_syntaxKind": "literal"
                        }
                      },
                      "_syntaxKind": "literal-object"
                    },
                    "_syntaxKind": "return"
                  }
                ],
                "_syntaxKind": "function"
              },
              "else": {
                "statements": [
                  {
                    "stateName": "Return { age: x, ...",
                    "expression": {
                      "properties": {
                        "age": {
                          "identifier": "x",
                          "type": "numeric",
                          "_syntaxKind": "identifier"
                        },
                        "species": {
                          "value": "cat",
                          "type": "string",
                          "_syntaxKind": "literal"
                        }
                      },
                      "_syntaxKind": "literal-object"
                    },
                    "_syntaxKind": "return"
                  }
                ],
                "_syntaxKind": "function"
              },
              "source": "if (x === 1 || x === 3 || x === 5 || x === 7 || x == 9) {\n      return {\n        age: x,\n        species: \"dog\",\n      }\n    } else {\n      return {\n        age: x,\n        species: \"cat\",\n      }\n    }",
              "_syntaxKind": "if"
            }
          ],
          "_syntaxKind": "function"
        },
        "source": "myArray.map(x => {\n    if (x === 1 || x === 3 || x === 5 || x === 7 || x == 9) {\n      return {\n        age: x,\n        species: \"dog\",\n      }\n    } else {\n      return {\n        age: x,\n        species: \"cat\",\n      }\n    }\n  })",
        "_syntaxKind": "asl-map-state"
      },
      "_syntaxKind": "return"
    }
  ],
  "_syntaxKind": "statemachine"
}