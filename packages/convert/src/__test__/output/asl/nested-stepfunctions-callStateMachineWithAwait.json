{
  "StartAt": "Initialize",
  "States": {
    "Initialize": {
      "Type": "Pass",
      "ResultPath": "$",
      "Parameters": {
        "vars.$": "$$.Execution.Input",
        "_undefined": null,
        "_null": null
      },
      "Next": "childStateMachine({firstN ..."
    },
    "childStateMachine({firstN ...": {
      "Type": "Task",
      "Resource": "arn:aws:states:::states:startExecution.sync",
      "Parameters": {
        "StateMachineArn": "[!state-machine[childStateMachine]arn]",
        "Input": {
          "firstName": "Santa",
          "lastName": "Claus",
          "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
        }
      },
      "Comment": "source: childStateMachine({firstName: \"Santa\", lastNam ...",
      "ResultPath": "$.tmp.result",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Evaluate StringToJson($.t ..."
    },
    "Evaluate StringToJson($.t ...": {
      "Type": "Pass",
      "ResultPath": "$.tmp.eval",
      "Parameters": {
        "value.$": "States.StringToJson($.tmp.result.Output)"
      },
      "Next": "Convert Result"
    },
    "Convert Result": {
      "Type": "Pass",
      "InputPath": "$.tmp.eval.value",
      "ResultPath": "$.tmp.result",
      "Next": "Assign name"
    },
    "Assign name": {
      "Type": "Pass",
      "InputPath": "$.tmp.result",
      "ResultPath": "$.vars.name",
      "Comment": "source: name = await childStateMachine({firstName: \"Sa ...",
      "Next": "Return name"
    },
    "Return name": {
      "Type": "Pass",
      "InputPath": "$.vars.name",
      "End": true
    }
  }
}